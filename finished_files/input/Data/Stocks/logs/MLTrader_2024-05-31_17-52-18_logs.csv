2024-05-31 17:52:18,132: asyncio: INFO: [MLTrader] Executing the initialize lifecycle method
2024-05-31 17:52:18,178: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:18,276: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:18,675: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:18,823: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:18,882: root: INFO: Current backtesting datetime 2023-05-11 10:00:00-04:00
2024-05-31 17:52:18,883: root: INFO: Current backtesting datetime 2023-05-11 11:00:00-04:00
2024-05-31 17:52:18,883: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:18,884: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:18[0m
2024-05-31 17:52:18,884: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:19,125: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:19,152: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:19,383: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:19,644: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:20,058: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:20,426: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:20[0m
2024-05-31 17:52:20,427: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:20,428: root: INFO: Current backtesting datetime 2023-05-11 11:30:00-04:00
2024-05-31 17:52:20,429: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:20[0m
2024-05-31 17:52:20,429: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:20,430: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:20,793: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:20,886: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:21,389: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:21,420: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:21,455: asyncio: WARNING: [MLTrader] Selling all positions for MLTrader strategy
2024-05-31 17:52:21,455: asyncio: INFO: [MLTrader] [32mNew order was created: market order of | 2427.0 SPY buy | at price $420.1890124511719 of class bracket with status new[0m
2024-05-31 17:52:21,458: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,459: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,459: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,459: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,460: root: INFO: market order of | 2427.0 SPY buy | at price $420.1890124511719 of class bracket with status new was sent to broker backtesting
2024-05-31 17:52:21,460: root: INFO: market order of | 2427.0 SPY buy | at price $420.1890124511719 of class bracket with status new was sent to broker backtesting
2024-05-31 17:52:21,460: asyncio: INFO: [MLTrader] [32mOrder was filled: market order of | 2427.0 SPY buy | at price $411.95 of class bracket with status fill[0m
2024-05-31 17:52:21,463: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,464: root: INFO: Current backtesting datetime 2023-05-11 12:00:00-04:00
2024-05-31 17:52:21,465: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,465: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,465: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,465: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,465: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,465: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,465: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,465: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,468: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,468: root: INFO: Current backtesting datetime 2023-05-11 12:30:00-04:00
2024-05-31 17:52:21,469: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,470: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,470: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,470: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,470: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,471: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,471: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,471: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,471: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,472: root: INFO: Current backtesting datetime 2023-05-11 13:00:00-04:00
2024-05-31 17:52:21,473: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,473: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,473: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,473: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,474: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,474: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,474: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,474: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,475: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,475: root: INFO: Current backtesting datetime 2023-05-11 13:30:00-04:00
2024-05-31 17:52:21,477: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,477: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,477: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,477: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,478: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,478: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,478: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,478: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,479: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,480: root: INFO: Current backtesting datetime 2023-05-11 14:00:00-04:00
2024-05-31 17:52:21,480: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,481: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,481: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,481: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,481: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,481: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,481: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,482: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,483: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,484: root: INFO: Current backtesting datetime 2023-05-11 14:30:00-04:00
2024-05-31 17:52:21,485: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,485: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,485: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,485: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,486: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,486: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,486: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,487: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,487: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,488: root: INFO: Current backtesting datetime 2023-05-11 15:00:00-04:00
2024-05-31 17:52:21,489: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,489: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,489: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,489: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,490: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,490: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,490: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,490: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,491: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,491: root: INFO: Current backtesting datetime 2023-05-11 15:30:00-04:00
2024-05-31 17:52:21,493: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,493: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,493: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,493: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,494: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,494: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,494: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,494: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,495: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,496: root: INFO: Current backtesting datetime 2023-05-11 16:00:00-04:00
2024-05-31 17:52:21,497: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:21,497: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,497: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,498: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,498: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,498: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,498: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,499: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,499: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,499: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,499: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,499: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,500: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,501: root: INFO: Current backtesting datetime 2023-05-11 15:59:00-04:00
2024-05-31 17:52:21,501: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:21,501: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,501: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,501: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,502: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,502: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,502: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,502: root: INFO: Current backtesting datetime 2023-05-11 16:00:00-04:00
2024-05-31 17:52:21,502: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:21,502: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,502: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,503: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,503: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,503: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,503: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,504: root: INFO: Current backtesting datetime 2023-05-12 08:30:00-04:00
2024-05-31 17:52:21,505: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,505: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,505: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:21,505: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,505: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,507: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,507: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,507: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,507: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,508: root: INFO: Current backtesting datetime 2023-05-12 09:30:00-04:00
2024-05-31 17:52:21,508: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:21,509: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,509: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,509: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,509: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,510: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,510: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,510: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,510: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,511: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,512: root: INFO: Current backtesting datetime 2023-05-12 10:00:00-04:00
2024-05-31 17:52:21,512: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,512: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,512: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,512: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,513: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,513: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,513: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,514: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,514: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,515: root: INFO: Current backtesting datetime 2023-05-12 10:30:00-04:00
2024-05-31 17:52:21,515: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,517: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,517: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,517: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,517: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,518: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,518: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,518: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,519: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,520: root: INFO: Current backtesting datetime 2023-05-12 11:00:00-04:00
2024-05-31 17:52:21,521: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,521: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,521: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,521: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,521: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,521: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,521: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,522: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,522: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,523: root: INFO: Current backtesting datetime 2023-05-12 11:30:00-04:00
2024-05-31 17:52:21,524: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,524: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,524: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,524: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,525: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,525: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,525: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,525: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,526: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,527: root: INFO: Current backtesting datetime 2023-05-12 12:00:00-04:00
2024-05-31 17:52:21,527: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,527: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,527: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,528: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,528: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,528: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,528: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,529: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,529: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,530: root: INFO: Current backtesting datetime 2023-05-12 12:30:00-04:00
2024-05-31 17:52:21,531: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,531: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,531: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,531: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,532: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,532: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,532: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,532: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,533: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,534: root: INFO: Current backtesting datetime 2023-05-12 13:00:00-04:00
2024-05-31 17:52:21,555: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,555: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,555: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,555: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,555: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,555: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,555: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,555: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,557: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,558: root: INFO: Current backtesting datetime 2023-05-12 13:30:00-04:00
2024-05-31 17:52:21,559: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,559: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,559: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,559: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,560: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,560: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,560: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,561: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,561: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,562: root: INFO: Current backtesting datetime 2023-05-12 14:00:00-04:00
2024-05-31 17:52:21,563: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,563: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,563: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,563: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,564: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,564: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,564: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,564: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,564: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,565: root: INFO: Current backtesting datetime 2023-05-12 14:30:00-04:00
2024-05-31 17:52:21,566: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,567: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,567: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,567: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,567: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,567: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,567: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,567: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,568: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,569: root: INFO: Current backtesting datetime 2023-05-12 15:00:00-04:00
2024-05-31 17:52:21,570: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,570: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,570: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,570: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,570: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,571: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,571: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,571: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,572: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,572: root: INFO: Current backtesting datetime 2023-05-12 15:30:00-04:00
2024-05-31 17:52:21,573: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,574: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,574: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,574: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,574: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,574: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,574: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,574: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,576: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,577: root: INFO: Current backtesting datetime 2023-05-12 16:00:00-04:00
2024-05-31 17:52:21,577: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:21,577: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,577: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,578: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,578: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,578: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,578: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,579: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,579: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,579: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,580: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,580: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,580: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,581: root: INFO: Current backtesting datetime 2023-05-12 15:59:00-04:00
2024-05-31 17:52:21,581: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:21,581: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,581: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,581: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,582: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,582: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,582: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,583: root: INFO: Current backtesting datetime 2023-05-12 16:00:00-04:00
2024-05-31 17:52:21,583: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:21,583: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,583: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,583: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,584: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,584: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,584: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,585: root: INFO: Current backtesting datetime 2023-05-15 08:30:00-04:00
2024-05-31 17:52:21,585: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,586: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,587: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:21,587: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,587: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,587: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,587: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,588: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,588: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,589: root: INFO: Current backtesting datetime 2023-05-15 09:30:00-04:00
2024-05-31 17:52:21,589: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:21,590: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,591: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,591: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,591: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,591: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,591: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,591: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,592: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,592: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,593: root: INFO: Current backtesting datetime 2023-05-15 10:00:00-04:00
2024-05-31 17:52:21,594: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,594: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,594: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,594: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,595: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,595: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,595: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,595: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,596: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,597: root: INFO: Current backtesting datetime 2023-05-15 10:30:00-04:00
2024-05-31 17:52:21,597: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,598: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,598: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,598: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,598: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,598: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,598: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,599: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,599: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,600: root: INFO: Current backtesting datetime 2023-05-15 11:00:00-04:00
2024-05-31 17:52:21,601: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,601: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,601: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,601: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,601: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,601: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,601: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,602: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,602: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,603: root: INFO: Current backtesting datetime 2023-05-15 11:30:00-04:00
2024-05-31 17:52:21,604: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,605: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,605: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,605: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,606: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,606: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,606: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,607: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,608: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,610: root: INFO: Current backtesting datetime 2023-05-15 12:00:00-04:00
2024-05-31 17:52:21,612: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,612: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,612: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,612: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,613: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,613: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,613: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,614: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,615: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,617: root: INFO: Current backtesting datetime 2023-05-15 12:30:00-04:00
2024-05-31 17:52:21,618: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,618: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,618: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,618: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,619: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,620: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,620: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,620: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,621: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,623: root: INFO: Current backtesting datetime 2023-05-15 13:00:00-04:00
2024-05-31 17:52:21,625: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,625: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,625: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,625: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,626: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,627: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,627: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,627: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,628: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,629: root: INFO: Current backtesting datetime 2023-05-15 13:30:00-04:00
2024-05-31 17:52:21,631: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,632: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,632: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,632: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,633: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,633: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,633: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,634: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,635: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,636: root: INFO: Current backtesting datetime 2023-05-15 14:00:00-04:00
2024-05-31 17:52:21,640: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,640: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,640: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,640: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,641: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,641: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,642: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,642: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,644: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,645: root: INFO: Current backtesting datetime 2023-05-15 14:30:00-04:00
2024-05-31 17:52:21,647: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,647: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,647: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,647: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,649: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,649: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,649: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,650: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,651: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,653: root: INFO: Current backtesting datetime 2023-05-15 15:00:00-04:00
2024-05-31 17:52:21,654: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,655: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,655: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,655: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,656: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,656: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,657: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,657: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,658: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,659: root: INFO: Current backtesting datetime 2023-05-15 15:30:00-04:00
2024-05-31 17:52:21,660: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,661: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,661: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,661: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,662: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,662: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,662: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,662: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,664: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,665: root: INFO: Current backtesting datetime 2023-05-15 16:00:00-04:00
2024-05-31 17:52:21,666: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:21,667: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,667: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,667: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,667: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,667: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,668: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,669: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,670: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,670: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,671: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,671: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,672: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,675: root: INFO: Current backtesting datetime 2023-05-15 15:59:00-04:00
2024-05-31 17:52:21,671: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:21,677: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:21,678: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,678: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,678: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,679: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,679: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,679: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,680: root: INFO: Current backtesting datetime 2023-05-15 16:00:00-04:00
2024-05-31 17:52:21,680: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:21,680: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,680: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,681: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,681: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,681: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,681: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,682: root: INFO: Current backtesting datetime 2023-05-16 08:30:00-04:00
2024-05-31 17:52:21,683: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,683: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,685: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:21,685: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,685: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,686: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,686: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,686: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,686: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,687: root: INFO: Current backtesting datetime 2023-05-16 09:30:00-04:00
2024-05-31 17:52:21,687: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:21,689: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,690: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,690: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,691: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,691: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,692: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,692: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,693: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,694: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,695: root: INFO: Current backtesting datetime 2023-05-16 10:00:00-04:00
2024-05-31 17:52:21,697: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,697: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,697: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,697: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,698: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,699: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,699: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,699: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,700: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,701: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:21,701: root: INFO: Current backtesting datetime 2023-05-16 10:30:00-04:00
2024-05-31 17:52:21,703: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,703: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,703: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,703: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,704: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,704: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,704: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,704: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,705: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,707: root: INFO: Current backtesting datetime 2023-05-16 11:00:00-04:00
2024-05-31 17:52:21,708: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,708: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,708: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,708: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,709: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,709: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,709: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,710: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,710: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,711: root: INFO: Current backtesting datetime 2023-05-16 11:30:00-04:00
2024-05-31 17:52:21,713: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,713: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,713: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,713: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,714: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,715: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,715: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,715: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,717: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,718: root: INFO: Current backtesting datetime 2023-05-16 12:00:00-04:00
2024-05-31 17:52:21,719: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,719: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,719: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,719: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,720: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,720: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,720: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,720: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,721: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,722: root: INFO: Current backtesting datetime 2023-05-16 12:30:00-04:00
2024-05-31 17:52:21,722: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,723: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,723: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,723: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,723: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,723: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,723: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,723: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,725: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,726: root: INFO: Current backtesting datetime 2023-05-16 13:00:00-04:00
2024-05-31 17:52:21,727: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,727: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,727: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,727: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,727: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,727: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,727: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,728: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,729: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,729: root: INFO: Current backtesting datetime 2023-05-16 13:30:00-04:00
2024-05-31 17:52:21,730: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,730: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,730: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,730: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,732: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,732: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,732: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,733: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,734: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,735: root: INFO: Current backtesting datetime 2023-05-16 14:00:00-04:00
2024-05-31 17:52:21,736: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,736: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,736: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,736: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,737: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,737: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,737: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,738: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,739: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,740: root: INFO: Current backtesting datetime 2023-05-16 14:30:00-04:00
2024-05-31 17:52:21,741: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,741: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,741: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,741: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,741: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,741: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,741: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,741: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,742: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,743: root: INFO: Current backtesting datetime 2023-05-16 15:00:00-04:00
2024-05-31 17:52:21,744: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,744: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,744: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,744: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,745: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,745: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,745: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,745: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,745: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,747: root: INFO: Current backtesting datetime 2023-05-16 15:30:00-04:00
2024-05-31 17:52:21,748: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,748: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,748: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,748: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,749: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,749: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,749: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,750: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,750: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,751: root: INFO: Current backtesting datetime 2023-05-16 16:00:00-04:00
2024-05-31 17:52:21,752: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:21,752: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,752: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,752: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,752: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,752: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,753: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,753: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,753: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,754: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,754: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,754: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,754: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,755: root: INFO: Current backtesting datetime 2023-05-16 15:59:00-04:00
2024-05-31 17:52:21,755: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:21,755: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,755: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,755: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,755: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,755: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,757: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,757: root: INFO: Current backtesting datetime 2023-05-16 16:00:00-04:00
2024-05-31 17:52:21,758: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:21,758: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,758: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,758: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,758: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,758: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,758: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,759: root: INFO: Current backtesting datetime 2023-05-17 08:30:00-04:00
2024-05-31 17:52:21,760: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,760: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,761: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:21,761: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,761: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,761: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,761: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,761: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,761: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,762: root: INFO: Current backtesting datetime 2023-05-17 09:30:00-04:00
2024-05-31 17:52:21,762: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:21,764: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,764: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,764: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,764: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,765: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,765: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,765: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,765: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,765: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,767: root: INFO: Current backtesting datetime 2023-05-17 10:00:00-04:00
2024-05-31 17:52:21,768: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,768: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,768: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,768: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,769: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,769: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,769: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,770: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,770: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,771: root: INFO: Current backtesting datetime 2023-05-17 10:30:00-04:00
2024-05-31 17:52:21,771: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,772: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,772: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,772: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,772: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,772: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,772: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,773: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,773: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,774: root: INFO: Current backtesting datetime 2023-05-17 11:00:00-04:00
2024-05-31 17:52:21,775: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,775: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,775: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,775: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,776: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,776: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,776: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,776: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,776: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,778: root: INFO: Current backtesting datetime 2023-05-17 11:30:00-04:00
2024-05-31 17:52:21,779: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,779: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,779: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,779: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,780: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,780: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,780: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,780: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,781: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,781: root: INFO: Current backtesting datetime 2023-05-17 12:00:00-04:00
2024-05-31 17:52:21,783: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,783: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,783: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,783: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,784: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,784: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,784: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,784: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,785: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,786: root: INFO: Current backtesting datetime 2023-05-17 12:30:00-04:00
2024-05-31 17:52:21,787: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,787: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,787: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,787: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,787: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,787: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,787: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,787: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,789: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,789: root: INFO: Current backtesting datetime 2023-05-17 13:00:00-04:00
2024-05-31 17:52:21,790: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,791: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,791: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,791: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,791: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,791: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,791: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,792: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,792: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,792: root: INFO: Current backtesting datetime 2023-05-17 13:30:00-04:00
2024-05-31 17:52:21,793: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,793: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,794: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,794: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,794: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,794: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,794: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,794: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,795: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,795: root: INFO: Current backtesting datetime 2023-05-17 14:00:00-04:00
2024-05-31 17:52:21,797: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,798: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,798: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,798: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,798: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,798: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,798: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,798: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,799: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,800: root: INFO: Current backtesting datetime 2023-05-17 14:30:00-04:00
2024-05-31 17:52:21,801: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,801: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,801: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,801: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,801: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,802: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,802: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,802: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,802: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,804: root: INFO: Current backtesting datetime 2023-05-17 15:00:00-04:00
2024-05-31 17:52:21,805: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,805: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,805: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,805: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,806: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,806: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,806: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,806: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,807: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,808: root: INFO: Current backtesting datetime 2023-05-17 15:30:00-04:00
2024-05-31 17:52:21,808: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,808: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,809: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,809: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,809: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,809: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,809: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,810: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,811: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,811: root: INFO: Current backtesting datetime 2023-05-17 16:00:00-04:00
2024-05-31 17:52:21,812: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:21,812: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,812: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,832: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,833: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,833: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,833: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,834: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,834: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,834: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,834: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,834: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,835: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,835: root: INFO: Current backtesting datetime 2023-05-17 15:59:00-04:00
2024-05-31 17:52:21,835: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:21,835: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,835: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,837: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,837: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,837: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,837: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,838: root: INFO: Current backtesting datetime 2023-05-17 16:00:00-04:00
2024-05-31 17:52:21,838: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:21,838: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,838: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,838: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,839: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,839: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,839: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,840: root: INFO: Current backtesting datetime 2023-05-18 08:30:00-04:00
2024-05-31 17:52:21,840: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,841: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,841: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:21,841: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,841: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,842: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,842: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,842: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,842: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,843: root: INFO: Current backtesting datetime 2023-05-18 09:30:00-04:00
2024-05-31 17:52:21,843: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:21,845: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,845: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,845: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,845: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,846: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,846: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,846: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,846: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,847: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,847: root: INFO: Current backtesting datetime 2023-05-18 10:00:00-04:00
2024-05-31 17:52:21,848: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,849: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,849: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,849: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,849: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,849: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,849: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,849: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,850: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,851: root: INFO: Current backtesting datetime 2023-05-18 10:30:00-04:00
2024-05-31 17:52:21,851: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,852: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,852: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,852: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,852: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,852: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,852: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,853: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,853: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,853: root: INFO: Current backtesting datetime 2023-05-18 11:00:00-04:00
2024-05-31 17:52:21,855: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,855: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,855: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,855: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,856: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,856: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,856: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,856: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,857: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,857: root: INFO: Current backtesting datetime 2023-05-18 11:30:00-04:00
2024-05-31 17:52:21,858: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,858: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,859: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,859: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,859: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,859: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,859: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,860: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,860: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,862: root: INFO: Current backtesting datetime 2023-05-18 12:00:00-04:00
2024-05-31 17:52:21,863: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,863: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,863: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,863: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,863: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,863: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,863: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,864: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,864: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,865: root: INFO: Current backtesting datetime 2023-05-18 12:30:00-04:00
2024-05-31 17:52:21,866: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,866: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,866: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,866: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,867: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,867: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,867: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,868: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,869: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,870: root: INFO: Current backtesting datetime 2023-05-18 13:00:00-04:00
2024-05-31 17:52:21,871: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,871: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,871: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,871: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,872: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,872: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,872: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,872: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,873: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,874: root: INFO: Current backtesting datetime 2023-05-18 13:30:00-04:00
2024-05-31 17:52:21,874: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,874: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,874: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,875: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,875: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,875: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,875: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,875: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,877: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,877: root: INFO: Current backtesting datetime 2023-05-18 14:00:00-04:00
2024-05-31 17:52:21,878: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,879: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,879: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,879: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,879: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,879: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,879: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,880: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,880: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,881: root: INFO: Current backtesting datetime 2023-05-18 14:30:00-04:00
2024-05-31 17:52:21,882: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,882: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,882: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,882: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,883: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,883: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,883: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,883: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,884: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,884: root: INFO: Current backtesting datetime 2023-05-18 15:00:00-04:00
2024-05-31 17:52:21,886: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,886: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,886: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,886: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,886: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,886: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,887: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,887: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,887: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,888: root: INFO: Current backtesting datetime 2023-05-18 15:30:00-04:00
2024-05-31 17:52:21,889: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,889: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,889: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,889: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,890: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,890: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,890: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,890: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,891: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,892: root: INFO: Current backtesting datetime 2023-05-18 16:00:00-04:00
2024-05-31 17:52:21,893: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:21,893: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,893: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,894: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,894: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,894: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,894: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,894: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,894: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,896: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,896: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,896: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,896: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,897: root: INFO: Current backtesting datetime 2023-05-18 15:59:00-04:00
2024-05-31 17:52:21,897: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:21,897: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,897: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,898: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,898: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,898: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,898: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,899: root: INFO: Current backtesting datetime 2023-05-18 16:00:00-04:00
2024-05-31 17:52:21,899: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:21,899: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,899: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,899: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,899: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,899: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,900: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,901: root: INFO: Current backtesting datetime 2023-05-19 08:30:00-04:00
2024-05-31 17:52:21,901: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,902: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,902: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:21,902: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,902: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,903: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,903: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:21,903: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,904: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:21,904: asyncio: INFO: [MLTrader] [32mOrder was canceled: stop order of | 2427.0 SPY sell | at price $407.83051208496096 with status canceled[0m
2024-05-31 17:52:21,905: root: INFO: Position MLTrader Position: 0.0 shares of SPY (2 orders) liquidated
2024-05-31 17:52:21,905: asyncio: INFO: [MLTrader] [32mOrder was filled: limit order of | 2427.0 SPY sell | at price $420.19 with status fill[0m
2024-05-31 17:52:21,908: root: INFO: Current backtesting datetime 2023-05-19 09:30:00-04:00
2024-05-31 17:52:21,908: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:21,909: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,909: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,910: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,910: root: INFO: Current backtesting datetime 2023-05-19 10:00:00-04:00
2024-05-31 17:52:21,911: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,911: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,911: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,912: root: INFO: Current backtesting datetime 2023-05-19 10:30:00-04:00
2024-05-31 17:52:21,912: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,913: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,913: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,914: root: INFO: Current backtesting datetime 2023-05-19 11:00:00-04:00
2024-05-31 17:52:21,914: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,915: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,915: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,916: root: INFO: Current backtesting datetime 2023-05-19 11:30:00-04:00
2024-05-31 17:52:21,916: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,916: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,917: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,917: root: INFO: Current backtesting datetime 2023-05-19 12:00:00-04:00
2024-05-31 17:52:21,917: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,918: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,918: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,919: root: INFO: Current backtesting datetime 2023-05-19 12:30:00-04:00
2024-05-31 17:52:21,919: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,919: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,920: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,921: root: INFO: Current backtesting datetime 2023-05-19 13:00:00-04:00
2024-05-31 17:52:21,921: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,921: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,922: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,923: root: INFO: Current backtesting datetime 2023-05-19 13:30:00-04:00
2024-05-31 17:52:21,923: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,923: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,925: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,925: root: INFO: Current backtesting datetime 2023-05-19 14:00:00-04:00
2024-05-31 17:52:21,926: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,926: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,927: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,927: root: INFO: Current backtesting datetime 2023-05-19 14:30:00-04:00
2024-05-31 17:52:21,928: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,928: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,929: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,929: root: INFO: Current backtesting datetime 2023-05-19 15:00:00-04:00
2024-05-31 17:52:21,930: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,930: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,931: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,932: root: INFO: Current backtesting datetime 2023-05-19 15:30:00-04:00
2024-05-31 17:52:21,932: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,932: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,933: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,933: root: INFO: Current backtesting datetime 2023-05-19 16:00:00-04:00
2024-05-31 17:52:21,934: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:21,935: root: INFO: Current backtesting datetime 2023-05-19 15:59:00-04:00
2024-05-31 17:52:21,935: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:21,936: root: INFO: Current backtesting datetime 2023-05-19 16:00:00-04:00
2024-05-31 17:52:21,936: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:21,936: root: INFO: Current backtesting datetime 2023-05-22 08:30:00-04:00
2024-05-31 17:52:21,937: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:21,937: root: INFO: Current backtesting datetime 2023-05-22 09:30:00-04:00
2024-05-31 17:52:21,937: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:21,938: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,939: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,939: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,940: root: INFO: Current backtesting datetime 2023-05-22 10:00:00-04:00
2024-05-31 17:52:21,940: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,941: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,941: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,942: root: INFO: Current backtesting datetime 2023-05-22 10:30:00-04:00
2024-05-31 17:52:21,943: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,943: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,944: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,945: root: INFO: Current backtesting datetime 2023-05-22 11:00:00-04:00
2024-05-31 17:52:21,945: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,945: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,946: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,946: root: INFO: Current backtesting datetime 2023-05-22 11:30:00-04:00
2024-05-31 17:52:21,948: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,948: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,948: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,952: root: INFO: Current backtesting datetime 2023-05-22 12:00:00-04:00
2024-05-31 17:52:21,946: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:21,952: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,952: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,953: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,954: root: INFO: Current backtesting datetime 2023-05-22 12:30:00-04:00
2024-05-31 17:52:21,954: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,955: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,955: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,956: root: INFO: Current backtesting datetime 2023-05-22 13:00:00-04:00
2024-05-31 17:52:21,956: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,956: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,958: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,959: root: INFO: Current backtesting datetime 2023-05-22 13:30:00-04:00
2024-05-31 17:52:21,959: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,959: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,960: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,960: root: INFO: Current backtesting datetime 2023-05-22 14:00:00-04:00
2024-05-31 17:52:21,961: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,961: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,962: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,963: root: INFO: Current backtesting datetime 2023-05-22 14:30:00-04:00
2024-05-31 17:52:21,963: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,963: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,964: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,965: root: INFO: Current backtesting datetime 2023-05-22 15:00:00-04:00
2024-05-31 17:52:21,965: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,966: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,966: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,967: root: INFO: Current backtesting datetime 2023-05-22 15:30:00-04:00
2024-05-31 17:52:21,967: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,967: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,968: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,969: root: INFO: Current backtesting datetime 2023-05-22 16:00:00-04:00
2024-05-31 17:52:21,969: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:21,969: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:21,970: root: INFO: Current backtesting datetime 2023-05-22 15:59:00-04:00
2024-05-31 17:52:21,971: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:21,971: root: INFO: Current backtesting datetime 2023-05-22 16:00:00-04:00
2024-05-31 17:52:21,972: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:21,972: root: INFO: Current backtesting datetime 2023-05-23 08:30:00-04:00
2024-05-31 17:52:21,972: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:21,973: root: INFO: Current backtesting datetime 2023-05-23 09:30:00-04:00
2024-05-31 17:52:21,973: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:21,974: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,974: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,975: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,975: root: INFO: Current backtesting datetime 2023-05-23 10:00:00-04:00
2024-05-31 17:52:21,975: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,977: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,977: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,978: root: INFO: Current backtesting datetime 2023-05-23 10:30:00-04:00
2024-05-31 17:52:21,978: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,978: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,979: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,979: root: INFO: Current backtesting datetime 2023-05-23 11:00:00-04:00
2024-05-31 17:52:21,980: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,980: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,981: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,981: root: INFO: Current backtesting datetime 2023-05-23 11:30:00-04:00
2024-05-31 17:52:21,981: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,982: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,982: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,983: root: INFO: Current backtesting datetime 2023-05-23 12:00:00-04:00
2024-05-31 17:52:21,983: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,983: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,984: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,985: root: INFO: Current backtesting datetime 2023-05-23 12:30:00-04:00
2024-05-31 17:52:21,985: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,985: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,985: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,987: root: INFO: Current backtesting datetime 2023-05-23 13:00:00-04:00
2024-05-31 17:52:21,987: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,988: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,988: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,989: root: INFO: Current backtesting datetime 2023-05-23 13:30:00-04:00
2024-05-31 17:52:21,989: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,989: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,990: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,990: root: INFO: Current backtesting datetime 2023-05-23 14:00:00-04:00
2024-05-31 17:52:21,990: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,991: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,991: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,992: root: INFO: Current backtesting datetime 2023-05-23 14:30:00-04:00
2024-05-31 17:52:21,992: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,993: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,993: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,994: root: INFO: Current backtesting datetime 2023-05-23 15:00:00-04:00
2024-05-31 17:52:21,994: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,995: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,995: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,995: root: INFO: Current backtesting datetime 2023-05-23 15:30:00-04:00
2024-05-31 17:52:21,997: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,997: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:21[0m
2024-05-31 17:52:21,997: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:21,998: root: INFO: Current backtesting datetime 2023-05-23 16:00:00-04:00
2024-05-31 17:52:21,999: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:22,000: root: INFO: Current backtesting datetime 2023-05-23 15:59:00-04:00
2024-05-31 17:52:22,000: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:22,000: root: INFO: Current backtesting datetime 2023-05-23 16:00:00-04:00
2024-05-31 17:52:22,000: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:22,001: root: INFO: Current backtesting datetime 2023-05-24 08:30:00-04:00
2024-05-31 17:52:22,001: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:22,002: root: INFO: Current backtesting datetime 2023-05-24 09:30:00-04:00
2024-05-31 17:52:22,002: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:22,002: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,003: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,003: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,004: root: INFO: Current backtesting datetime 2023-05-24 10:00:00-04:00
2024-05-31 17:52:22,004: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,005: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,005: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,005: root: INFO: Current backtesting datetime 2023-05-24 10:30:00-04:00
2024-05-31 17:52:22,007: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,007: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,007: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,008: root: INFO: Current backtesting datetime 2023-05-24 11:00:00-04:00
2024-05-31 17:52:22,008: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,009: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,009: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,009: root: INFO: Current backtesting datetime 2023-05-24 11:30:00-04:00
2024-05-31 17:52:22,010: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,010: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,010: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,011: root: INFO: Current backtesting datetime 2023-05-24 12:00:00-04:00
2024-05-31 17:52:22,011: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,012: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,012: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,013: root: INFO: Current backtesting datetime 2023-05-24 12:30:00-04:00
2024-05-31 17:52:22,013: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,014: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,014: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,015: root: INFO: Current backtesting datetime 2023-05-24 13:00:00-04:00
2024-05-31 17:52:22,015: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,015: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,015: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,017: root: INFO: Current backtesting datetime 2023-05-24 13:30:00-04:00
2024-05-31 17:52:22,017: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,018: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,018: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,019: root: INFO: Current backtesting datetime 2023-05-24 14:00:00-04:00
2024-05-31 17:52:22,019: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,020: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,020: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,021: root: INFO: Current backtesting datetime 2023-05-24 14:30:00-04:00
2024-05-31 17:52:22,021: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,022: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,022: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,023: root: INFO: Current backtesting datetime 2023-05-24 15:00:00-04:00
2024-05-31 17:52:22,023: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,023: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,024: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,024: root: INFO: Current backtesting datetime 2023-05-24 15:30:00-04:00
2024-05-31 17:52:22,025: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,026: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,027: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,028: root: INFO: Current backtesting datetime 2023-05-24 16:00:00-04:00
2024-05-31 17:52:22,028: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:22,029: root: INFO: Current backtesting datetime 2023-05-24 15:59:00-04:00
2024-05-31 17:52:22,030: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:22,030: root: INFO: Current backtesting datetime 2023-05-24 16:00:00-04:00
2024-05-31 17:52:22,030: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:22,030: root: INFO: Current backtesting datetime 2023-05-25 08:30:00-04:00
2024-05-31 17:52:22,031: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:22,032: root: INFO: Current backtesting datetime 2023-05-25 09:30:00-04:00
2024-05-31 17:52:22,032: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:22,033: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,033: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,034: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,034: root: INFO: Current backtesting datetime 2023-05-25 10:00:00-04:00
2024-05-31 17:52:22,034: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,034: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,036: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,037: root: INFO: Current backtesting datetime 2023-05-25 10:30:00-04:00
2024-05-31 17:52:22,037: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,037: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,038: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,039: root: INFO: Current backtesting datetime 2023-05-25 11:00:00-04:00
2024-05-31 17:52:22,039: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,039: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,040: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,040: root: INFO: Current backtesting datetime 2023-05-25 11:30:00-04:00
2024-05-31 17:52:22,041: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,041: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,042: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,042: root: INFO: Current backtesting datetime 2023-05-25 12:00:00-04:00
2024-05-31 17:52:22,042: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,043: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,043: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,044: root: INFO: Current backtesting datetime 2023-05-25 12:30:00-04:00
2024-05-31 17:52:22,044: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,044: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,046: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,046: root: INFO: Current backtesting datetime 2023-05-25 13:00:00-04:00
2024-05-31 17:52:22,047: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,047: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,048: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,048: root: INFO: Current backtesting datetime 2023-05-25 13:30:00-04:00
2024-05-31 17:52:22,049: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,049: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,049: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,050: root: INFO: Current backtesting datetime 2023-05-25 14:00:00-04:00
2024-05-31 17:52:22,050: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,050: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,052: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,052: root: INFO: Current backtesting datetime 2023-05-25 14:30:00-04:00
2024-05-31 17:52:22,053: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,053: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,054: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,054: root: INFO: Current backtesting datetime 2023-05-25 15:00:00-04:00
2024-05-31 17:52:22,055: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,055: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,055: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,057: root: INFO: Current backtesting datetime 2023-05-25 15:30:00-04:00
2024-05-31 17:52:22,057: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,058: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,058: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,059: root: INFO: Current backtesting datetime 2023-05-25 16:00:00-04:00
2024-05-31 17:52:22,059: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:22,061: root: INFO: Current backtesting datetime 2023-05-25 15:59:00-04:00
2024-05-31 17:52:22,061: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:22,061: root: INFO: Current backtesting datetime 2023-05-25 16:00:00-04:00
2024-05-31 17:52:22,061: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:22,062: root: INFO: Current backtesting datetime 2023-05-26 08:30:00-04:00
2024-05-31 17:52:22,062: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:22,063: root: INFO: Current backtesting datetime 2023-05-26 09:30:00-04:00
2024-05-31 17:52:22,063: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:22,064: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,064: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,065: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,065: root: INFO: Current backtesting datetime 2023-05-26 10:00:00-04:00
2024-05-31 17:52:22,065: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,067: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,067: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,068: root: INFO: Current backtesting datetime 2023-05-26 10:30:00-04:00
2024-05-31 17:52:22,068: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,069: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,069: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,070: root: INFO: Current backtesting datetime 2023-05-26 11:00:00-04:00
2024-05-31 17:52:22,070: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,070: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,071: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,072: root: INFO: Current backtesting datetime 2023-05-26 11:30:00-04:00
2024-05-31 17:52:22,072: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,072: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,073: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,073: root: INFO: Current backtesting datetime 2023-05-26 12:00:00-04:00
2024-05-31 17:52:22,073: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,074: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,074: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,075: root: INFO: Current backtesting datetime 2023-05-26 12:30:00-04:00
2024-05-31 17:52:22,075: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,075: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,077: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,077: root: INFO: Current backtesting datetime 2023-05-26 13:00:00-04:00
2024-05-31 17:52:22,078: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,078: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,078: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,079: root: INFO: Current backtesting datetime 2023-05-26 13:30:00-04:00
2024-05-31 17:52:22,079: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,080: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,080: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,081: root: INFO: Current backtesting datetime 2023-05-26 14:00:00-04:00
2024-05-31 17:52:22,081: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,081: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,083: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,102: root: INFO: Current backtesting datetime 2023-05-26 14:30:00-04:00
2024-05-31 17:52:22,102: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,104: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,104: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,105: root: INFO: Current backtesting datetime 2023-05-26 15:00:00-04:00
2024-05-31 17:52:22,105: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,106: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,106: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,107: root: INFO: Current backtesting datetime 2023-05-26 15:30:00-04:00
2024-05-31 17:52:22,107: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,107: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,108: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,109: root: INFO: Current backtesting datetime 2023-05-26 16:00:00-04:00
2024-05-31 17:52:22,110: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:22,111: root: INFO: Current backtesting datetime 2023-05-26 15:59:00-04:00
2024-05-31 17:52:22,111: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:22,112: root: INFO: Current backtesting datetime 2023-05-26 16:00:00-04:00
2024-05-31 17:52:22,112: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:22,113: root: INFO: Current backtesting datetime 2023-05-30 08:30:00-04:00
2024-05-31 17:52:22,113: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:22,113: root: INFO: Current backtesting datetime 2023-05-30 09:30:00-04:00
2024-05-31 17:52:22,113: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:22,114: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,114: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,115: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,115: root: INFO: Current backtesting datetime 2023-05-30 10:00:00-04:00
2024-05-31 17:52:22,115: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,117: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,117: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,118: root: INFO: Current backtesting datetime 2023-05-30 10:30:00-04:00
2024-05-31 17:52:22,118: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,118: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,119: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,119: root: INFO: Current backtesting datetime 2023-05-30 11:00:00-04:00
2024-05-31 17:52:22,120: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,120: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,121: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,121: root: INFO: Current backtesting datetime 2023-05-30 11:30:00-04:00
2024-05-31 17:52:22,122: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,122: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,123: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,123: root: INFO: Current backtesting datetime 2023-05-30 12:00:00-04:00
2024-05-31 17:52:22,123: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,123: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,125: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,125: root: INFO: Current backtesting datetime 2023-05-30 12:30:00-04:00
2024-05-31 17:52:22,125: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,125: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,127: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,127: root: INFO: Current backtesting datetime 2023-05-30 13:00:00-04:00
2024-05-31 17:52:22,128: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,128: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,128: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,129: root: INFO: Current backtesting datetime 2023-05-30 13:30:00-04:00
2024-05-31 17:52:22,129: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,130: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,131: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,131: root: INFO: Current backtesting datetime 2023-05-30 14:00:00-04:00
2024-05-31 17:52:22,132: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,132: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,133: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,133: root: INFO: Current backtesting datetime 2023-05-30 14:30:00-04:00
2024-05-31 17:52:22,134: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,134: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,134: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,135: root: INFO: Current backtesting datetime 2023-05-30 15:00:00-04:00
2024-05-31 17:52:22,135: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,135: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,137: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,138: root: INFO: Current backtesting datetime 2023-05-30 15:30:00-04:00
2024-05-31 17:52:22,138: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,138: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,139: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,139: root: INFO: Current backtesting datetime 2023-05-30 16:00:00-04:00
2024-05-31 17:52:22,140: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:22,141: root: INFO: Current backtesting datetime 2023-05-30 15:59:00-04:00
2024-05-31 17:52:22,141: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:22,142: root: INFO: Current backtesting datetime 2023-05-30 16:00:00-04:00
2024-05-31 17:52:22,142: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:22,142: root: INFO: Current backtesting datetime 2023-05-31 08:30:00-04:00
2024-05-31 17:52:22,143: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:22,143: root: INFO: Current backtesting datetime 2023-05-31 09:30:00-04:00
2024-05-31 17:52:22,143: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:22,144: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,145: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,146: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,146: root: INFO: Current backtesting datetime 2023-05-31 10:00:00-04:00
2024-05-31 17:52:22,147: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,147: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,148: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,148: root: INFO: Current backtesting datetime 2023-05-31 10:30:00-04:00
2024-05-31 17:52:22,149: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,149: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,149: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,150: root: INFO: Current backtesting datetime 2023-05-31 11:00:00-04:00
2024-05-31 17:52:22,150: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,150: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,151: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,152: root: INFO: Current backtesting datetime 2023-05-31 11:30:00-04:00
2024-05-31 17:52:22,152: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,152: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,153: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,153: root: INFO: Current backtesting datetime 2023-05-31 12:00:00-04:00
2024-05-31 17:52:22,154: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,154: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,154: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,156: root: INFO: Current backtesting datetime 2023-05-31 12:30:00-04:00
2024-05-31 17:52:22,156: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,157: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,157: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,157: root: INFO: Current backtesting datetime 2023-05-31 13:00:00-04:00
2024-05-31 17:52:22,158: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,158: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,159: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,160: root: INFO: Current backtesting datetime 2023-05-31 13:30:00-04:00
2024-05-31 17:52:22,161: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,161: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,161: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,162: root: INFO: Current backtesting datetime 2023-05-31 14:00:00-04:00
2024-05-31 17:52:22,162: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,163: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,163: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,164: root: INFO: Current backtesting datetime 2023-05-31 14:30:00-04:00
2024-05-31 17:52:22,164: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,165: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,165: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,165: root: INFO: Current backtesting datetime 2023-05-31 15:00:00-04:00
2024-05-31 17:52:22,166: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,167: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,167: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,168: root: INFO: Current backtesting datetime 2023-05-31 15:30:00-04:00
2024-05-31 17:52:22,168: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,168: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,169: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,169: root: INFO: Current backtesting datetime 2023-05-31 16:00:00-04:00
2024-05-31 17:52:22,170: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:22,170: root: INFO: Current backtesting datetime 2023-05-31 15:59:00-04:00
2024-05-31 17:52:22,171: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:22,171: root: INFO: Current backtesting datetime 2023-05-31 16:00:00-04:00
2024-05-31 17:52:22,172: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:22,172: root: INFO: Current backtesting datetime 2023-06-01 08:30:00-04:00
2024-05-31 17:52:22,173: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:22,173: root: INFO: Current backtesting datetime 2023-06-01 09:30:00-04:00
2024-05-31 17:52:22,173: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:22,174: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,174: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,175: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,175: root: INFO: Current backtesting datetime 2023-06-01 10:00:00-04:00
2024-05-31 17:52:22,175: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,177: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,177: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,178: root: INFO: Current backtesting datetime 2023-06-01 10:30:00-04:00
2024-05-31 17:52:22,178: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,179: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,179: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,180: root: INFO: Current backtesting datetime 2023-06-01 11:00:00-04:00
2024-05-31 17:52:22,180: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,180: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,181: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,182: root: INFO: Current backtesting datetime 2023-06-01 11:30:00-04:00
2024-05-31 17:52:22,182: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,182: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,183: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,183: root: INFO: Current backtesting datetime 2023-06-01 12:00:00-04:00
2024-05-31 17:52:22,184: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,184: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,185: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,185: root: INFO: Current backtesting datetime 2023-06-01 12:30:00-04:00
2024-05-31 17:52:22,185: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,187: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,187: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,188: root: INFO: Current backtesting datetime 2023-06-01 13:00:00-04:00
2024-05-31 17:52:22,188: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,188: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,189: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,190: root: INFO: Current backtesting datetime 2023-06-01 13:30:00-04:00
2024-05-31 17:52:22,190: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,190: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,191: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,191: root: INFO: Current backtesting datetime 2023-06-01 14:00:00-04:00
2024-05-31 17:52:22,192: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,192: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,193: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,194: root: INFO: Current backtesting datetime 2023-06-01 14:30:00-04:00
2024-05-31 17:52:22,194: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,194: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,195: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,195: root: INFO: Current backtesting datetime 2023-06-01 15:00:00-04:00
2024-05-31 17:52:22,195: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,197: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,197: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,198: root: INFO: Current backtesting datetime 2023-06-01 15:30:00-04:00
2024-05-31 17:52:22,198: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,198: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,199: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,200: root: INFO: Current backtesting datetime 2023-06-01 16:00:00-04:00
2024-05-31 17:52:22,200: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:22,201: root: INFO: Current backtesting datetime 2023-06-01 15:59:00-04:00
2024-05-31 17:52:22,201: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:22,202: root: INFO: Current backtesting datetime 2023-06-01 16:00:00-04:00
2024-05-31 17:52:22,202: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:22,203: root: INFO: Current backtesting datetime 2023-06-02 08:30:00-04:00
2024-05-31 17:52:22,203: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:22,204: root: INFO: Current backtesting datetime 2023-06-02 09:30:00-04:00
2024-05-31 17:52:22,204: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:22,204: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,205: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,205: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,206: root: INFO: Current backtesting datetime 2023-06-02 10:00:00-04:00
2024-05-31 17:52:22,207: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,207: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,208: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,208: root: INFO: Current backtesting datetime 2023-06-02 10:30:00-04:00
2024-05-31 17:52:22,209: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,209: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,210: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,210: root: INFO: Current backtesting datetime 2023-06-02 11:00:00-04:00
2024-05-31 17:52:22,211: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,211: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,211: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,212: root: INFO: Current backtesting datetime 2023-06-02 11:30:00-04:00
2024-05-31 17:52:22,212: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,213: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,214: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,214: root: INFO: Current backtesting datetime 2023-06-02 12:00:00-04:00
2024-05-31 17:52:22,215: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,215: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,216: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,216: root: INFO: Current backtesting datetime 2023-06-02 12:30:00-04:00
2024-05-31 17:52:22,217: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,217: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,217: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,218: root: INFO: Current backtesting datetime 2023-06-02 13:00:00-04:00
2024-05-31 17:52:22,218: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,219: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,220: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,220: root: INFO: Current backtesting datetime 2023-06-02 13:30:00-04:00
2024-05-31 17:52:22,221: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,221: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,222: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,223: root: INFO: Current backtesting datetime 2023-06-02 14:00:00-04:00
2024-05-31 17:52:22,220: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:22,223: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,223: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,224: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,225: root: INFO: Current backtesting datetime 2023-06-02 14:30:00-04:00
2024-05-31 17:52:22,225: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,225: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,226: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,227: root: INFO: Current backtesting datetime 2023-06-02 15:00:00-04:00
2024-05-31 17:52:22,227: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,227: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,228: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,229: root: INFO: Current backtesting datetime 2023-06-02 15:30:00-04:00
2024-05-31 17:52:22,229: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,229: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,230: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,231: root: INFO: Current backtesting datetime 2023-06-02 16:00:00-04:00
2024-05-31 17:52:22,231: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:22,233: root: INFO: Current backtesting datetime 2023-06-02 15:59:00-04:00
2024-05-31 17:52:22,233: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:22,234: root: INFO: Current backtesting datetime 2023-06-02 16:00:00-04:00
2024-05-31 17:52:22,234: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:22,234: root: INFO: Current backtesting datetime 2023-06-05 08:30:00-04:00
2024-05-31 17:52:22,234: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:22,235: root: INFO: Current backtesting datetime 2023-06-05 09:30:00-04:00
2024-05-31 17:52:22,235: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:22,236: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,236: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,236: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,237: root: INFO: Current backtesting datetime 2023-06-05 10:00:00-04:00
2024-05-31 17:52:22,237: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,238: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,238: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,239: root: INFO: Current backtesting datetime 2023-06-05 10:30:00-04:00
2024-05-31 17:52:22,239: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,240: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,240: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,241: root: INFO: Current backtesting datetime 2023-06-05 11:00:00-04:00
2024-05-31 17:52:22,241: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,241: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,243: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,244: root: INFO: Current backtesting datetime 2023-06-05 11:30:00-04:00
2024-05-31 17:52:22,244: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,244: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,245: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,245: root: INFO: Current backtesting datetime 2023-06-05 12:00:00-04:00
2024-05-31 17:52:22,245: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,247: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,247: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,248: root: INFO: Current backtesting datetime 2023-06-05 12:30:00-04:00
2024-05-31 17:52:22,248: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,249: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,249: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:22,250: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,251: root: INFO: Current backtesting datetime 2023-06-05 13:00:00-04:00
2024-05-31 17:52:22,252: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,252: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,252: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,253: root: INFO: Current backtesting datetime 2023-06-05 13:30:00-04:00
2024-05-31 17:52:22,254: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,255: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,255: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,255: root: INFO: Current backtesting datetime 2023-06-05 14:00:00-04:00
2024-05-31 17:52:22,256: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,256: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,257: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,257: root: INFO: Current backtesting datetime 2023-06-05 14:30:00-04:00
2024-05-31 17:52:22,258: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,258: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,259: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,259: root: INFO: Current backtesting datetime 2023-06-05 15:00:00-04:00
2024-05-31 17:52:22,260: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,260: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,260: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,261: root: INFO: Current backtesting datetime 2023-06-05 15:30:00-04:00
2024-05-31 17:52:22,261: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,262: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,262: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,264: root: INFO: Current backtesting datetime 2023-06-05 16:00:00-04:00
2024-05-31 17:52:22,264: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:22,265: root: INFO: Current backtesting datetime 2023-06-05 15:59:00-04:00
2024-05-31 17:52:22,265: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:22,266: root: INFO: Current backtesting datetime 2023-06-05 16:00:00-04:00
2024-05-31 17:52:22,266: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:22,266: root: INFO: Current backtesting datetime 2023-06-06 08:30:00-04:00
2024-05-31 17:52:22,267: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:22,267: root: INFO: Current backtesting datetime 2023-06-06 09:30:00-04:00
2024-05-31 17:52:22,267: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:22,268: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,268: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,268: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,269: root: INFO: Current backtesting datetime 2023-06-06 10:00:00-04:00
2024-05-31 17:52:22,269: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,270: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,270: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,271: root: INFO: Current backtesting datetime 2023-06-06 10:30:00-04:00
2024-05-31 17:52:22,271: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,271: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,273: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,273: root: INFO: Current backtesting datetime 2023-06-06 11:00:00-04:00
2024-05-31 17:52:22,274: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,274: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,274: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,275: root: INFO: Current backtesting datetime 2023-06-06 11:30:00-04:00
2024-05-31 17:52:22,275: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,275: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,277: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,277: root: INFO: Current backtesting datetime 2023-06-06 12:00:00-04:00
2024-05-31 17:52:22,278: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,278: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,279: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,279: root: INFO: Current backtesting datetime 2023-06-06 12:30:00-04:00
2024-05-31 17:52:22,280: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,280: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,280: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,281: root: INFO: Current backtesting datetime 2023-06-06 13:00:00-04:00
2024-05-31 17:52:22,282: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,282: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,282: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,283: root: INFO: Current backtesting datetime 2023-06-06 13:30:00-04:00
2024-05-31 17:52:22,283: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,283: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,284: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,285: root: INFO: Current backtesting datetime 2023-06-06 14:00:00-04:00
2024-05-31 17:52:22,285: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,285: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,285: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,287: root: INFO: Current backtesting datetime 2023-06-06 14:30:00-04:00
2024-05-31 17:52:22,287: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,287: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,288: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,289: root: INFO: Current backtesting datetime 2023-06-06 15:00:00-04:00
2024-05-31 17:52:22,289: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,289: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,290: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,290: root: INFO: Current backtesting datetime 2023-06-06 15:30:00-04:00
2024-05-31 17:52:22,291: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,291: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,292: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,292: root: INFO: Current backtesting datetime 2023-06-06 16:00:00-04:00
2024-05-31 17:52:22,292: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:22,293: root: INFO: Current backtesting datetime 2023-06-06 15:59:00-04:00
2024-05-31 17:52:22,293: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:22,294: root: INFO: Current backtesting datetime 2023-06-06 16:00:00-04:00
2024-05-31 17:52:22,294: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:22,294: root: INFO: Current backtesting datetime 2023-06-07 08:30:00-04:00
2024-05-31 17:52:22,295: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:22,296: root: INFO: Current backtesting datetime 2023-06-07 09:30:00-04:00
2024-05-31 17:52:22,296: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:22,297: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,297: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,298: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,299: root: INFO: Current backtesting datetime 2023-06-07 10:00:00-04:00
2024-05-31 17:52:22,299: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,299: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,300: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,301: root: INFO: Current backtesting datetime 2023-06-07 10:30:00-04:00
2024-05-31 17:52:22,301: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,301: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,302: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,302: root: INFO: Current backtesting datetime 2023-06-07 11:00:00-04:00
2024-05-31 17:52:22,303: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,303: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,304: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,304: root: INFO: Current backtesting datetime 2023-06-07 11:30:00-04:00
2024-05-31 17:52:22,304: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,304: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,304: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,306: root: INFO: Current backtesting datetime 2023-06-07 12:00:00-04:00
2024-05-31 17:52:22,307: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,307: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,307: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,307: root: INFO: Current backtesting datetime 2023-06-07 12:30:00-04:00
2024-05-31 17:52:22,308: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,308: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,309: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,310: root: INFO: Current backtesting datetime 2023-06-07 13:00:00-04:00
2024-05-31 17:52:22,311: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,311: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,312: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,313: root: INFO: Current backtesting datetime 2023-06-07 13:30:00-04:00
2024-05-31 17:52:22,313: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,314: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,315: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,315: root: INFO: Current backtesting datetime 2023-06-07 14:00:00-04:00
2024-05-31 17:52:22,315: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,315: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,316: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,317: root: INFO: Current backtesting datetime 2023-06-07 14:30:00-04:00
2024-05-31 17:52:22,318: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,318: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,318: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,319: root: INFO: Current backtesting datetime 2023-06-07 15:00:00-04:00
2024-05-31 17:52:22,320: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,320: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,320: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,321: root: INFO: Current backtesting datetime 2023-06-07 15:30:00-04:00
2024-05-31 17:52:22,321: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,322: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,322: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,323: root: INFO: Current backtesting datetime 2023-06-07 16:00:00-04:00
2024-05-31 17:52:22,323: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:22,324: root: INFO: Current backtesting datetime 2023-06-07 15:59:00-04:00
2024-05-31 17:52:22,324: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:22,324: root: INFO: Current backtesting datetime 2023-06-07 16:00:00-04:00
2024-05-31 17:52:22,324: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:22,326: root: INFO: Current backtesting datetime 2023-06-08 08:30:00-04:00
2024-05-31 17:52:22,326: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:22,327: root: INFO: Current backtesting datetime 2023-06-08 09:30:00-04:00
2024-05-31 17:52:22,327: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:22,328: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,328: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,329: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,329: root: INFO: Current backtesting datetime 2023-06-08 10:00:00-04:00
2024-05-31 17:52:22,330: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,330: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,331: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,332: root: INFO: Current backtesting datetime 2023-06-08 10:30:00-04:00
2024-05-31 17:52:22,332: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,332: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,333: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,333: root: INFO: Current backtesting datetime 2023-06-08 11:00:00-04:00
2024-05-31 17:52:22,333: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,334: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,334: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,335: root: INFO: Current backtesting datetime 2023-06-08 11:30:00-04:00
2024-05-31 17:52:22,335: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,336: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,337: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,337: root: INFO: Current backtesting datetime 2023-06-08 12:00:00-04:00
2024-05-31 17:52:22,338: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,338: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,339: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,340: root: INFO: Current backtesting datetime 2023-06-08 12:30:00-04:00
2024-05-31 17:52:22,340: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,341: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,341: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,342: root: INFO: Current backtesting datetime 2023-06-08 13:00:00-04:00
2024-05-31 17:52:22,342: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,342: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,343: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,344: root: INFO: Current backtesting datetime 2023-06-08 13:30:00-04:00
2024-05-31 17:52:22,344: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,345: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,345: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,345: root: INFO: Current backtesting datetime 2023-06-08 14:00:00-04:00
2024-05-31 17:52:22,347: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,347: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,348: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,348: root: INFO: Current backtesting datetime 2023-06-08 14:30:00-04:00
2024-05-31 17:52:22,349: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,349: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,350: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,350: root: INFO: Current backtesting datetime 2023-06-08 15:00:00-04:00
2024-05-31 17:52:22,351: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,351: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,352: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,353: root: INFO: Current backtesting datetime 2023-06-08 15:30:00-04:00
2024-05-31 17:52:22,353: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,353: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,354: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,354: root: INFO: Current backtesting datetime 2023-06-08 16:00:00-04:00
2024-05-31 17:52:22,355: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:22,355: root: INFO: Current backtesting datetime 2023-06-08 15:59:00-04:00
2024-05-31 17:52:22,355: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:22,357: root: INFO: Current backtesting datetime 2023-06-08 16:00:00-04:00
2024-05-31 17:52:22,357: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:22,357: root: INFO: Current backtesting datetime 2023-06-09 08:30:00-04:00
2024-05-31 17:52:22,358: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:22,358: root: INFO: Current backtesting datetime 2023-06-09 09:30:00-04:00
2024-05-31 17:52:22,359: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:22,360: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,360: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,361: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,362: root: INFO: Current backtesting datetime 2023-06-09 10:00:00-04:00
2024-05-31 17:52:22,362: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,363: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,383: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,384: root: INFO: Current backtesting datetime 2023-06-09 10:30:00-04:00
2024-05-31 17:52:22,384: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,384: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,384: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,386: root: INFO: Current backtesting datetime 2023-06-09 11:00:00-04:00
2024-05-31 17:52:22,387: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,387: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,388: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,389: root: INFO: Current backtesting datetime 2023-06-09 11:30:00-04:00
2024-05-31 17:52:22,389: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,389: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,390: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,391: root: INFO: Current backtesting datetime 2023-06-09 12:00:00-04:00
2024-05-31 17:52:22,391: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,391: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,392: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,393: root: INFO: Current backtesting datetime 2023-06-09 12:30:00-04:00
2024-05-31 17:52:22,393: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,393: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,394: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,395: root: INFO: Current backtesting datetime 2023-06-09 13:00:00-04:00
2024-05-31 17:52:22,395: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,395: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,396: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,397: root: INFO: Current backtesting datetime 2023-06-09 13:30:00-04:00
2024-05-31 17:52:22,397: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,397: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,398: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,398: root: INFO: Current backtesting datetime 2023-06-09 14:00:00-04:00
2024-05-31 17:52:22,399: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,399: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,400: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,401: root: INFO: Current backtesting datetime 2023-06-09 14:30:00-04:00
2024-05-31 17:52:22,401: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,401: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,402: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,403: root: INFO: Current backtesting datetime 2023-06-09 15:00:00-04:00
2024-05-31 17:52:22,403: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,404: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,404: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,405: root: INFO: Current backtesting datetime 2023-06-09 15:30:00-04:00
2024-05-31 17:52:22,405: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,405: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,406: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,406: root: INFO: Current backtesting datetime 2023-06-09 16:00:00-04:00
2024-05-31 17:52:22,406: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:22,409: root: INFO: Current backtesting datetime 2023-06-09 15:59:00-04:00
2024-05-31 17:52:22,409: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:22,410: root: INFO: Current backtesting datetime 2023-06-09 16:00:00-04:00
2024-05-31 17:52:22,410: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:22,411: root: INFO: Current backtesting datetime 2023-06-12 08:30:00-04:00
2024-05-31 17:52:22,411: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:22,412: root: INFO: Current backtesting datetime 2023-06-12 09:30:00-04:00
2024-05-31 17:52:22,412: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:22,412: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,413: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,413: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,414: root: INFO: Current backtesting datetime 2023-06-12 10:00:00-04:00
2024-05-31 17:52:22,414: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,415: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,415: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,415: root: INFO: Current backtesting datetime 2023-06-12 10:30:00-04:00
2024-05-31 17:52:22,416: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,416: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,417: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,418: root: INFO: Current backtesting datetime 2023-06-12 11:00:00-04:00
2024-05-31 17:52:22,418: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,418: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,419: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,419: root: INFO: Current backtesting datetime 2023-06-12 11:30:00-04:00
2024-05-31 17:52:22,420: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,420: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,421: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,421: root: INFO: Current backtesting datetime 2023-06-12 12:00:00-04:00
2024-05-31 17:52:22,422: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,422: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,423: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,424: root: INFO: Current backtesting datetime 2023-06-12 12:30:00-04:00
2024-05-31 17:52:22,424: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,424: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,424: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,426: root: INFO: Current backtesting datetime 2023-06-12 13:00:00-04:00
2024-05-31 17:52:22,426: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,426: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,427: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,427: root: INFO: Current backtesting datetime 2023-06-12 13:30:00-04:00
2024-05-31 17:52:22,428: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,429: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,429: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,430: root: INFO: Current backtesting datetime 2023-06-12 14:00:00-04:00
2024-05-31 17:52:22,431: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,431: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,431: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,432: root: INFO: Current backtesting datetime 2023-06-12 14:30:00-04:00
2024-05-31 17:52:22,432: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,433: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,433: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,434: root: INFO: Current backtesting datetime 2023-06-12 15:00:00-04:00
2024-05-31 17:52:22,434: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,434: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,435: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,436: root: INFO: Current backtesting datetime 2023-06-12 15:30:00-04:00
2024-05-31 17:52:22,436: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,436: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,437: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,438: root: INFO: Current backtesting datetime 2023-06-12 16:00:00-04:00
2024-05-31 17:52:22,438: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:22,439: root: INFO: Current backtesting datetime 2023-06-12 15:59:00-04:00
2024-05-31 17:52:22,440: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:22,440: root: INFO: Current backtesting datetime 2023-06-12 16:00:00-04:00
2024-05-31 17:52:22,440: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:22,441: root: INFO: Current backtesting datetime 2023-06-13 08:30:00-04:00
2024-05-31 17:52:22,441: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:22,442: root: INFO: Current backtesting datetime 2023-06-13 09:30:00-04:00
2024-05-31 17:52:22,442: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:22,443: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,443: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,444: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,444: root: INFO: Current backtesting datetime 2023-06-13 10:00:00-04:00
2024-05-31 17:52:22,445: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,445: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,445: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,447: root: INFO: Current backtesting datetime 2023-06-13 10:30:00-04:00
2024-05-31 17:52:22,447: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,447: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,447: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,448: root: INFO: Current backtesting datetime 2023-06-13 11:00:00-04:00
2024-05-31 17:52:22,449: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,449: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,449: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,450: root: INFO: Current backtesting datetime 2023-06-13 11:30:00-04:00
2024-05-31 17:52:22,451: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,451: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,451: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,452: root: INFO: Current backtesting datetime 2023-06-13 12:00:00-04:00
2024-05-31 17:52:22,452: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,453: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,453: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,454: root: INFO: Current backtesting datetime 2023-06-13 12:30:00-04:00
2024-05-31 17:52:22,455: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,455: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,455: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,457: root: INFO: Current backtesting datetime 2023-06-13 13:00:00-04:00
2024-05-31 17:52:22,457: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,458: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,458: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,458: root: INFO: Current backtesting datetime 2023-06-13 13:30:00-04:00
2024-05-31 17:52:22,459: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,459: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,460: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,460: root: INFO: Current backtesting datetime 2023-06-13 14:00:00-04:00
2024-05-31 17:52:22,460: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,461: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,461: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,462: root: INFO: Current backtesting datetime 2023-06-13 14:30:00-04:00
2024-05-31 17:52:22,462: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,462: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,464: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,465: root: INFO: Current backtesting datetime 2023-06-13 15:00:00-04:00
2024-05-31 17:52:22,466: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,466: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,466: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,467: root: INFO: Current backtesting datetime 2023-06-13 15:30:00-04:00
2024-05-31 17:52:22,467: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,467: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,467: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,469: root: INFO: Current backtesting datetime 2023-06-13 16:00:00-04:00
2024-05-31 17:52:22,471: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:22,472: root: INFO: Current backtesting datetime 2023-06-13 15:59:00-04:00
2024-05-31 17:52:22,472: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:22,473: root: INFO: Current backtesting datetime 2023-06-13 16:00:00-04:00
2024-05-31 17:52:22,473: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:22,473: root: INFO: Current backtesting datetime 2023-06-14 08:30:00-04:00
2024-05-31 17:52:22,473: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:22,474: root: INFO: Current backtesting datetime 2023-06-14 09:30:00-04:00
2024-05-31 17:52:22,474: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:22,475: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,475: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,475: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,477: root: INFO: Current backtesting datetime 2023-06-14 10:00:00-04:00
2024-05-31 17:52:22,477: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,478: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,478: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,479: root: INFO: Current backtesting datetime 2023-06-14 10:30:00-04:00
2024-05-31 17:52:22,479: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,479: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,480: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,481: root: INFO: Current backtesting datetime 2023-06-14 11:00:00-04:00
2024-05-31 17:52:22,481: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,481: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,482: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,482: root: INFO: Current backtesting datetime 2023-06-14 11:30:00-04:00
2024-05-31 17:52:22,483: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,483: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,483: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,484: root: INFO: Current backtesting datetime 2023-06-14 12:00:00-04:00
2024-05-31 17:52:22,484: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,484: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,485: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,485: root: INFO: Current backtesting datetime 2023-06-14 12:30:00-04:00
2024-05-31 17:52:22,487: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,487: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,487: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,488: root: INFO: Current backtesting datetime 2023-06-14 13:00:00-04:00
2024-05-31 17:52:22,488: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,489: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,489: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,490: root: INFO: Current backtesting datetime 2023-06-14 13:30:00-04:00
2024-05-31 17:52:22,490: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,490: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,490: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,491: root: INFO: Current backtesting datetime 2023-06-14 14:00:00-04:00
2024-05-31 17:52:22,491: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,492: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,492: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,493: root: INFO: Current backtesting datetime 2023-06-14 14:30:00-04:00
2024-05-31 17:52:22,493: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,493: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,493: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,495: root: INFO: Current backtesting datetime 2023-06-14 15:00:00-04:00
2024-05-31 17:52:22,495: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,495: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,496: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,496: root: INFO: Current backtesting datetime 2023-06-14 15:30:00-04:00
2024-05-31 17:52:22,497: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,497: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,498: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,501: root: INFO: Current backtesting datetime 2023-06-14 16:00:00-04:00
2024-05-31 17:52:22,497: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:22,502: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:22,503: root: INFO: Current backtesting datetime 2023-06-14 15:59:00-04:00
2024-05-31 17:52:22,503: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:22,504: root: INFO: Current backtesting datetime 2023-06-14 16:00:00-04:00
2024-05-31 17:52:22,504: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:22,504: root: INFO: Current backtesting datetime 2023-06-15 08:30:00-04:00
2024-05-31 17:52:22,505: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:22,506: root: INFO: Current backtesting datetime 2023-06-15 09:30:00-04:00
2024-05-31 17:52:22,506: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:22,506: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,506: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,507: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,507: root: INFO: Current backtesting datetime 2023-06-15 10:00:00-04:00
2024-05-31 17:52:22,508: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,508: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,509: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,509: root: INFO: Current backtesting datetime 2023-06-15 10:30:00-04:00
2024-05-31 17:52:22,509: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,509: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,510: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,510: root: INFO: Current backtesting datetime 2023-06-15 11:00:00-04:00
2024-05-31 17:52:22,511: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,511: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,512: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,512: root: INFO: Current backtesting datetime 2023-06-15 11:30:00-04:00
2024-05-31 17:52:22,513: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,513: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,513: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,514: root: INFO: Current backtesting datetime 2023-06-15 12:00:00-04:00
2024-05-31 17:52:22,514: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,514: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,516: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:22,517: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,517: root: INFO: Current backtesting datetime 2023-06-15 12:30:00-04:00
2024-05-31 17:52:22,518: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,518: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,519: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,520: root: INFO: Current backtesting datetime 2023-06-15 13:00:00-04:00
2024-05-31 17:52:22,520: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,520: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,521: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,521: root: INFO: Current backtesting datetime 2023-06-15 13:30:00-04:00
2024-05-31 17:52:22,522: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,522: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,523: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,523: root: INFO: Current backtesting datetime 2023-06-15 14:00:00-04:00
2024-05-31 17:52:22,523: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,524: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,524: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,525: root: INFO: Current backtesting datetime 2023-06-15 14:30:00-04:00
2024-05-31 17:52:22,526: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,526: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,527: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,527: root: INFO: Current backtesting datetime 2023-06-15 15:00:00-04:00
2024-05-31 17:52:22,528: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,528: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,529: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,529: root: INFO: Current backtesting datetime 2023-06-15 15:30:00-04:00
2024-05-31 17:52:22,530: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,530: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,530: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,531: root: INFO: Current backtesting datetime 2023-06-15 16:00:00-04:00
2024-05-31 17:52:22,531: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:22,533: root: INFO: Current backtesting datetime 2023-06-15 15:59:00-04:00
2024-05-31 17:52:22,533: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:22,533: root: INFO: Current backtesting datetime 2023-06-15 16:00:00-04:00
2024-05-31 17:52:22,533: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:22,534: root: INFO: Current backtesting datetime 2023-06-16 08:30:00-04:00
2024-05-31 17:52:22,534: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:22,535: root: INFO: Current backtesting datetime 2023-06-16 09:30:00-04:00
2024-05-31 17:52:22,535: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:22,535: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,535: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,537: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,537: root: INFO: Current backtesting datetime 2023-06-16 10:00:00-04:00
2024-05-31 17:52:22,538: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,538: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,539: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,539: root: INFO: Current backtesting datetime 2023-06-16 10:30:00-04:00
2024-05-31 17:52:22,540: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,540: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,540: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,541: root: INFO: Current backtesting datetime 2023-06-16 11:00:00-04:00
2024-05-31 17:52:22,541: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,541: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,542: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,542: root: INFO: Current backtesting datetime 2023-06-16 11:30:00-04:00
2024-05-31 17:52:22,543: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,543: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,544: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,544: root: INFO: Current backtesting datetime 2023-06-16 12:00:00-04:00
2024-05-31 17:52:22,544: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,545: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,545: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,545: root: INFO: Current backtesting datetime 2023-06-16 12:30:00-04:00
2024-05-31 17:52:22,547: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,547: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,547: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,548: root: INFO: Current backtesting datetime 2023-06-16 13:00:00-04:00
2024-05-31 17:52:22,548: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,549: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,549: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,550: root: INFO: Current backtesting datetime 2023-06-16 13:30:00-04:00
2024-05-31 17:52:22,550: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,550: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,551: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,552: root: INFO: Current backtesting datetime 2023-06-16 14:00:00-04:00
2024-05-31 17:52:22,552: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,553: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,553: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,554: root: INFO: Current backtesting datetime 2023-06-16 14:30:00-04:00
2024-05-31 17:52:22,554: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,555: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,555: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,556: root: INFO: Current backtesting datetime 2023-06-16 15:00:00-04:00
2024-05-31 17:52:22,556: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,556: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,557: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,557: root: INFO: Current backtesting datetime 2023-06-16 15:30:00-04:00
2024-05-31 17:52:22,557: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,558: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,558: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,559: root: INFO: Current backtesting datetime 2023-06-16 16:00:00-04:00
2024-05-31 17:52:22,559: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:22,560: root: INFO: Current backtesting datetime 2023-06-16 15:59:00-04:00
2024-05-31 17:52:22,560: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:22,562: root: INFO: Current backtesting datetime 2023-06-16 16:00:00-04:00
2024-05-31 17:52:22,562: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:22,562: root: INFO: Current backtesting datetime 2023-06-20 08:30:00-04:00
2024-05-31 17:52:22,563: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:22,563: root: INFO: Current backtesting datetime 2023-06-20 09:30:00-04:00
2024-05-31 17:52:22,563: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:22,564: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,565: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,565: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,566: root: INFO: Current backtesting datetime 2023-06-20 10:00:00-04:00
2024-05-31 17:52:22,566: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,566: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,567: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,567: root: INFO: Current backtesting datetime 2023-06-20 10:30:00-04:00
2024-05-31 17:52:22,568: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,568: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,568: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,569: root: INFO: Current backtesting datetime 2023-06-20 11:00:00-04:00
2024-05-31 17:52:22,569: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,570: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,570: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,571: root: INFO: Current backtesting datetime 2023-06-20 11:30:00-04:00
2024-05-31 17:52:22,571: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,571: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,572: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,573: root: INFO: Current backtesting datetime 2023-06-20 12:00:00-04:00
2024-05-31 17:52:22,573: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,574: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,574: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,575: root: INFO: Current backtesting datetime 2023-06-20 12:30:00-04:00
2024-05-31 17:52:22,575: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,576: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,576: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,577: root: INFO: Current backtesting datetime 2023-06-20 13:00:00-04:00
2024-05-31 17:52:22,577: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,577: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,577: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,578: root: INFO: Current backtesting datetime 2023-06-20 13:30:00-04:00
2024-05-31 17:52:22,578: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,579: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,579: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,580: root: INFO: Current backtesting datetime 2023-06-20 14:00:00-04:00
2024-05-31 17:52:22,580: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,581: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,581: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,581: root: INFO: Current backtesting datetime 2023-06-20 14:30:00-04:00
2024-05-31 17:52:22,583: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,583: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,584: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,584: root: INFO: Current backtesting datetime 2023-06-20 15:00:00-04:00
2024-05-31 17:52:22,585: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,585: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,585: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,586: root: INFO: Current backtesting datetime 2023-06-20 15:30:00-04:00
2024-05-31 17:52:22,586: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,587: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,587: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,587: root: INFO: Current backtesting datetime 2023-06-20 16:00:00-04:00
2024-05-31 17:52:22,588: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:22,589: root: INFO: Current backtesting datetime 2023-06-20 15:59:00-04:00
2024-05-31 17:52:22,589: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:22,590: root: INFO: Current backtesting datetime 2023-06-20 16:00:00-04:00
2024-05-31 17:52:22,590: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:22,590: root: INFO: Current backtesting datetime 2023-06-21 08:30:00-04:00
2024-05-31 17:52:22,591: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:22,591: root: INFO: Current backtesting datetime 2023-06-21 09:30:00-04:00
2024-05-31 17:52:22,591: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:22,593: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,593: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,593: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,594: root: INFO: Current backtesting datetime 2023-06-21 10:00:00-04:00
2024-05-31 17:52:22,595: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,595: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,596: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,596: root: INFO: Current backtesting datetime 2023-06-21 10:30:00-04:00
2024-05-31 17:52:22,597: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,597: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,597: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,597: root: INFO: Current backtesting datetime 2023-06-21 11:00:00-04:00
2024-05-31 17:52:22,598: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,598: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,600: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,601: root: INFO: Current backtesting datetime 2023-06-21 11:30:00-04:00
2024-05-31 17:52:22,601: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,601: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,602: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,603: root: INFO: Current backtesting datetime 2023-06-21 12:00:00-04:00
2024-05-31 17:52:22,603: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,603: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,604: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,604: root: INFO: Current backtesting datetime 2023-06-21 12:30:00-04:00
2024-05-31 17:52:22,605: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,605: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,605: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,607: root: INFO: Current backtesting datetime 2023-06-21 13:00:00-04:00
2024-05-31 17:52:22,607: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,607: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,608: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,608: root: INFO: Current backtesting datetime 2023-06-21 13:30:00-04:00
2024-05-31 17:52:22,608: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,609: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,609: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,610: root: INFO: Current backtesting datetime 2023-06-21 14:00:00-04:00
2024-05-31 17:52:22,611: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,611: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,611: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,612: root: INFO: Current backtesting datetime 2023-06-21 14:30:00-04:00
2024-05-31 17:52:22,612: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,613: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,614: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,614: root: INFO: Current backtesting datetime 2023-06-21 15:00:00-04:00
2024-05-31 17:52:22,615: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,615: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,616: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,617: root: INFO: Current backtesting datetime 2023-06-21 15:30:00-04:00
2024-05-31 17:52:22,617: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,617: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,618: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,619: root: INFO: Current backtesting datetime 2023-06-21 16:00:00-04:00
2024-05-31 17:52:22,619: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:22,620: root: INFO: Current backtesting datetime 2023-06-21 15:59:00-04:00
2024-05-31 17:52:22,620: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:22,621: root: INFO: Current backtesting datetime 2023-06-21 16:00:00-04:00
2024-05-31 17:52:22,621: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:22,622: root: INFO: Current backtesting datetime 2023-06-22 08:30:00-04:00
2024-05-31 17:52:22,622: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:22,622: root: INFO: Current backtesting datetime 2023-06-22 09:30:00-04:00
2024-05-31 17:52:22,622: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:22,623: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,623: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,624: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,624: root: INFO: Current backtesting datetime 2023-06-22 10:00:00-04:00
2024-05-31 17:52:22,624: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,626: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,627: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,628: root: INFO: Current backtesting datetime 2023-06-22 10:30:00-04:00
2024-05-31 17:52:22,628: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,629: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,630: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,650: root: INFO: Current backtesting datetime 2023-06-22 11:00:00-04:00
2024-05-31 17:52:22,651: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,651: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,652: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,652: root: INFO: Current backtesting datetime 2023-06-22 11:30:00-04:00
2024-05-31 17:52:22,652: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,654: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,654: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,655: root: INFO: Current backtesting datetime 2023-06-22 12:00:00-04:00
2024-05-31 17:52:22,655: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,655: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,656: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,657: root: INFO: Current backtesting datetime 2023-06-22 12:30:00-04:00
2024-05-31 17:52:22,657: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,657: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,657: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,658: root: INFO: Current backtesting datetime 2023-06-22 13:00:00-04:00
2024-05-31 17:52:22,658: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,658: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,659: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,660: root: INFO: Current backtesting datetime 2023-06-22 13:30:00-04:00
2024-05-31 17:52:22,660: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,660: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,661: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,662: root: INFO: Current backtesting datetime 2023-06-22 14:00:00-04:00
2024-05-31 17:52:22,662: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,662: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,662: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,664: root: INFO: Current backtesting datetime 2023-06-22 14:30:00-04:00
2024-05-31 17:52:22,665: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,665: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,665: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,666: root: INFO: Current backtesting datetime 2023-06-22 15:00:00-04:00
2024-05-31 17:52:22,666: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,667: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,667: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,669: root: INFO: Current backtesting datetime 2023-06-22 15:30:00-04:00
2024-05-31 17:52:22,669: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,669: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,670: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,671: root: INFO: Current backtesting datetime 2023-06-22 16:00:00-04:00
2024-05-31 17:52:22,671: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:22,673: root: INFO: Current backtesting datetime 2023-06-22 15:59:00-04:00
2024-05-31 17:52:22,673: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:22,673: root: INFO: Current backtesting datetime 2023-06-22 16:00:00-04:00
2024-05-31 17:52:22,673: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:22,674: root: INFO: Current backtesting datetime 2023-06-23 08:30:00-04:00
2024-05-31 17:52:22,674: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:22,675: root: INFO: Current backtesting datetime 2023-06-23 09:30:00-04:00
2024-05-31 17:52:22,675: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:22,676: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,676: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,676: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,678: root: INFO: Current backtesting datetime 2023-06-23 10:00:00-04:00
2024-05-31 17:52:22,679: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,679: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,680: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,681: root: INFO: Current backtesting datetime 2023-06-23 10:30:00-04:00
2024-05-31 17:52:22,681: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,681: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,682: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,682: root: INFO: Current backtesting datetime 2023-06-23 11:00:00-04:00
2024-05-31 17:52:22,683: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,683: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,683: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,685: root: INFO: Current backtesting datetime 2023-06-23 11:30:00-04:00
2024-05-31 17:52:22,685: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,685: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,686: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,687: root: INFO: Current backtesting datetime 2023-06-23 12:00:00-04:00
2024-05-31 17:52:22,687: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,687: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,688: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,688: root: INFO: Current backtesting datetime 2023-06-23 12:30:00-04:00
2024-05-31 17:52:22,689: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,689: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,690: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,690: root: INFO: Current backtesting datetime 2023-06-23 13:00:00-04:00
2024-05-31 17:52:22,691: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,691: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,692: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,693: root: INFO: Current backtesting datetime 2023-06-23 13:30:00-04:00
2024-05-31 17:52:22,693: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,693: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,695: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,696: root: INFO: Current backtesting datetime 2023-06-23 14:00:00-04:00
2024-05-31 17:52:22,696: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,696: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,697: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,697: root: INFO: Current backtesting datetime 2023-06-23 14:30:00-04:00
2024-05-31 17:52:22,698: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,698: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,698: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,700: root: INFO: Current backtesting datetime 2023-06-23 15:00:00-04:00
2024-05-31 17:52:22,700: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,701: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,701: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,702: root: INFO: Current backtesting datetime 2023-06-23 15:30:00-04:00
2024-05-31 17:52:22,702: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,702: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,703: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,704: root: INFO: Current backtesting datetime 2023-06-23 16:00:00-04:00
2024-05-31 17:52:22,704: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:22,704: root: INFO: Current backtesting datetime 2023-06-23 15:59:00-04:00
2024-05-31 17:52:22,705: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:22,705: root: INFO: Current backtesting datetime 2023-06-23 16:00:00-04:00
2024-05-31 17:52:22,705: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:22,705: root: INFO: Current backtesting datetime 2023-06-26 08:30:00-04:00
2024-05-31 17:52:22,707: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:22,707: root: INFO: Current backtesting datetime 2023-06-26 09:30:00-04:00
2024-05-31 17:52:22,708: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:22,708: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,709: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,709: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,709: root: INFO: Current backtesting datetime 2023-06-26 10:00:00-04:00
2024-05-31 17:52:22,710: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,710: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,710: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,711: root: INFO: Current backtesting datetime 2023-06-26 10:30:00-04:00
2024-05-31 17:52:22,712: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,712: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,713: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,713: root: INFO: Current backtesting datetime 2023-06-26 11:00:00-04:00
2024-05-31 17:52:22,714: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,714: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,715: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,715: root: INFO: Current backtesting datetime 2023-06-26 11:30:00-04:00
2024-05-31 17:52:22,715: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,716: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,716: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,717: root: INFO: Current backtesting datetime 2023-06-26 12:00:00-04:00
2024-05-31 17:52:22,717: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,718: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,718: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,719: root: INFO: Current backtesting datetime 2023-06-26 12:30:00-04:00
2024-05-31 17:52:22,720: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,720: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,721: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,722: root: INFO: Current backtesting datetime 2023-06-26 13:00:00-04:00
2024-05-31 17:52:22,722: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,722: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,723: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,724: root: INFO: Current backtesting datetime 2023-06-26 13:30:00-04:00
2024-05-31 17:52:22,724: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,724: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,725: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,726: root: INFO: Current backtesting datetime 2023-06-26 14:00:00-04:00
2024-05-31 17:52:22,726: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,726: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,727: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,728: root: INFO: Current backtesting datetime 2023-06-26 14:30:00-04:00
2024-05-31 17:52:22,729: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,729: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,730: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,731: root: INFO: Current backtesting datetime 2023-06-26 15:00:00-04:00
2024-05-31 17:52:22,732: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,732: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,733: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,734: root: INFO: Current backtesting datetime 2023-06-26 15:30:00-04:00
2024-05-31 17:52:22,734: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,734: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,735: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,736: root: INFO: Current backtesting datetime 2023-06-26 16:00:00-04:00
2024-05-31 17:52:22,736: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:22,737: root: INFO: Current backtesting datetime 2023-06-26 15:59:00-04:00
2024-05-31 17:52:22,737: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:22,738: root: INFO: Current backtesting datetime 2023-06-26 16:00:00-04:00
2024-05-31 17:52:22,738: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:22,738: root: INFO: Current backtesting datetime 2023-06-27 08:30:00-04:00
2024-05-31 17:52:22,739: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:22,739: root: INFO: Current backtesting datetime 2023-06-27 09:30:00-04:00
2024-05-31 17:52:22,741: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:22,741: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,742: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,742: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,743: root: INFO: Current backtesting datetime 2023-06-27 10:00:00-04:00
2024-05-31 17:52:22,744: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,744: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,745: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,745: root: INFO: Current backtesting datetime 2023-06-27 10:30:00-04:00
2024-05-31 17:52:22,745: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,746: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,746: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,747: root: INFO: Current backtesting datetime 2023-06-27 11:00:00-04:00
2024-05-31 17:52:22,747: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,748: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,748: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,749: root: INFO: Current backtesting datetime 2023-06-27 11:30:00-04:00
2024-05-31 17:52:22,749: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,750: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,751: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,751: root: INFO: Current backtesting datetime 2023-06-27 12:00:00-04:00
2024-05-31 17:52:22,753: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,753: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,754: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,755: root: INFO: Current backtesting datetime 2023-06-27 12:30:00-04:00
2024-05-31 17:52:22,755: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,756: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,757: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,757: root: INFO: Current backtesting datetime 2023-06-27 13:00:00-04:00
2024-05-31 17:52:22,758: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,758: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,759: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,759: root: INFO: Current backtesting datetime 2023-06-27 13:30:00-04:00
2024-05-31 17:52:22,760: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,760: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,761: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,762: root: INFO: Current backtesting datetime 2023-06-27 14:00:00-04:00
2024-05-31 17:52:22,762: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,763: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,763: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,765: root: INFO: Current backtesting datetime 2023-06-27 14:30:00-04:00
2024-05-31 17:52:22,765: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,766: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,767: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,769: root: INFO: Current backtesting datetime 2023-06-27 15:00:00-04:00
2024-05-31 17:52:22,765: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:22,770: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,770: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,770: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,772: root: INFO: Current backtesting datetime 2023-06-27 15:30:00-04:00
2024-05-31 17:52:22,772: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,772: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,773: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,774: root: INFO: Current backtesting datetime 2023-06-27 16:00:00-04:00
2024-05-31 17:52:22,774: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:22,775: root: INFO: Current backtesting datetime 2023-06-27 15:59:00-04:00
2024-05-31 17:52:22,775: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:22,777: root: INFO: Current backtesting datetime 2023-06-27 16:00:00-04:00
2024-05-31 17:52:22,777: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:22,777: root: INFO: Current backtesting datetime 2023-06-28 08:30:00-04:00
2024-05-31 17:52:22,778: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:22,779: root: INFO: Current backtesting datetime 2023-06-28 09:30:00-04:00
2024-05-31 17:52:22,779: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:22,780: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,780: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,780: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,781: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:22,782: root: INFO: Current backtesting datetime 2023-06-28 10:00:00-04:00
2024-05-31 17:52:22,782: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,782: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,783: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,784: root: INFO: Current backtesting datetime 2023-06-28 10:30:00-04:00
2024-05-31 17:52:22,784: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,784: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,785: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,785: root: INFO: Current backtesting datetime 2023-06-28 11:00:00-04:00
2024-05-31 17:52:22,787: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,787: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,788: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,788: root: INFO: Current backtesting datetime 2023-06-28 11:30:00-04:00
2024-05-31 17:52:22,789: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,789: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,790: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,790: root: INFO: Current backtesting datetime 2023-06-28 12:00:00-04:00
2024-05-31 17:52:22,791: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,791: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,791: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,792: root: INFO: Current backtesting datetime 2023-06-28 12:30:00-04:00
2024-05-31 17:52:22,792: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,792: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,793: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,794: root: INFO: Current backtesting datetime 2023-06-28 13:00:00-04:00
2024-05-31 17:52:22,794: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,794: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,795: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,795: root: INFO: Current backtesting datetime 2023-06-28 13:30:00-04:00
2024-05-31 17:52:22,797: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,797: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,798: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,799: root: INFO: Current backtesting datetime 2023-06-28 14:00:00-04:00
2024-05-31 17:52:22,799: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,799: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,800: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,800: root: INFO: Current backtesting datetime 2023-06-28 14:30:00-04:00
2024-05-31 17:52:22,801: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,801: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,802: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,802: root: INFO: Current backtesting datetime 2023-06-28 15:00:00-04:00
2024-05-31 17:52:22,803: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,803: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,803: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,804: root: INFO: Current backtesting datetime 2023-06-28 15:30:00-04:00
2024-05-31 17:52:22,804: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,804: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,805: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,805: root: INFO: Current backtesting datetime 2023-06-28 16:00:00-04:00
2024-05-31 17:52:22,805: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:22,807: root: INFO: Current backtesting datetime 2023-06-28 15:59:00-04:00
2024-05-31 17:52:22,807: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:22,808: root: INFO: Current backtesting datetime 2023-06-28 16:00:00-04:00
2024-05-31 17:52:22,808: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:22,808: root: INFO: Current backtesting datetime 2023-06-29 08:30:00-04:00
2024-05-31 17:52:22,809: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:22,809: root: INFO: Current backtesting datetime 2023-06-29 09:30:00-04:00
2024-05-31 17:52:22,810: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:22,810: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,811: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,811: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,813: root: INFO: Current backtesting datetime 2023-06-29 10:00:00-04:00
2024-05-31 17:52:22,813: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,814: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,814: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,815: root: INFO: Current backtesting datetime 2023-06-29 10:30:00-04:00
2024-05-31 17:52:22,815: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,815: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,816: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,817: root: INFO: Current backtesting datetime 2023-06-29 11:00:00-04:00
2024-05-31 17:52:22,817: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,817: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,818: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,819: root: INFO: Current backtesting datetime 2023-06-29 11:30:00-04:00
2024-05-31 17:52:22,819: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,819: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,820: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,821: root: INFO: Current backtesting datetime 2023-06-29 12:00:00-04:00
2024-05-31 17:52:22,821: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,821: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,822: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,822: root: INFO: Current backtesting datetime 2023-06-29 12:30:00-04:00
2024-05-31 17:52:22,823: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,823: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,824: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,824: root: INFO: Current backtesting datetime 2023-06-29 13:00:00-04:00
2024-05-31 17:52:22,824: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,826: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,826: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,827: root: INFO: Current backtesting datetime 2023-06-29 13:30:00-04:00
2024-05-31 17:52:22,827: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,827: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,828: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,829: root: INFO: Current backtesting datetime 2023-06-29 14:00:00-04:00
2024-05-31 17:52:22,829: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,829: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,830: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,830: root: INFO: Current backtesting datetime 2023-06-29 14:30:00-04:00
2024-05-31 17:52:22,831: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,831: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,832: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,832: root: INFO: Current backtesting datetime 2023-06-29 15:00:00-04:00
2024-05-31 17:52:22,833: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,833: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,833: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,834: root: INFO: Current backtesting datetime 2023-06-29 15:30:00-04:00
2024-05-31 17:52:22,834: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,835: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,835: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,836: root: INFO: Current backtesting datetime 2023-06-29 16:00:00-04:00
2024-05-31 17:52:22,836: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:22,838: root: INFO: Current backtesting datetime 2023-06-29 15:59:00-04:00
2024-05-31 17:52:22,838: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:22,839: root: INFO: Current backtesting datetime 2023-06-29 16:00:00-04:00
2024-05-31 17:52:22,839: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:22,840: root: INFO: Current backtesting datetime 2023-06-30 08:30:00-04:00
2024-05-31 17:52:22,840: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:22,841: root: INFO: Current backtesting datetime 2023-06-30 09:30:00-04:00
2024-05-31 17:52:22,841: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:22,842: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,842: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:22[0m
2024-05-31 17:52:22,842: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:22,842: root: INFO: Current backtesting datetime 2023-06-30 10:00:00-04:00
2024-05-31 17:52:22,844: root: INFO: Current backtesting datetime 2023-06-30 15:59:00-04:00
2024-05-31 17:52:22,845: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:22,846: root: INFO: Current backtesting datetime 2023-06-30 16:00:00-04:00
2024-05-31 17:52:22,846: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:22,846: asyncio: INFO: [MLTrader] Executing the on_strategy_end lifecycle method
2024-05-31 17:52:23,035: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:23,063: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:23,316: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:23,345: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:23,440: root: INFO: Backtesting finished
2024-05-31 17:52:23,595: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:23,611: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:23,865: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:23,893: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:24,153: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:24,175: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:24,425: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:24,440: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:24,686: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:24,705: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:24,960: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:24,987: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:25,234: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:25,251: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:25,506: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:25,533: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:25,793: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:25,821: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:26,097: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:26,125: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:26,388: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:26,409: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:26,683: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:26,708: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:26,981: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:27,005: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:27,254: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:27,287: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:27,427: backtest_stats: INFO: Backtest took 0:00:09.297822 for a speed of 0.000
2024-05-31 17:52:27,676: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:27,804: alpaca.trading.stream: INFO: starting trading websocket connection
