2024-05-31 17:28:40,266: asyncio: INFO: [MLTrader] Executing the initialize lifecycle method
2024-05-31 17:28:40,397: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:28:40,553: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:28:41,025: root: INFO: Current backtesting datetime 2023-05-11 10:00:00-04:00
2024-05-31 17:28:41,029: root: INFO: Current backtesting datetime 2023-05-11 11:00:00-04:00
2024-05-31 17:28:41,023: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:28:41,029: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:41,030: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,030: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,040: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:28:41,291: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:28:41,306: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:28:41,515: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,601: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:28:41,649: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:28:41,656: asyncio: WARNING: [MLTrader] Selling all positions for MLTrader strategy
2024-05-31 17:28:41,657: asyncio: INFO: [MLTrader] [32mNew order was created: market order of | 2427.0 SPY buy | at price $420.1890124511719 of class bracket with status new[0m
2024-05-31 17:28:41,659: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,659: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,659: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,660: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,660: root: INFO: market order of | 2427.0 SPY buy | at price $420.1890124511719 of class bracket with status new was sent to broker backtesting
2024-05-31 17:28:41,660: root: INFO: market order of | 2427.0 SPY buy | at price $420.1890124511719 of class bracket with status new was sent to broker backtesting
2024-05-31 17:28:41,660: asyncio: INFO: [MLTrader] [32mOrder was filled: market order of | 2427.0 SPY buy | at price $411.95 of class bracket with status fill[0m
2024-05-31 17:28:41,664: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,665: root: INFO: Current backtesting datetime 2023-05-11 11:30:00-04:00
2024-05-31 17:28:41,666: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,666: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,666: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,666: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,667: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,667: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,667: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,667: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,668: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,669: root: INFO: Current backtesting datetime 2023-05-11 12:00:00-04:00
2024-05-31 17:28:41,670: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,670: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,670: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,670: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,670: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,671: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,671: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,671: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,672: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,673: root: INFO: Current backtesting datetime 2023-05-11 12:30:00-04:00
2024-05-31 17:28:41,674: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,674: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,674: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,674: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,674: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,674: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,674: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,675: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,675: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,677: root: INFO: Current backtesting datetime 2023-05-11 13:00:00-04:00
2024-05-31 17:28:41,678: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,678: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,678: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,678: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,678: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,678: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,679: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,679: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,679: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,680: root: INFO: Current backtesting datetime 2023-05-11 13:30:00-04:00
2024-05-31 17:28:41,680: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,681: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,681: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,681: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,681: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,681: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,681: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,682: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,682: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,683: root: INFO: Current backtesting datetime 2023-05-11 14:00:00-04:00
2024-05-31 17:28:41,684: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,685: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,685: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,685: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,685: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,685: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,685: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,686: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,687: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,687: root: INFO: Current backtesting datetime 2023-05-11 14:30:00-04:00
2024-05-31 17:28:41,688: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,689: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,689: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,689: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,689: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,689: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,689: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,690: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,690: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,691: root: INFO: Current backtesting datetime 2023-05-11 15:00:00-04:00
2024-05-31 17:28:41,692: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,693: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,693: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,693: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,693: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,693: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,693: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,694: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,694: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,695: root: INFO: Current backtesting datetime 2023-05-11 15:30:00-04:00
2024-05-31 17:28:41,695: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,695: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,696: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,696: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,696: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,696: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,696: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,696: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,698: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,699: root: INFO: Current backtesting datetime 2023-05-11 16:00:00-04:00
2024-05-31 17:28:41,700: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:41,700: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,700: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,701: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,701: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,701: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,701: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,702: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,702: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,702: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,702: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,702: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,703: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,704: root: INFO: Current backtesting datetime 2023-05-11 15:59:00-04:00
2024-05-31 17:28:41,704: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:41,704: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,704: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,704: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,705: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,705: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,705: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,706: root: INFO: Current backtesting datetime 2023-05-11 16:00:00-04:00
2024-05-31 17:28:41,706: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:41,706: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,706: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,706: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,706: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,707: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,707: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,707: root: INFO: Current backtesting datetime 2023-05-12 08:30:00-04:00
2024-05-31 17:28:41,708: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,708: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,709: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:41,709: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,709: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,709: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,709: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,709: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,710: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,711: root: INFO: Current backtesting datetime 2023-05-12 09:30:00-04:00
2024-05-31 17:28:41,711: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:41,712: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,712: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,712: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,712: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,713: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,713: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,713: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,713: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,714: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,715: root: INFO: Current backtesting datetime 2023-05-12 10:00:00-04:00
2024-05-31 17:28:41,715: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,716: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,716: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,716: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,717: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,717: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,717: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,717: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,718: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,719: root: INFO: Current backtesting datetime 2023-05-12 10:30:00-04:00
2024-05-31 17:28:41,719: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,720: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,720: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,720: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,720: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,720: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,720: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,721: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,721: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,722: root: INFO: Current backtesting datetime 2023-05-12 11:00:00-04:00
2024-05-31 17:28:41,723: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,723: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,723: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,723: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,723: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,724: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,724: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,724: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,725: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,725: root: INFO: Current backtesting datetime 2023-05-12 11:30:00-04:00
2024-05-31 17:28:41,726: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,727: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,727: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,727: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,727: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,727: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,727: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,728: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,728: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,729: root: INFO: Current backtesting datetime 2023-05-12 12:00:00-04:00
2024-05-31 17:28:41,730: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,730: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,730: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,730: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,731: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,731: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,731: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,731: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,732: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,732: root: INFO: Current backtesting datetime 2023-05-12 12:30:00-04:00
2024-05-31 17:28:41,733: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,734: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,734: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,734: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,734: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,734: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,734: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,735: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,735: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,735: root: INFO: Current backtesting datetime 2023-05-12 13:00:00-04:00
2024-05-31 17:28:41,736: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,736: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,736: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,736: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,737: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,737: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,737: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,737: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,738: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,739: root: INFO: Current backtesting datetime 2023-05-12 13:30:00-04:00
2024-05-31 17:28:41,739: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,740: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,740: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,740: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,740: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,740: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,740: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,741: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,741: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,743: root: INFO: Current backtesting datetime 2023-05-12 14:00:00-04:00
2024-05-31 17:28:41,743: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,744: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,744: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,744: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,744: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,744: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,744: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,745: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,745: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,746: root: INFO: Current backtesting datetime 2023-05-12 14:30:00-04:00
2024-05-31 17:28:41,748: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,748: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,748: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,748: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,748: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,748: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,749: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,749: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,749: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,750: root: INFO: Current backtesting datetime 2023-05-12 15:00:00-04:00
2024-05-31 17:28:41,751: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,751: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,751: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,751: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,752: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,752: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,752: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,752: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,753: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,753: root: INFO: Current backtesting datetime 2023-05-12 15:30:00-04:00
2024-05-31 17:28:41,754: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,755: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,755: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,755: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,755: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,755: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,755: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,756: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,756: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,757: root: INFO: Current backtesting datetime 2023-05-12 16:00:00-04:00
2024-05-31 17:28:41,757: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:41,757: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,758: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,758: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,758: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,758: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,758: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,759: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,759: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,759: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,759: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,759: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,760: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,760: root: INFO: Current backtesting datetime 2023-05-12 15:59:00-04:00
2024-05-31 17:28:41,761: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:41,761: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,761: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,761: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,761: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,761: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,762: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,762: root: INFO: Current backtesting datetime 2023-05-12 16:00:00-04:00
2024-05-31 17:28:41,762: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:41,762: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,762: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,763: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,763: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,763: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,763: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,764: root: INFO: Current backtesting datetime 2023-05-15 08:30:00-04:00
2024-05-31 17:28:41,764: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,765: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,766: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:41,766: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,766: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,767: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,767: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,767: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,767: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,768: root: INFO: Current backtesting datetime 2023-05-15 09:30:00-04:00
2024-05-31 17:28:41,768: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:41,788: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,788: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,788: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,789: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,789: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,789: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,789: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,790: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,790: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,791: root: INFO: Current backtesting datetime 2023-05-15 10:00:00-04:00
2024-05-31 17:28:41,792: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,792: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,792: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,792: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,792: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,793: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,793: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,793: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,794: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,794: root: INFO: Current backtesting datetime 2023-05-15 10:30:00-04:00
2024-05-31 17:28:41,795: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,795: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,795: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,795: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,796: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,796: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,796: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,797: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,797: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,798: root: INFO: Current backtesting datetime 2023-05-15 11:00:00-04:00
2024-05-31 17:28:41,799: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,799: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,799: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,799: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,800: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,800: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,800: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,800: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,801: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,801: root: INFO: Current backtesting datetime 2023-05-15 11:30:00-04:00
2024-05-31 17:28:41,802: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,803: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,803: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,803: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,803: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,803: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,803: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,804: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,805: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,805: root: INFO: Current backtesting datetime 2023-05-15 12:00:00-04:00
2024-05-31 17:28:41,806: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,806: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,806: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,806: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,807: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,807: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,807: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,808: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,808: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,809: root: INFO: Current backtesting datetime 2023-05-15 12:30:00-04:00
2024-05-31 17:28:41,810: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,810: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,811: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,811: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,811: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,811: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,811: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,812: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,812: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,813: root: INFO: Current backtesting datetime 2023-05-15 13:00:00-04:00
2024-05-31 17:28:41,814: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,814: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,814: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,814: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,814: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,815: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,815: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,815: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,817: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,817: root: INFO: Current backtesting datetime 2023-05-15 13:30:00-04:00
2024-05-31 17:28:41,818: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,819: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,819: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,819: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,819: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,819: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,819: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,820: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,820: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,821: root: INFO: Current backtesting datetime 2023-05-15 14:00:00-04:00
2024-05-31 17:28:41,822: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,822: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,822: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,822: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,823: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,823: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,823: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,823: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,824: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,825: root: INFO: Current backtesting datetime 2023-05-15 14:30:00-04:00
2024-05-31 17:28:41,826: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,826: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,826: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,826: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,827: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,827: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,827: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,827: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,828: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,829: root: INFO: Current backtesting datetime 2023-05-15 15:00:00-04:00
2024-05-31 17:28:41,830: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,830: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,830: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,830: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,831: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,831: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,831: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,831: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,832: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,832: root: INFO: Current backtesting datetime 2023-05-15 15:30:00-04:00
2024-05-31 17:28:41,833: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,834: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,834: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,834: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,834: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,834: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,834: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,835: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,835: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,835: root: INFO: Current backtesting datetime 2023-05-15 16:00:00-04:00
2024-05-31 17:28:41,837: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:41,837: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,837: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,837: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,837: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,837: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,838: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,838: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,839: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,839: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,839: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,839: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,839: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,840: root: INFO: Current backtesting datetime 2023-05-15 15:59:00-04:00
2024-05-31 17:28:41,840: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:41,841: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,841: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,841: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,841: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,841: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,842: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,842: root: INFO: Current backtesting datetime 2023-05-15 16:00:00-04:00
2024-05-31 17:28:41,842: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:41,842: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,842: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,843: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,843: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,843: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,843: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,844: root: INFO: Current backtesting datetime 2023-05-16 08:30:00-04:00
2024-05-31 17:28:41,844: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,845: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,845: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:41,845: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,845: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,846: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,846: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,846: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,847: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,847: root: INFO: Current backtesting datetime 2023-05-16 09:30:00-04:00
2024-05-31 17:28:41,847: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:41,849: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,849: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,849: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,849: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,850: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,850: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,850: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,850: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,851: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,851: root: INFO: Current backtesting datetime 2023-05-16 10:00:00-04:00
2024-05-31 17:28:41,852: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,852: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,852: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,852: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,852: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,853: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,853: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,853: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,854: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,854: root: INFO: Current backtesting datetime 2023-05-16 10:30:00-04:00
2024-05-31 17:28:41,855: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,855: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,856: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,856: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,856: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,856: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,856: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,857: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,857: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,858: root: INFO: Current backtesting datetime 2023-05-16 11:00:00-04:00
2024-05-31 17:28:41,859: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,859: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,859: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,859: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,859: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,860: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,860: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,860: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,861: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,861: root: INFO: Current backtesting datetime 2023-05-16 11:30:00-04:00
2024-05-31 17:28:41,862: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,862: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,862: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,862: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,863: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,863: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,863: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,863: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,864: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,865: root: INFO: Current backtesting datetime 2023-05-16 12:00:00-04:00
2024-05-31 17:28:41,866: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,866: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,866: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,866: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,867: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,867: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,867: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,868: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,868: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,869: root: INFO: Current backtesting datetime 2023-05-16 12:30:00-04:00
2024-05-31 17:28:41,870: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,870: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,870: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,870: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,871: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,871: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,871: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,871: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,872: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,873: root: INFO: Current backtesting datetime 2023-05-16 13:00:00-04:00
2024-05-31 17:28:41,874: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,874: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,874: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,874: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,874: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,875: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,875: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,875: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,875: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,876: root: INFO: Current backtesting datetime 2023-05-16 13:30:00-04:00
2024-05-31 17:28:41,877: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,877: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,877: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,877: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,877: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,878: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,878: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,878: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,879: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,879: root: INFO: Current backtesting datetime 2023-05-16 14:00:00-04:00
2024-05-31 17:28:41,880: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,880: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,881: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,881: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,881: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,881: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,881: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,881: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,883: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,884: root: INFO: Current backtesting datetime 2023-05-16 14:30:00-04:00
2024-05-31 17:28:41,885: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,885: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,885: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,885: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,886: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,886: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,886: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,886: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,887: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,887: root: INFO: Current backtesting datetime 2023-05-16 15:00:00-04:00
2024-05-31 17:28:41,888: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,889: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,889: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,889: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,889: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,889: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,889: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,890: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,890: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,891: root: INFO: Current backtesting datetime 2023-05-16 15:30:00-04:00
2024-05-31 17:28:41,892: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,892: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,892: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,892: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,893: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,893: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,893: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,893: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,894: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,894: root: INFO: Current backtesting datetime 2023-05-16 16:00:00-04:00
2024-05-31 17:28:41,895: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:41,895: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,895: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,896: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,896: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,896: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,896: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,897: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,897: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,897: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,899: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,899: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,899: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,899: root: INFO: Current backtesting datetime 2023-05-16 15:59:00-04:00
2024-05-31 17:28:41,900: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:41,900: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,900: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,900: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,901: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,901: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,901: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,902: root: INFO: Current backtesting datetime 2023-05-16 16:00:00-04:00
2024-05-31 17:28:41,902: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:41,902: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,902: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,902: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,902: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,902: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,903: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,904: root: INFO: Current backtesting datetime 2023-05-17 08:30:00-04:00
2024-05-31 17:28:41,905: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,906: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,906: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:41,906: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,906: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,907: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,907: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,907: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,907: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,908: root: INFO: Current backtesting datetime 2023-05-17 09:30:00-04:00
2024-05-31 17:28:41,905: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:28:41,908: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:41,909: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,910: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,910: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,910: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,910: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,910: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,910: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,911: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,911: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,912: root: INFO: Current backtesting datetime 2023-05-17 10:00:00-04:00
2024-05-31 17:28:41,913: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,913: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,913: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,913: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,914: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,914: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,915: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,915: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,915: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,916: root: INFO: Current backtesting datetime 2023-05-17 10:30:00-04:00
2024-05-31 17:28:41,917: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,917: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,917: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,917: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,917: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,917: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,918: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,918: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,919: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,919: root: INFO: Current backtesting datetime 2023-05-17 11:00:00-04:00
2024-05-31 17:28:41,920: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,920: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,921: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,921: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,921: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,921: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,921: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,922: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,922: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,923: root: INFO: Current backtesting datetime 2023-05-17 11:30:00-04:00
2024-05-31 17:28:41,924: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,924: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,924: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,924: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,925: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,925: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,925: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,925: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,926: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,928: root: INFO: Current backtesting datetime 2023-05-17 12:00:00-04:00
2024-05-31 17:28:41,929: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,929: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,929: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,929: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,929: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,930: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,930: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:28:41,930: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,930: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,931: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,932: root: INFO: Current backtesting datetime 2023-05-17 12:30:00-04:00
2024-05-31 17:28:41,933: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,933: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,933: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,933: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,934: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,934: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,934: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,934: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,935: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,936: root: INFO: Current backtesting datetime 2023-05-17 13:00:00-04:00
2024-05-31 17:28:41,936: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,936: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,937: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,937: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,937: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,937: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,937: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,938: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,938: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,939: root: INFO: Current backtesting datetime 2023-05-17 13:30:00-04:00
2024-05-31 17:28:41,940: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,940: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,940: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,940: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,940: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,941: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,941: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,941: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,942: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,943: root: INFO: Current backtesting datetime 2023-05-17 14:00:00-04:00
2024-05-31 17:28:41,943: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,944: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,944: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,944: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,944: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,944: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,944: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,946: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,946: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,947: root: INFO: Current backtesting datetime 2023-05-17 14:30:00-04:00
2024-05-31 17:28:41,948: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,948: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,948: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,948: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,949: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,949: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,949: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,949: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,950: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,951: root: INFO: Current backtesting datetime 2023-05-17 15:00:00-04:00
2024-05-31 17:28:41,952: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,952: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,952: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,952: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,952: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,953: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,953: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,953: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,954: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,955: root: INFO: Current backtesting datetime 2023-05-17 15:30:00-04:00
2024-05-31 17:28:41,956: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,957: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,957: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,957: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,957: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,957: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,957: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,958: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,958: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,959: root: INFO: Current backtesting datetime 2023-05-17 16:00:00-04:00
2024-05-31 17:28:41,960: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:41,960: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,960: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,960: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,960: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,961: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,961: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,962: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,962: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,963: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,963: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,963: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,963: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,964: root: INFO: Current backtesting datetime 2023-05-17 15:59:00-04:00
2024-05-31 17:28:41,965: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:41,965: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,965: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,965: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,965: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,965: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,965: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,966: root: INFO: Current backtesting datetime 2023-05-17 16:00:00-04:00
2024-05-31 17:28:41,966: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:41,966: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,966: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,966: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,966: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,966: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,967: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,967: root: INFO: Current backtesting datetime 2023-05-18 08:30:00-04:00
2024-05-31 17:28:41,968: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,968: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,969: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:41,969: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,969: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,969: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,970: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,970: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,970: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,971: root: INFO: Current backtesting datetime 2023-05-18 09:30:00-04:00
2024-05-31 17:28:41,971: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:41,972: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,972: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,972: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,972: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,973: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,973: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,973: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,973: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,974: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,974: root: INFO: Current backtesting datetime 2023-05-18 10:00:00-04:00
2024-05-31 17:28:41,975: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,975: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,975: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,975: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,976: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,977: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,977: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,977: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,978: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,978: root: INFO: Current backtesting datetime 2023-05-18 10:30:00-04:00
2024-05-31 17:28:41,979: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,979: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,979: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,979: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,980: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,980: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,980: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,980: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,981: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,982: root: INFO: Current backtesting datetime 2023-05-18 11:00:00-04:00
2024-05-31 17:28:41,982: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,983: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,983: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,983: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,983: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,983: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,983: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,984: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,984: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,985: root: INFO: Current backtesting datetime 2023-05-18 11:30:00-04:00
2024-05-31 17:28:41,985: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,986: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,986: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,986: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,986: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,986: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,986: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,987: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,987: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,988: root: INFO: Current backtesting datetime 2023-05-18 12:00:00-04:00
2024-05-31 17:28:41,989: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,989: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,989: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,989: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,990: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,990: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,990: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,990: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,991: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,992: root: INFO: Current backtesting datetime 2023-05-18 12:30:00-04:00
2024-05-31 17:28:41,993: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,993: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,993: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,993: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,994: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,994: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,994: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,994: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,995: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,995: root: INFO: Current backtesting datetime 2023-05-18 13:00:00-04:00
2024-05-31 17:28:41,996: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,997: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:41[0m
2024-05-31 17:28:41,997: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,997: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,997: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,997: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:41,997: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,998: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:41,998: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:41,999: root: INFO: Current backtesting datetime 2023-05-18 13:30:00-04:00
2024-05-31 17:28:42,000: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,000: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,001: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:42,001: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,001: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,001: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:42,001: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,002: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,002: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,003: root: INFO: Current backtesting datetime 2023-05-18 14:00:00-04:00
2024-05-31 17:28:42,004: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,004: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,004: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:42,004: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,005: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,005: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:42,005: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,005: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,006: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,007: root: INFO: Current backtesting datetime 2023-05-18 14:30:00-04:00
2024-05-31 17:28:42,008: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,008: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,008: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:42,008: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,009: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,009: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:42,009: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,009: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,010: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,011: root: INFO: Current backtesting datetime 2023-05-18 15:00:00-04:00
2024-05-31 17:28:42,012: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,012: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,012: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:42,012: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,012: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,012: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:42,013: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,013: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,013: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,014: root: INFO: Current backtesting datetime 2023-05-18 15:30:00-04:00
2024-05-31 17:28:42,015: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,015: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,015: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:42,015: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,015: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,015: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:42,015: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,016: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,017: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,017: root: INFO: Current backtesting datetime 2023-05-18 16:00:00-04:00
2024-05-31 17:28:42,018: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:42,018: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:42,018: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,019: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,019: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:42,019: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,019: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,020: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:42,020: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,020: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,020: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:42,020: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,021: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,022: root: INFO: Current backtesting datetime 2023-05-18 15:59:00-04:00
2024-05-31 17:28:42,023: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:42,023: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:42,023: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,024: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,024: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:42,024: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,024: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,025: root: INFO: Current backtesting datetime 2023-05-18 16:00:00-04:00
2024-05-31 17:28:42,025: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:42,025: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:42,025: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,025: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,026: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:42,026: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,026: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,027: root: INFO: Current backtesting datetime 2023-05-19 08:30:00-04:00
2024-05-31 17:28:42,027: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,028: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,028: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:42,028: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:42,028: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,029: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,029: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:28:42,029: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,029: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:28:42,029: asyncio: INFO: [MLTrader] [32mOrder was canceled: stop order of | 2427.0 SPY sell | at price $407.83051208496096 with status canceled[0m
2024-05-31 17:28:42,031: root: INFO: Position MLTrader Position: 0.0 shares of SPY (2 orders) liquidated
2024-05-31 17:28:42,032: asyncio: INFO: [MLTrader] [32mOrder was filled: limit order of | 2427.0 SPY sell | at price $420.19 with status fill[0m
2024-05-31 17:28:42,034: root: INFO: Current backtesting datetime 2023-05-19 09:30:00-04:00
2024-05-31 17:28:42,034: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:42,035: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,035: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,035: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,037: root: INFO: Current backtesting datetime 2023-05-19 10:00:00-04:00
2024-05-31 17:28:42,037: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,038: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,039: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,039: root: INFO: Current backtesting datetime 2023-05-19 10:30:00-04:00
2024-05-31 17:28:42,040: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,040: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,041: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,041: root: INFO: Current backtesting datetime 2023-05-19 11:00:00-04:00
2024-05-31 17:28:42,041: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,042: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,042: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,061: root: INFO: Current backtesting datetime 2023-05-19 11:30:00-04:00
2024-05-31 17:28:42,062: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,062: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,063: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,064: root: INFO: Current backtesting datetime 2023-05-19 12:00:00-04:00
2024-05-31 17:28:42,064: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,064: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,065: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,066: root: INFO: Current backtesting datetime 2023-05-19 12:30:00-04:00
2024-05-31 17:28:42,066: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,066: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,067: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,068: root: INFO: Current backtesting datetime 2023-05-19 13:00:00-04:00
2024-05-31 17:28:42,068: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,068: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,069: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,070: root: INFO: Current backtesting datetime 2023-05-19 13:30:00-04:00
2024-05-31 17:28:42,070: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,071: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,071: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,072: root: INFO: Current backtesting datetime 2023-05-19 14:00:00-04:00
2024-05-31 17:28:42,072: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,072: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,073: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,074: root: INFO: Current backtesting datetime 2023-05-19 14:30:00-04:00
2024-05-31 17:28:42,074: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,074: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,075: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,075: root: INFO: Current backtesting datetime 2023-05-19 15:00:00-04:00
2024-05-31 17:28:42,075: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,075: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,076: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,077: root: INFO: Current backtesting datetime 2023-05-19 15:30:00-04:00
2024-05-31 17:28:42,077: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,077: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,078: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,078: root: INFO: Current backtesting datetime 2023-05-19 16:00:00-04:00
2024-05-31 17:28:42,079: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:42,080: root: INFO: Current backtesting datetime 2023-05-19 15:59:00-04:00
2024-05-31 17:28:42,081: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:42,081: root: INFO: Current backtesting datetime 2023-05-19 16:00:00-04:00
2024-05-31 17:28:42,081: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:42,082: root: INFO: Current backtesting datetime 2023-05-22 08:30:00-04:00
2024-05-31 17:28:42,082: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:42,083: root: INFO: Current backtesting datetime 2023-05-22 09:30:00-04:00
2024-05-31 17:28:42,083: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:42,083: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,084: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,084: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,085: root: INFO: Current backtesting datetime 2023-05-22 10:00:00-04:00
2024-05-31 17:28:42,085: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,086: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,086: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,088: root: INFO: Current backtesting datetime 2023-05-22 10:30:00-04:00
2024-05-31 17:28:42,088: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,089: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,089: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,090: root: INFO: Current backtesting datetime 2023-05-22 11:00:00-04:00
2024-05-31 17:28:42,090: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,090: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,091: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,091: root: INFO: Current backtesting datetime 2023-05-22 11:30:00-04:00
2024-05-31 17:28:42,092: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,092: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,093: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,093: root: INFO: Current backtesting datetime 2023-05-22 12:00:00-04:00
2024-05-31 17:28:42,094: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,094: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,095: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,095: root: INFO: Current backtesting datetime 2023-05-22 12:30:00-04:00
2024-05-31 17:28:42,095: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,096: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,096: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,097: root: INFO: Current backtesting datetime 2023-05-22 13:00:00-04:00
2024-05-31 17:28:42,097: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,097: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,098: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,099: root: INFO: Current backtesting datetime 2023-05-22 13:30:00-04:00
2024-05-31 17:28:42,099: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,099: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,100: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,101: root: INFO: Current backtesting datetime 2023-05-22 14:00:00-04:00
2024-05-31 17:28:42,101: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,102: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,102: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,103: root: INFO: Current backtesting datetime 2023-05-22 14:30:00-04:00
2024-05-31 17:28:42,103: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,104: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,104: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,105: root: INFO: Current backtesting datetime 2023-05-22 15:00:00-04:00
2024-05-31 17:28:42,105: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,105: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,106: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,107: root: INFO: Current backtesting datetime 2023-05-22 15:30:00-04:00
2024-05-31 17:28:42,107: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,107: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,108: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,109: root: INFO: Current backtesting datetime 2023-05-22 16:00:00-04:00
2024-05-31 17:28:42,109: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:42,110: root: INFO: Current backtesting datetime 2023-05-22 15:59:00-04:00
2024-05-31 17:28:42,110: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:42,111: root: INFO: Current backtesting datetime 2023-05-22 16:00:00-04:00
2024-05-31 17:28:42,111: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:42,112: root: INFO: Current backtesting datetime 2023-05-23 08:30:00-04:00
2024-05-31 17:28:42,112: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:42,113: root: INFO: Current backtesting datetime 2023-05-23 09:30:00-04:00
2024-05-31 17:28:42,113: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:42,113: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,114: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,114: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,115: root: INFO: Current backtesting datetime 2023-05-23 10:00:00-04:00
2024-05-31 17:28:42,115: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,116: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,117: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,117: root: INFO: Current backtesting datetime 2023-05-23 10:30:00-04:00
2024-05-31 17:28:42,118: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,118: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,119: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,120: root: INFO: Current backtesting datetime 2023-05-23 11:00:00-04:00
2024-05-31 17:28:42,120: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,121: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,121: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,122: root: INFO: Current backtesting datetime 2023-05-23 11:30:00-04:00
2024-05-31 17:28:42,122: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,122: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,123: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,124: root: INFO: Current backtesting datetime 2023-05-23 12:00:00-04:00
2024-05-31 17:28:42,124: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,124: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,125: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,125: root: INFO: Current backtesting datetime 2023-05-23 12:30:00-04:00
2024-05-31 17:28:42,126: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,126: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,126: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,127: root: INFO: Current backtesting datetime 2023-05-23 13:00:00-04:00
2024-05-31 17:28:42,128: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,128: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,128: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,130: root: INFO: Current backtesting datetime 2023-05-23 13:30:00-04:00
2024-05-31 17:28:42,130: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,130: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,130: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,132: root: INFO: Current backtesting datetime 2023-05-23 14:00:00-04:00
2024-05-31 17:28:42,132: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,132: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,133: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,133: root: INFO: Current backtesting datetime 2023-05-23 14:30:00-04:00
2024-05-31 17:28:42,134: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,134: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,134: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,135: root: INFO: Current backtesting datetime 2023-05-23 15:00:00-04:00
2024-05-31 17:28:42,136: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,136: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,136: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,137: root: INFO: Current backtesting datetime 2023-05-23 15:30:00-04:00
2024-05-31 17:28:42,137: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,138: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,138: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,139: root: INFO: Current backtesting datetime 2023-05-23 16:00:00-04:00
2024-05-31 17:28:42,139: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:42,140: root: INFO: Current backtesting datetime 2023-05-23 15:59:00-04:00
2024-05-31 17:28:42,141: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:42,141: root: INFO: Current backtesting datetime 2023-05-23 16:00:00-04:00
2024-05-31 17:28:42,141: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:42,142: root: INFO: Current backtesting datetime 2023-05-24 08:30:00-04:00
2024-05-31 17:28:42,142: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:42,143: root: INFO: Current backtesting datetime 2023-05-24 09:30:00-04:00
2024-05-31 17:28:42,143: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:42,144: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,144: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,144: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,145: root: INFO: Current backtesting datetime 2023-05-24 10:00:00-04:00
2024-05-31 17:28:42,145: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,146: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,146: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,148: root: INFO: Current backtesting datetime 2023-05-24 10:30:00-04:00
2024-05-31 17:28:42,148: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,148: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,149: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,149: root: INFO: Current backtesting datetime 2023-05-24 11:00:00-04:00
2024-05-31 17:28:42,150: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,150: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,151: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,151: root: INFO: Current backtesting datetime 2023-05-24 11:30:00-04:00
2024-05-31 17:28:42,152: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,152: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,153: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,153: root: INFO: Current backtesting datetime 2023-05-24 12:00:00-04:00
2024-05-31 17:28:42,154: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,154: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,154: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,155: root: INFO: Current backtesting datetime 2023-05-24 12:30:00-04:00
2024-05-31 17:28:42,155: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,156: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,156: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,158: root: INFO: Current backtesting datetime 2023-05-24 13:00:00-04:00
2024-05-31 17:28:42,158: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,158: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,159: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,160: root: INFO: Current backtesting datetime 2023-05-24 13:30:00-04:00
2024-05-31 17:28:42,160: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,160: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,161: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,161: root: INFO: Current backtesting datetime 2023-05-24 14:00:00-04:00
2024-05-31 17:28:42,162: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,162: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,162: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,163: root: INFO: Current backtesting datetime 2023-05-24 14:30:00-04:00
2024-05-31 17:28:42,163: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,163: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,164: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,165: root: INFO: Current backtesting datetime 2023-05-24 15:00:00-04:00
2024-05-31 17:28:42,165: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,165: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,166: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,167: root: INFO: Current backtesting datetime 2023-05-24 15:30:00-04:00
2024-05-31 17:28:42,167: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,168: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,168: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,169: root: INFO: Current backtesting datetime 2023-05-24 16:00:00-04:00
2024-05-31 17:28:42,169: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:42,170: root: INFO: Current backtesting datetime 2023-05-24 15:59:00-04:00
2024-05-31 17:28:42,170: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:42,171: root: INFO: Current backtesting datetime 2023-05-24 16:00:00-04:00
2024-05-31 17:28:42,171: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:42,172: root: INFO: Current backtesting datetime 2023-05-25 08:30:00-04:00
2024-05-31 17:28:42,172: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:42,173: root: INFO: Current backtesting datetime 2023-05-25 09:30:00-04:00
2024-05-31 17:28:42,173: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:42,173: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,174: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,174: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,175: root: INFO: Current backtesting datetime 2023-05-25 10:00:00-04:00
2024-05-31 17:28:42,175: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,175: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,175: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,176: root: INFO: Current backtesting datetime 2023-05-25 10:30:00-04:00
2024-05-31 17:28:42,177: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,177: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,178: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,181: root: INFO: Current backtesting datetime 2023-05-25 11:00:00-04:00
2024-05-31 17:28:42,178: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:28:42,182: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,182: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,183: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,184: root: INFO: Current backtesting datetime 2023-05-25 11:30:00-04:00
2024-05-31 17:28:42,184: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,184: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,185: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,185: root: INFO: Current backtesting datetime 2023-05-25 12:00:00-04:00
2024-05-31 17:28:42,185: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,186: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,186: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,187: root: INFO: Current backtesting datetime 2023-05-25 12:30:00-04:00
2024-05-31 17:28:42,187: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,187: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,188: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,189: root: INFO: Current backtesting datetime 2023-05-25 13:00:00-04:00
2024-05-31 17:28:42,189: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,189: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,190: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,190: root: INFO: Current backtesting datetime 2023-05-25 13:30:00-04:00
2024-05-31 17:28:42,191: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,191: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,192: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,192: root: INFO: Current backtesting datetime 2023-05-25 14:00:00-04:00
2024-05-31 17:28:42,193: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,193: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,193: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:28:42,194: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,195: root: INFO: Current backtesting datetime 2023-05-25 14:30:00-04:00
2024-05-31 17:28:42,195: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,196: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,197: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,197: root: INFO: Current backtesting datetime 2023-05-25 15:00:00-04:00
2024-05-31 17:28:42,198: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,198: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,199: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,199: root: INFO: Current backtesting datetime 2023-05-25 15:30:00-04:00
2024-05-31 17:28:42,200: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,200: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,200: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,201: root: INFO: Current backtesting datetime 2023-05-25 16:00:00-04:00
2024-05-31 17:28:42,201: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:42,202: root: INFO: Current backtesting datetime 2023-05-25 15:59:00-04:00
2024-05-31 17:28:42,203: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:42,203: root: INFO: Current backtesting datetime 2023-05-25 16:00:00-04:00
2024-05-31 17:28:42,203: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:42,204: root: INFO: Current backtesting datetime 2023-05-26 08:30:00-04:00
2024-05-31 17:28:42,204: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:42,205: root: INFO: Current backtesting datetime 2023-05-26 09:30:00-04:00
2024-05-31 17:28:42,205: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:42,205: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,205: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,206: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,206: root: INFO: Current backtesting datetime 2023-05-26 10:00:00-04:00
2024-05-31 17:28:42,207: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,207: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,208: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,208: root: INFO: Current backtesting datetime 2023-05-26 10:30:00-04:00
2024-05-31 17:28:42,208: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,210: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,210: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,210: root: INFO: Current backtesting datetime 2023-05-26 11:00:00-04:00
2024-05-31 17:28:42,211: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,211: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,212: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,212: root: INFO: Current backtesting datetime 2023-05-26 11:30:00-04:00
2024-05-31 17:28:42,213: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,213: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,214: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,214: root: INFO: Current backtesting datetime 2023-05-26 12:00:00-04:00
2024-05-31 17:28:42,215: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,215: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,216: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,216: root: INFO: Current backtesting datetime 2023-05-26 12:30:00-04:00
2024-05-31 17:28:42,217: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,217: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,217: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,218: root: INFO: Current backtesting datetime 2023-05-26 13:00:00-04:00
2024-05-31 17:28:42,218: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,218: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,220: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,220: root: INFO: Current backtesting datetime 2023-05-26 13:30:00-04:00
2024-05-31 17:28:42,221: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,221: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,221: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,222: root: INFO: Current backtesting datetime 2023-05-26 14:00:00-04:00
2024-05-31 17:28:42,222: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,223: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,223: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,224: root: INFO: Current backtesting datetime 2023-05-26 14:30:00-04:00
2024-05-31 17:28:42,224: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,224: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,225: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,226: root: INFO: Current backtesting datetime 2023-05-26 15:00:00-04:00
2024-05-31 17:28:42,226: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,226: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,227: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,227: root: INFO: Current backtesting datetime 2023-05-26 15:30:00-04:00
2024-05-31 17:28:42,228: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,228: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,229: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,229: root: INFO: Current backtesting datetime 2023-05-26 16:00:00-04:00
2024-05-31 17:28:42,230: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:42,230: root: INFO: Current backtesting datetime 2023-05-26 15:59:00-04:00
2024-05-31 17:28:42,231: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:42,231: root: INFO: Current backtesting datetime 2023-05-26 16:00:00-04:00
2024-05-31 17:28:42,231: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:42,232: root: INFO: Current backtesting datetime 2023-05-30 08:30:00-04:00
2024-05-31 17:28:42,232: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:42,233: root: INFO: Current backtesting datetime 2023-05-30 09:30:00-04:00
2024-05-31 17:28:42,233: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:42,234: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,234: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,235: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,235: root: INFO: Current backtesting datetime 2023-05-30 10:00:00-04:00
2024-05-31 17:28:42,236: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,236: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,236: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,237: root: INFO: Current backtesting datetime 2023-05-30 10:30:00-04:00
2024-05-31 17:28:42,237: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,238: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,238: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,239: root: INFO: Current backtesting datetime 2023-05-30 11:00:00-04:00
2024-05-31 17:28:42,239: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,239: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,241: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,241: root: INFO: Current backtesting datetime 2023-05-30 11:30:00-04:00
2024-05-31 17:28:42,242: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,242: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,242: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,243: root: INFO: Current backtesting datetime 2023-05-30 12:00:00-04:00
2024-05-31 17:28:42,243: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,244: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,244: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,245: root: INFO: Current backtesting datetime 2023-05-30 12:30:00-04:00
2024-05-31 17:28:42,245: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,245: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,246: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,247: root: INFO: Current backtesting datetime 2023-05-30 13:00:00-04:00
2024-05-31 17:28:42,247: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,247: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,248: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,249: root: INFO: Current backtesting datetime 2023-05-30 13:30:00-04:00
2024-05-31 17:28:42,249: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,249: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,249: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,251: root: INFO: Current backtesting datetime 2023-05-30 14:00:00-04:00
2024-05-31 17:28:42,251: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,251: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,252: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,253: root: INFO: Current backtesting datetime 2023-05-30 14:30:00-04:00
2024-05-31 17:28:42,253: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,253: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,254: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,255: root: INFO: Current backtesting datetime 2023-05-30 15:00:00-04:00
2024-05-31 17:28:42,255: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,255: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,255: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,256: root: INFO: Current backtesting datetime 2023-05-30 15:30:00-04:00
2024-05-31 17:28:42,257: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,257: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,257: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,258: root: INFO: Current backtesting datetime 2023-05-30 16:00:00-04:00
2024-05-31 17:28:42,258: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:42,259: root: INFO: Current backtesting datetime 2023-05-30 15:59:00-04:00
2024-05-31 17:28:42,260: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:42,260: root: INFO: Current backtesting datetime 2023-05-30 16:00:00-04:00
2024-05-31 17:28:42,260: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:42,261: root: INFO: Current backtesting datetime 2023-05-31 08:30:00-04:00
2024-05-31 17:28:42,261: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:42,262: root: INFO: Current backtesting datetime 2023-05-31 09:30:00-04:00
2024-05-31 17:28:42,262: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:42,263: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,263: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,263: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,264: root: INFO: Current backtesting datetime 2023-05-31 10:00:00-04:00
2024-05-31 17:28:42,264: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,265: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,265: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,266: root: INFO: Current backtesting datetime 2023-05-31 10:30:00-04:00
2024-05-31 17:28:42,266: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,266: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,267: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,268: root: INFO: Current backtesting datetime 2023-05-31 11:00:00-04:00
2024-05-31 17:28:42,268: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,269: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,269: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,270: root: INFO: Current backtesting datetime 2023-05-31 11:30:00-04:00
2024-05-31 17:28:42,270: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,270: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,272: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,272: root: INFO: Current backtesting datetime 2023-05-31 12:00:00-04:00
2024-05-31 17:28:42,273: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,273: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,274: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,274: root: INFO: Current backtesting datetime 2023-05-31 12:30:00-04:00
2024-05-31 17:28:42,274: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,275: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,275: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,276: root: INFO: Current backtesting datetime 2023-05-31 13:00:00-04:00
2024-05-31 17:28:42,277: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,277: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,278: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,279: root: INFO: Current backtesting datetime 2023-05-31 13:30:00-04:00
2024-05-31 17:28:42,279: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,279: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,280: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,281: root: INFO: Current backtesting datetime 2023-05-31 14:00:00-04:00
2024-05-31 17:28:42,282: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,282: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,282: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,284: root: INFO: Current backtesting datetime 2023-05-31 14:30:00-04:00
2024-05-31 17:28:42,284: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,285: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,285: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,285: root: INFO: Current backtesting datetime 2023-05-31 15:00:00-04:00
2024-05-31 17:28:42,286: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,286: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,286: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,288: root: INFO: Current backtesting datetime 2023-05-31 15:30:00-04:00
2024-05-31 17:28:42,288: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,288: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,289: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,290: root: INFO: Current backtesting datetime 2023-05-31 16:00:00-04:00
2024-05-31 17:28:42,290: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:42,291: root: INFO: Current backtesting datetime 2023-05-31 15:59:00-04:00
2024-05-31 17:28:42,291: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:42,293: root: INFO: Current backtesting datetime 2023-05-31 16:00:00-04:00
2024-05-31 17:28:42,293: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:42,294: root: INFO: Current backtesting datetime 2023-06-01 08:30:00-04:00
2024-05-31 17:28:42,294: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:42,294: root: INFO: Current backtesting datetime 2023-06-01 09:30:00-04:00
2024-05-31 17:28:42,294: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:42,295: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,295: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,296: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,296: root: INFO: Current backtesting datetime 2023-06-01 10:00:00-04:00
2024-05-31 17:28:42,297: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,297: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,299: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,299: root: INFO: Current backtesting datetime 2023-06-01 10:30:00-04:00
2024-05-31 17:28:42,299: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,299: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,300: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,300: root: INFO: Current backtesting datetime 2023-06-01 11:00:00-04:00
2024-05-31 17:28:42,301: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,301: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,301: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,303: root: INFO: Current backtesting datetime 2023-06-01 11:30:00-04:00
2024-05-31 17:28:42,304: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,304: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,305: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,305: root: INFO: Current backtesting datetime 2023-06-01 12:00:00-04:00
2024-05-31 17:28:42,306: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,306: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,307: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,308: root: INFO: Current backtesting datetime 2023-06-01 12:30:00-04:00
2024-05-31 17:28:42,308: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,309: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,322: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,333: root: INFO: Current backtesting datetime 2023-06-01 13:00:00-04:00
2024-05-31 17:28:42,333: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,333: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,334: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,335: root: INFO: Current backtesting datetime 2023-06-01 13:30:00-04:00
2024-05-31 17:28:42,335: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,335: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,336: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,336: root: INFO: Current backtesting datetime 2023-06-01 14:00:00-04:00
2024-05-31 17:28:42,337: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,337: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,338: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,338: root: INFO: Current backtesting datetime 2023-06-01 14:30:00-04:00
2024-05-31 17:28:42,339: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,339: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,340: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,341: root: INFO: Current backtesting datetime 2023-06-01 15:00:00-04:00
2024-05-31 17:28:42,341: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,341: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,342: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,342: root: INFO: Current backtesting datetime 2023-06-01 15:30:00-04:00
2024-05-31 17:28:42,343: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,343: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,344: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,344: root: INFO: Current backtesting datetime 2023-06-01 16:00:00-04:00
2024-05-31 17:28:42,345: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:42,345: root: INFO: Current backtesting datetime 2023-06-01 15:59:00-04:00
2024-05-31 17:28:42,346: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:42,346: root: INFO: Current backtesting datetime 2023-06-01 16:00:00-04:00
2024-05-31 17:28:42,346: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:42,347: root: INFO: Current backtesting datetime 2023-06-02 08:30:00-04:00
2024-05-31 17:28:42,347: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:42,348: root: INFO: Current backtesting datetime 2023-06-02 09:30:00-04:00
2024-05-31 17:28:42,348: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:42,349: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,349: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,349: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,350: root: INFO: Current backtesting datetime 2023-06-02 10:00:00-04:00
2024-05-31 17:28:42,350: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,351: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,351: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,353: root: INFO: Current backtesting datetime 2023-06-02 10:30:00-04:00
2024-05-31 17:28:42,353: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,353: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,354: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,354: root: INFO: Current backtesting datetime 2023-06-02 11:00:00-04:00
2024-05-31 17:28:42,354: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,354: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,354: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,355: root: INFO: Current backtesting datetime 2023-06-02 11:30:00-04:00
2024-05-31 17:28:42,355: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,356: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,357: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,357: root: INFO: Current backtesting datetime 2023-06-02 12:00:00-04:00
2024-05-31 17:28:42,358: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,358: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,358: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,360: root: INFO: Current backtesting datetime 2023-06-02 12:30:00-04:00
2024-05-31 17:28:42,360: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,360: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,361: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,362: root: INFO: Current backtesting datetime 2023-06-02 13:00:00-04:00
2024-05-31 17:28:42,362: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,362: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,363: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,363: root: INFO: Current backtesting datetime 2023-06-02 13:30:00-04:00
2024-05-31 17:28:42,364: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,364: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,364: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,365: root: INFO: Current backtesting datetime 2023-06-02 14:00:00-04:00
2024-05-31 17:28:42,366: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,366: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,367: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,367: root: INFO: Current backtesting datetime 2023-06-02 14:30:00-04:00
2024-05-31 17:28:42,367: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,368: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,368: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,369: root: INFO: Current backtesting datetime 2023-06-02 15:00:00-04:00
2024-05-31 17:28:42,369: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,370: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,370: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,371: root: INFO: Current backtesting datetime 2023-06-02 15:30:00-04:00
2024-05-31 17:28:42,371: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,371: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,372: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,373: root: INFO: Current backtesting datetime 2023-06-02 16:00:00-04:00
2024-05-31 17:28:42,373: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:42,374: root: INFO: Current backtesting datetime 2023-06-02 15:59:00-04:00
2024-05-31 17:28:42,374: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:42,375: root: INFO: Current backtesting datetime 2023-06-02 16:00:00-04:00
2024-05-31 17:28:42,375: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:42,375: root: INFO: Current backtesting datetime 2023-06-05 08:30:00-04:00
2024-05-31 17:28:42,376: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:42,377: root: INFO: Current backtesting datetime 2023-06-05 09:30:00-04:00
2024-05-31 17:28:42,377: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:42,378: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,378: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,379: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,379: root: INFO: Current backtesting datetime 2023-06-05 10:00:00-04:00
2024-05-31 17:28:42,379: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,380: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,380: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,381: root: INFO: Current backtesting datetime 2023-06-05 10:30:00-04:00
2024-05-31 17:28:42,381: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,382: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,382: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,383: root: INFO: Current backtesting datetime 2023-06-05 11:00:00-04:00
2024-05-31 17:28:42,383: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,384: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,384: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,385: root: INFO: Current backtesting datetime 2023-06-05 11:30:00-04:00
2024-05-31 17:28:42,385: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,386: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,387: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,387: root: INFO: Current backtesting datetime 2023-06-05 12:00:00-04:00
2024-05-31 17:28:42,388: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,388: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,388: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,389: root: INFO: Current backtesting datetime 2023-06-05 12:30:00-04:00
2024-05-31 17:28:42,389: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,390: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,390: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,391: root: INFO: Current backtesting datetime 2023-06-05 13:00:00-04:00
2024-05-31 17:28:42,391: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,391: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,392: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,393: root: INFO: Current backtesting datetime 2023-06-05 13:30:00-04:00
2024-05-31 17:28:42,393: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,393: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,394: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,395: root: INFO: Current backtesting datetime 2023-06-05 14:00:00-04:00
2024-05-31 17:28:42,395: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,395: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,395: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,396: root: INFO: Current backtesting datetime 2023-06-05 14:30:00-04:00
2024-05-31 17:28:42,397: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,397: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,398: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,399: root: INFO: Current backtesting datetime 2023-06-05 15:00:00-04:00
2024-05-31 17:28:42,399: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,399: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,401: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,401: root: INFO: Current backtesting datetime 2023-06-05 15:30:00-04:00
2024-05-31 17:28:42,402: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,402: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,403: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,404: root: INFO: Current backtesting datetime 2023-06-05 16:00:00-04:00
2024-05-31 17:28:42,404: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:42,405: root: INFO: Current backtesting datetime 2023-06-05 15:59:00-04:00
2024-05-31 17:28:42,405: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:42,406: root: INFO: Current backtesting datetime 2023-06-05 16:00:00-04:00
2024-05-31 17:28:42,406: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:42,406: root: INFO: Current backtesting datetime 2023-06-06 08:30:00-04:00
2024-05-31 17:28:42,407: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:42,407: root: INFO: Current backtesting datetime 2023-06-06 09:30:00-04:00
2024-05-31 17:28:42,407: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:42,408: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,408: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,409: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,410: root: INFO: Current backtesting datetime 2023-06-06 10:00:00-04:00
2024-05-31 17:28:42,410: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,410: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,411: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,411: root: INFO: Current backtesting datetime 2023-06-06 10:30:00-04:00
2024-05-31 17:28:42,413: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,413: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,414: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,415: root: INFO: Current backtesting datetime 2023-06-06 11:00:00-04:00
2024-05-31 17:28:42,415: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,415: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,416: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,416: root: INFO: Current backtesting datetime 2023-06-06 11:30:00-04:00
2024-05-31 17:28:42,417: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,417: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,417: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,418: root: INFO: Current backtesting datetime 2023-06-06 12:00:00-04:00
2024-05-31 17:28:42,418: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,418: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,419: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,420: root: INFO: Current backtesting datetime 2023-06-06 12:30:00-04:00
2024-05-31 17:28:42,420: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,420: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,420: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,422: root: INFO: Current backtesting datetime 2023-06-06 13:00:00-04:00
2024-05-31 17:28:42,422: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,423: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,423: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,424: root: INFO: Current backtesting datetime 2023-06-06 13:30:00-04:00
2024-05-31 17:28:42,424: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,424: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,425: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,425: root: INFO: Current backtesting datetime 2023-06-06 14:00:00-04:00
2024-05-31 17:28:42,426: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,426: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,427: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,427: root: INFO: Current backtesting datetime 2023-06-06 14:30:00-04:00
2024-05-31 17:28:42,428: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,428: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,429: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,429: root: INFO: Current backtesting datetime 2023-06-06 15:00:00-04:00
2024-05-31 17:28:42,430: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,430: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,431: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,431: root: INFO: Current backtesting datetime 2023-06-06 15:30:00-04:00
2024-05-31 17:28:42,432: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,433: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,433: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,434: root: INFO: Current backtesting datetime 2023-06-06 16:00:00-04:00
2024-05-31 17:28:42,435: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:42,436: root: INFO: Current backtesting datetime 2023-06-06 15:59:00-04:00
2024-05-31 17:28:42,436: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:42,437: root: INFO: Current backtesting datetime 2023-06-06 16:00:00-04:00
2024-05-31 17:28:42,437: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:42,438: root: INFO: Current backtesting datetime 2023-06-07 08:30:00-04:00
2024-05-31 17:28:42,438: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:42,439: root: INFO: Current backtesting datetime 2023-06-07 09:30:00-04:00
2024-05-31 17:28:42,439: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:42,440: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,440: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,440: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,441: root: INFO: Current backtesting datetime 2023-06-07 10:00:00-04:00
2024-05-31 17:28:42,441: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,441: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,442: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,443: root: INFO: Current backtesting datetime 2023-06-07 10:30:00-04:00
2024-05-31 17:28:42,443: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,443: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,444: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,444: root: INFO: Current backtesting datetime 2023-06-07 11:00:00-04:00
2024-05-31 17:28:42,445: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,445: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,446: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,446: root: INFO: Current backtesting datetime 2023-06-07 11:30:00-04:00
2024-05-31 17:28:42,447: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,447: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,449: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,449: root: INFO: Current backtesting datetime 2023-06-07 12:00:00-04:00
2024-05-31 17:28:42,450: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,450: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,451: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,453: root: INFO: Current backtesting datetime 2023-06-07 12:30:00-04:00
2024-05-31 17:28:42,448: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:28:42,453: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,454: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,454: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,455: root: INFO: Current backtesting datetime 2023-06-07 13:00:00-04:00
2024-05-31 17:28:42,455: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,455: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,456: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,456: root: INFO: Current backtesting datetime 2023-06-07 13:30:00-04:00
2024-05-31 17:28:42,457: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,457: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,458: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,458: root: INFO: Current backtesting datetime 2023-06-07 14:00:00-04:00
2024-05-31 17:28:42,459: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,459: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,460: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,460: root: INFO: Current backtesting datetime 2023-06-07 14:30:00-04:00
2024-05-31 17:28:42,461: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,461: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,461: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,463: root: INFO: Current backtesting datetime 2023-06-07 15:00:00-04:00
2024-05-31 17:28:42,463: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,463: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,464: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,464: root: INFO: Current backtesting datetime 2023-06-07 15:30:00-04:00
2024-05-31 17:28:42,465: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,465: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,465: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,466: root: INFO: Current backtesting datetime 2023-06-07 16:00:00-04:00
2024-05-31 17:28:42,466: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:42,467: root: INFO: Current backtesting datetime 2023-06-07 15:59:00-04:00
2024-05-31 17:28:42,468: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:42,468: root: INFO: Current backtesting datetime 2023-06-07 16:00:00-04:00
2024-05-31 17:28:42,468: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:42,469: root: INFO: Current backtesting datetime 2023-06-08 08:30:00-04:00
2024-05-31 17:28:42,469: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:42,470: root: INFO: Current backtesting datetime 2023-06-08 09:30:00-04:00
2024-05-31 17:28:42,470: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:42,471: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,471: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,471: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,473: root: INFO: Current backtesting datetime 2023-06-08 10:00:00-04:00
2024-05-31 17:28:42,473: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,473: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,474: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:28:42,474: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,475: root: INFO: Current backtesting datetime 2023-06-08 10:30:00-04:00
2024-05-31 17:28:42,475: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,475: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,476: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,477: root: INFO: Current backtesting datetime 2023-06-08 11:00:00-04:00
2024-05-31 17:28:42,477: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,477: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,478: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,478: root: INFO: Current backtesting datetime 2023-06-08 11:30:00-04:00
2024-05-31 17:28:42,479: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,479: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,480: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,480: root: INFO: Current backtesting datetime 2023-06-08 12:00:00-04:00
2024-05-31 17:28:42,481: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,481: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,482: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,482: root: INFO: Current backtesting datetime 2023-06-08 12:30:00-04:00
2024-05-31 17:28:42,483: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,483: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,484: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,485: root: INFO: Current backtesting datetime 2023-06-08 13:00:00-04:00
2024-05-31 17:28:42,485: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,485: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,485: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,486: root: INFO: Current backtesting datetime 2023-06-08 13:30:00-04:00
2024-05-31 17:28:42,486: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,486: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,487: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,488: root: INFO: Current backtesting datetime 2023-06-08 14:00:00-04:00
2024-05-31 17:28:42,488: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,488: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,489: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,490: root: INFO: Current backtesting datetime 2023-06-08 14:30:00-04:00
2024-05-31 17:28:42,490: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,490: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,491: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,492: root: INFO: Current backtesting datetime 2023-06-08 15:00:00-04:00
2024-05-31 17:28:42,492: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,492: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,493: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,493: root: INFO: Current backtesting datetime 2023-06-08 15:30:00-04:00
2024-05-31 17:28:42,495: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,495: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,495: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,496: root: INFO: Current backtesting datetime 2023-06-08 16:00:00-04:00
2024-05-31 17:28:42,497: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:42,498: root: INFO: Current backtesting datetime 2023-06-08 15:59:00-04:00
2024-05-31 17:28:42,498: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:42,499: root: INFO: Current backtesting datetime 2023-06-08 16:00:00-04:00
2024-05-31 17:28:42,499: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:42,499: root: INFO: Current backtesting datetime 2023-06-09 08:30:00-04:00
2024-05-31 17:28:42,500: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:42,500: root: INFO: Current backtesting datetime 2023-06-09 09:30:00-04:00
2024-05-31 17:28:42,500: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:42,501: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,501: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,502: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,502: root: INFO: Current backtesting datetime 2023-06-09 10:00:00-04:00
2024-05-31 17:28:42,502: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,504: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,504: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,505: root: INFO: Current backtesting datetime 2023-06-09 10:30:00-04:00
2024-05-31 17:28:42,505: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,505: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,506: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,506: root: INFO: Current backtesting datetime 2023-06-09 11:00:00-04:00
2024-05-31 17:28:42,507: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,507: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,508: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,508: root: INFO: Current backtesting datetime 2023-06-09 11:30:00-04:00
2024-05-31 17:28:42,509: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,509: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,509: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,510: root: INFO: Current backtesting datetime 2023-06-09 12:00:00-04:00
2024-05-31 17:28:42,510: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,511: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,511: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,512: root: INFO: Current backtesting datetime 2023-06-09 12:30:00-04:00
2024-05-31 17:28:42,512: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,512: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,512: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,514: root: INFO: Current backtesting datetime 2023-06-09 13:00:00-04:00
2024-05-31 17:28:42,515: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,515: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,515: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,516: root: INFO: Current backtesting datetime 2023-06-09 13:30:00-04:00
2024-05-31 17:28:42,516: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,516: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,517: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,518: root: INFO: Current backtesting datetime 2023-06-09 14:00:00-04:00
2024-05-31 17:28:42,518: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,519: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,519: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,520: root: INFO: Current backtesting datetime 2023-06-09 14:30:00-04:00
2024-05-31 17:28:42,520: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,520: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,521: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,522: root: INFO: Current backtesting datetime 2023-06-09 15:00:00-04:00
2024-05-31 17:28:42,522: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,522: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,523: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,523: root: INFO: Current backtesting datetime 2023-06-09 15:30:00-04:00
2024-05-31 17:28:42,524: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,524: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,525: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,525: root: INFO: Current backtesting datetime 2023-06-09 16:00:00-04:00
2024-05-31 17:28:42,526: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:42,527: root: INFO: Current backtesting datetime 2023-06-09 15:59:00-04:00
2024-05-31 17:28:42,528: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:42,528: root: INFO: Current backtesting datetime 2023-06-09 16:00:00-04:00
2024-05-31 17:28:42,528: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:42,529: root: INFO: Current backtesting datetime 2023-06-12 08:30:00-04:00
2024-05-31 17:28:42,529: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:42,530: root: INFO: Current backtesting datetime 2023-06-12 09:30:00-04:00
2024-05-31 17:28:42,530: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:42,531: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,531: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,531: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,532: root: INFO: Current backtesting datetime 2023-06-12 10:00:00-04:00
2024-05-31 17:28:42,533: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,533: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,533: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,533: root: INFO: Current backtesting datetime 2023-06-12 10:30:00-04:00
2024-05-31 17:28:42,534: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,534: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,535: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,535: root: INFO: Current backtesting datetime 2023-06-12 11:00:00-04:00
2024-05-31 17:28:42,536: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,537: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,537: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,538: root: INFO: Current backtesting datetime 2023-06-12 11:30:00-04:00
2024-05-31 17:28:42,539: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,539: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,540: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,541: root: INFO: Current backtesting datetime 2023-06-12 12:00:00-04:00
2024-05-31 17:28:42,541: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,541: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,542: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,543: root: INFO: Current backtesting datetime 2023-06-12 12:30:00-04:00
2024-05-31 17:28:42,543: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,543: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,544: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,544: root: INFO: Current backtesting datetime 2023-06-12 13:00:00-04:00
2024-05-31 17:28:42,545: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,545: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,545: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,546: root: INFO: Current backtesting datetime 2023-06-12 13:30:00-04:00
2024-05-31 17:28:42,546: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,546: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,547: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,548: root: INFO: Current backtesting datetime 2023-06-12 14:00:00-04:00
2024-05-31 17:28:42,548: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,548: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,549: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,549: root: INFO: Current backtesting datetime 2023-06-12 14:30:00-04:00
2024-05-31 17:28:42,550: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,550: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,551: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,551: root: INFO: Current backtesting datetime 2023-06-12 15:00:00-04:00
2024-05-31 17:28:42,552: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,552: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,553: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,553: root: INFO: Current backtesting datetime 2023-06-12 15:30:00-04:00
2024-05-31 17:28:42,553: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,555: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,555: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,556: root: INFO: Current backtesting datetime 2023-06-12 16:00:00-04:00
2024-05-31 17:28:42,556: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:42,558: root: INFO: Current backtesting datetime 2023-06-12 15:59:00-04:00
2024-05-31 17:28:42,558: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:42,559: root: INFO: Current backtesting datetime 2023-06-12 16:00:00-04:00
2024-05-31 17:28:42,559: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:42,560: root: INFO: Current backtesting datetime 2023-06-13 08:30:00-04:00
2024-05-31 17:28:42,560: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:42,561: root: INFO: Current backtesting datetime 2023-06-13 09:30:00-04:00
2024-05-31 17:28:42,561: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:42,562: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,562: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,562: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,563: root: INFO: Current backtesting datetime 2023-06-13 10:00:00-04:00
2024-05-31 17:28:42,564: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,564: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,565: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,565: root: INFO: Current backtesting datetime 2023-06-13 10:30:00-04:00
2024-05-31 17:28:42,567: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,567: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,568: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,568: root: INFO: Current backtesting datetime 2023-06-13 11:00:00-04:00
2024-05-31 17:28:42,569: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,569: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,570: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,570: root: INFO: Current backtesting datetime 2023-06-13 11:30:00-04:00
2024-05-31 17:28:42,571: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,571: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,572: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,573: root: INFO: Current backtesting datetime 2023-06-13 12:00:00-04:00
2024-05-31 17:28:42,573: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,573: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,574: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,575: root: INFO: Current backtesting datetime 2023-06-13 12:30:00-04:00
2024-05-31 17:28:42,575: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,575: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,576: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,577: root: INFO: Current backtesting datetime 2023-06-13 13:00:00-04:00
2024-05-31 17:28:42,577: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,577: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,578: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,579: root: INFO: Current backtesting datetime 2023-06-13 13:30:00-04:00
2024-05-31 17:28:42,579: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,579: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,580: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,581: root: INFO: Current backtesting datetime 2023-06-13 14:00:00-04:00
2024-05-31 17:28:42,581: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,581: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,582: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,583: root: INFO: Current backtesting datetime 2023-06-13 14:30:00-04:00
2024-05-31 17:28:42,583: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,583: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,584: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,584: root: INFO: Current backtesting datetime 2023-06-13 15:00:00-04:00
2024-05-31 17:28:42,585: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,585: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,585: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,586: root: INFO: Current backtesting datetime 2023-06-13 15:30:00-04:00
2024-05-31 17:28:42,586: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,587: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,588: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,607: root: INFO: Current backtesting datetime 2023-06-13 16:00:00-04:00
2024-05-31 17:28:42,608: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:42,609: root: INFO: Current backtesting datetime 2023-06-13 15:59:00-04:00
2024-05-31 17:28:42,609: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:42,610: root: INFO: Current backtesting datetime 2023-06-13 16:00:00-04:00
2024-05-31 17:28:42,610: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:42,611: root: INFO: Current backtesting datetime 2023-06-14 08:30:00-04:00
2024-05-31 17:28:42,611: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:42,612: root: INFO: Current backtesting datetime 2023-06-14 09:30:00-04:00
2024-05-31 17:28:42,612: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:42,613: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,613: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,613: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,614: root: INFO: Current backtesting datetime 2023-06-14 10:00:00-04:00
2024-05-31 17:28:42,615: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,615: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,615: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,617: root: INFO: Current backtesting datetime 2023-06-14 10:30:00-04:00
2024-05-31 17:28:42,617: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,617: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,617: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,618: root: INFO: Current backtesting datetime 2023-06-14 11:00:00-04:00
2024-05-31 17:28:42,618: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,619: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,619: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,620: root: INFO: Current backtesting datetime 2023-06-14 11:30:00-04:00
2024-05-31 17:28:42,620: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,620: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,621: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,622: root: INFO: Current backtesting datetime 2023-06-14 12:00:00-04:00
2024-05-31 17:28:42,622: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,622: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,623: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,624: root: INFO: Current backtesting datetime 2023-06-14 12:30:00-04:00
2024-05-31 17:28:42,624: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,624: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,625: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,625: root: INFO: Current backtesting datetime 2023-06-14 13:00:00-04:00
2024-05-31 17:28:42,626: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,626: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,626: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,628: root: INFO: Current backtesting datetime 2023-06-14 13:30:00-04:00
2024-05-31 17:28:42,628: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,629: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,629: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,630: root: INFO: Current backtesting datetime 2023-06-14 14:00:00-04:00
2024-05-31 17:28:42,630: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,630: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,631: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,632: root: INFO: Current backtesting datetime 2023-06-14 14:30:00-04:00
2024-05-31 17:28:42,632: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,632: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,633: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,634: root: INFO: Current backtesting datetime 2023-06-14 15:00:00-04:00
2024-05-31 17:28:42,635: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,635: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,635: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,635: root: INFO: Current backtesting datetime 2023-06-14 15:30:00-04:00
2024-05-31 17:28:42,636: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,636: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,637: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,637: root: INFO: Current backtesting datetime 2023-06-14 16:00:00-04:00
2024-05-31 17:28:42,638: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:42,639: root: INFO: Current backtesting datetime 2023-06-14 15:59:00-04:00
2024-05-31 17:28:42,639: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:42,639: root: INFO: Current backtesting datetime 2023-06-14 16:00:00-04:00
2024-05-31 17:28:42,639: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:42,640: root: INFO: Current backtesting datetime 2023-06-15 08:30:00-04:00
2024-05-31 17:28:42,640: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:42,641: root: INFO: Current backtesting datetime 2023-06-15 09:30:00-04:00
2024-05-31 17:28:42,641: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:42,642: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,642: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,643: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,644: root: INFO: Current backtesting datetime 2023-06-15 10:00:00-04:00
2024-05-31 17:28:42,644: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,644: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,645: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,645: root: INFO: Current backtesting datetime 2023-06-15 10:30:00-04:00
2024-05-31 17:28:42,647: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,647: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,647: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,648: root: INFO: Current backtesting datetime 2023-06-15 11:00:00-04:00
2024-05-31 17:28:42,648: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,649: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,649: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,650: root: INFO: Current backtesting datetime 2023-06-15 11:30:00-04:00
2024-05-31 17:28:42,651: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,651: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,651: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,652: root: INFO: Current backtesting datetime 2023-06-15 12:00:00-04:00
2024-05-31 17:28:42,652: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,653: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,653: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,654: root: INFO: Current backtesting datetime 2023-06-15 12:30:00-04:00
2024-05-31 17:28:42,654: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,655: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,655: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,656: root: INFO: Current backtesting datetime 2023-06-15 13:00:00-04:00
2024-05-31 17:28:42,656: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,658: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,658: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,659: root: INFO: Current backtesting datetime 2023-06-15 13:30:00-04:00
2024-05-31 17:28:42,659: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,659: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,660: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,660: root: INFO: Current backtesting datetime 2023-06-15 14:00:00-04:00
2024-05-31 17:28:42,661: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,661: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,662: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,662: root: INFO: Current backtesting datetime 2023-06-15 14:30:00-04:00
2024-05-31 17:28:42,663: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,663: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,664: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,664: root: INFO: Current backtesting datetime 2023-06-15 15:00:00-04:00
2024-05-31 17:28:42,665: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,665: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,665: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,666: root: INFO: Current backtesting datetime 2023-06-15 15:30:00-04:00
2024-05-31 17:28:42,666: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,666: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,667: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,667: root: INFO: Current backtesting datetime 2023-06-15 16:00:00-04:00
2024-05-31 17:28:42,669: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:42,670: root: INFO: Current backtesting datetime 2023-06-15 15:59:00-04:00
2024-05-31 17:28:42,670: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:42,671: root: INFO: Current backtesting datetime 2023-06-15 16:00:00-04:00
2024-05-31 17:28:42,671: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:42,671: root: INFO: Current backtesting datetime 2023-06-16 08:30:00-04:00
2024-05-31 17:28:42,672: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:42,672: root: INFO: Current backtesting datetime 2023-06-16 09:30:00-04:00
2024-05-31 17:28:42,672: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:42,673: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,673: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,674: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,674: root: INFO: Current backtesting datetime 2023-06-16 10:00:00-04:00
2024-05-31 17:28:42,675: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,675: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,675: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,676: root: INFO: Current backtesting datetime 2023-06-16 10:30:00-04:00
2024-05-31 17:28:42,676: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,677: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,678: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,678: root: INFO: Current backtesting datetime 2023-06-16 11:00:00-04:00
2024-05-31 17:28:42,679: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,679: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,680: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,681: root: INFO: Current backtesting datetime 2023-06-16 11:30:00-04:00
2024-05-31 17:28:42,681: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,681: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,682: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,683: root: INFO: Current backtesting datetime 2023-06-16 12:00:00-04:00
2024-05-31 17:28:42,683: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,684: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,684: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,685: root: INFO: Current backtesting datetime 2023-06-16 12:30:00-04:00
2024-05-31 17:28:42,685: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,685: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,686: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,686: root: INFO: Current backtesting datetime 2023-06-16 13:00:00-04:00
2024-05-31 17:28:42,687: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,687: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,688: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,688: root: INFO: Current backtesting datetime 2023-06-16 13:30:00-04:00
2024-05-31 17:28:42,690: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,690: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,690: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,691: root: INFO: Current backtesting datetime 2023-06-16 14:00:00-04:00
2024-05-31 17:28:42,692: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,692: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,693: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,694: root: INFO: Current backtesting datetime 2023-06-16 14:30:00-04:00
2024-05-31 17:28:42,694: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,694: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,695: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,695: root: INFO: Current backtesting datetime 2023-06-16 15:00:00-04:00
2024-05-31 17:28:42,696: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,696: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,697: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,697: root: INFO: Current backtesting datetime 2023-06-16 15:30:00-04:00
2024-05-31 17:28:42,698: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,698: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,699: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,699: root: INFO: Current backtesting datetime 2023-06-16 16:00:00-04:00
2024-05-31 17:28:42,700: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:42,701: root: INFO: Current backtesting datetime 2023-06-16 15:59:00-04:00
2024-05-31 17:28:42,702: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:42,702: root: INFO: Current backtesting datetime 2023-06-16 16:00:00-04:00
2024-05-31 17:28:42,702: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:42,703: root: INFO: Current backtesting datetime 2023-06-20 08:30:00-04:00
2024-05-31 17:28:42,703: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:42,704: root: INFO: Current backtesting datetime 2023-06-20 09:30:00-04:00
2024-05-31 17:28:42,704: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:42,705: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,705: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,705: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,706: root: INFO: Current backtesting datetime 2023-06-20 10:00:00-04:00
2024-05-31 17:28:42,706: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,706: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,707: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,708: root: INFO: Current backtesting datetime 2023-06-20 10:30:00-04:00
2024-05-31 17:28:42,708: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,708: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,709: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,710: root: INFO: Current backtesting datetime 2023-06-20 11:00:00-04:00
2024-05-31 17:28:42,710: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,711: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,711: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,712: root: INFO: Current backtesting datetime 2023-06-20 11:30:00-04:00
2024-05-31 17:28:42,712: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,713: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,713: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,714: root: INFO: Current backtesting datetime 2023-06-20 12:00:00-04:00
2024-05-31 17:28:42,714: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,715: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,715: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,715: root: INFO: Current backtesting datetime 2023-06-20 12:30:00-04:00
2024-05-31 17:28:42,716: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,716: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,717: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,717: root: INFO: Current backtesting datetime 2023-06-20 13:00:00-04:00
2024-05-31 17:28:42,718: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,718: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,719: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,719: root: INFO: Current backtesting datetime 2023-06-20 13:30:00-04:00
2024-05-31 17:28:42,720: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,720: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,721: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,722: root: INFO: Current backtesting datetime 2023-06-20 14:00:00-04:00
2024-05-31 17:28:42,722: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,722: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,723: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,724: root: INFO: Current backtesting datetime 2023-06-20 14:30:00-04:00
2024-05-31 17:28:42,724: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,725: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,726: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,727: root: INFO: Current backtesting datetime 2023-06-20 15:00:00-04:00
2024-05-31 17:28:42,723: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:28:42,727: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,727: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,728: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,728: root: INFO: Current backtesting datetime 2023-06-20 15:30:00-04:00
2024-05-31 17:28:42,729: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,729: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,729: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,731: root: INFO: Current backtesting datetime 2023-06-20 16:00:00-04:00
2024-05-31 17:28:42,731: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:42,732: root: INFO: Current backtesting datetime 2023-06-20 15:59:00-04:00
2024-05-31 17:28:42,733: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:42,733: root: INFO: Current backtesting datetime 2023-06-20 16:00:00-04:00
2024-05-31 17:28:42,733: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:42,734: root: INFO: Current backtesting datetime 2023-06-21 08:30:00-04:00
2024-05-31 17:28:42,734: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:42,735: root: INFO: Current backtesting datetime 2023-06-21 09:30:00-04:00
2024-05-31 17:28:42,735: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:42,735: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,735: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,736: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,737: root: INFO: Current backtesting datetime 2023-06-21 10:00:00-04:00
2024-05-31 17:28:42,737: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,737: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,738: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,739: root: INFO: Current backtesting datetime 2023-06-21 10:30:00-04:00
2024-05-31 17:28:42,739: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:28:42,741: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,741: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,742: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,742: root: INFO: Current backtesting datetime 2023-06-21 11:00:00-04:00
2024-05-31 17:28:42,743: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,743: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,744: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,744: root: INFO: Current backtesting datetime 2023-06-21 11:30:00-04:00
2024-05-31 17:28:42,745: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,745: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,746: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,747: root: INFO: Current backtesting datetime 2023-06-21 12:00:00-04:00
2024-05-31 17:28:42,747: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,747: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,748: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,749: root: INFO: Current backtesting datetime 2023-06-21 12:30:00-04:00
2024-05-31 17:28:42,749: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,749: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,750: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,750: root: INFO: Current backtesting datetime 2023-06-21 13:00:00-04:00
2024-05-31 17:28:42,750: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,750: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,751: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,752: root: INFO: Current backtesting datetime 2023-06-21 13:30:00-04:00
2024-05-31 17:28:42,753: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,753: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,753: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,754: root: INFO: Current backtesting datetime 2023-06-21 14:00:00-04:00
2024-05-31 17:28:42,754: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,755: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,755: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,755: root: INFO: Current backtesting datetime 2023-06-21 14:30:00-04:00
2024-05-31 17:28:42,756: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,756: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,757: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,757: root: INFO: Current backtesting datetime 2023-06-21 15:00:00-04:00
2024-05-31 17:28:42,758: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,758: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,758: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,759: root: INFO: Current backtesting datetime 2023-06-21 15:30:00-04:00
2024-05-31 17:28:42,759: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,760: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,760: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,760: root: INFO: Current backtesting datetime 2023-06-21 16:00:00-04:00
2024-05-31 17:28:42,762: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:42,762: root: INFO: Current backtesting datetime 2023-06-21 15:59:00-04:00
2024-05-31 17:28:42,762: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:42,763: root: INFO: Current backtesting datetime 2023-06-21 16:00:00-04:00
2024-05-31 17:28:42,763: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:42,763: root: INFO: Current backtesting datetime 2023-06-22 08:30:00-04:00
2024-05-31 17:28:42,764: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:42,764: root: INFO: Current backtesting datetime 2023-06-22 09:30:00-04:00
2024-05-31 17:28:42,764: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:42,765: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,765: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,766: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,766: root: INFO: Current backtesting datetime 2023-06-22 10:00:00-04:00
2024-05-31 17:28:42,768: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,768: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,768: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,769: root: INFO: Current backtesting datetime 2023-06-22 10:30:00-04:00
2024-05-31 17:28:42,769: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,770: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,770: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,771: root: INFO: Current backtesting datetime 2023-06-22 11:00:00-04:00
2024-05-31 17:28:42,771: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,771: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,772: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,773: root: INFO: Current backtesting datetime 2023-06-22 11:30:00-04:00
2024-05-31 17:28:42,773: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,773: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,774: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,774: root: INFO: Current backtesting datetime 2023-06-22 12:00:00-04:00
2024-05-31 17:28:42,775: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,775: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,775: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,776: root: INFO: Current backtesting datetime 2023-06-22 12:30:00-04:00
2024-05-31 17:28:42,776: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,776: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,777: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,777: root: INFO: Current backtesting datetime 2023-06-22 13:00:00-04:00
2024-05-31 17:28:42,778: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,778: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,779: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,779: root: INFO: Current backtesting datetime 2023-06-22 13:30:00-04:00
2024-05-31 17:28:42,780: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,780: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,781: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,781: root: INFO: Current backtesting datetime 2023-06-22 14:00:00-04:00
2024-05-31 17:28:42,782: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,783: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,783: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,784: root: INFO: Current backtesting datetime 2023-06-22 14:30:00-04:00
2024-05-31 17:28:42,784: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,784: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,785: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,785: root: INFO: Current backtesting datetime 2023-06-22 15:00:00-04:00
2024-05-31 17:28:42,786: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,786: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,787: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,787: root: INFO: Current backtesting datetime 2023-06-22 15:30:00-04:00
2024-05-31 17:28:42,788: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,788: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,789: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,789: root: INFO: Current backtesting datetime 2023-06-22 16:00:00-04:00
2024-05-31 17:28:42,790: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:42,790: root: INFO: Current backtesting datetime 2023-06-22 15:59:00-04:00
2024-05-31 17:28:42,791: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:42,791: root: INFO: Current backtesting datetime 2023-06-22 16:00:00-04:00
2024-05-31 17:28:42,791: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:42,792: root: INFO: Current backtesting datetime 2023-06-23 08:30:00-04:00
2024-05-31 17:28:42,793: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:42,793: root: INFO: Current backtesting datetime 2023-06-23 09:30:00-04:00
2024-05-31 17:28:42,793: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:42,794: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,794: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,795: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,795: root: INFO: Current backtesting datetime 2023-06-23 10:00:00-04:00
2024-05-31 17:28:42,796: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,796: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,797: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,797: root: INFO: Current backtesting datetime 2023-06-23 10:30:00-04:00
2024-05-31 17:28:42,797: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,798: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,798: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,799: root: INFO: Current backtesting datetime 2023-06-23 11:00:00-04:00
2024-05-31 17:28:42,799: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,800: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,800: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,801: root: INFO: Current backtesting datetime 2023-06-23 11:30:00-04:00
2024-05-31 17:28:42,801: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,801: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,803: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,803: root: INFO: Current backtesting datetime 2023-06-23 12:00:00-04:00
2024-05-31 17:28:42,804: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,804: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,804: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,805: root: INFO: Current backtesting datetime 2023-06-23 12:30:00-04:00
2024-05-31 17:28:42,805: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,806: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,806: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,807: root: INFO: Current backtesting datetime 2023-06-23 13:00:00-04:00
2024-05-31 17:28:42,808: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,808: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,808: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,809: root: INFO: Current backtesting datetime 2023-06-23 13:30:00-04:00
2024-05-31 17:28:42,810: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,810: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,810: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,811: root: INFO: Current backtesting datetime 2023-06-23 14:00:00-04:00
2024-05-31 17:28:42,812: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,812: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,812: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,813: root: INFO: Current backtesting datetime 2023-06-23 14:30:00-04:00
2024-05-31 17:28:42,813: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,813: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,815: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,815: root: INFO: Current backtesting datetime 2023-06-23 15:00:00-04:00
2024-05-31 17:28:42,815: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,816: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,816: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,817: root: INFO: Current backtesting datetime 2023-06-23 15:30:00-04:00
2024-05-31 17:28:42,817: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,817: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,818: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,819: root: INFO: Current backtesting datetime 2023-06-23 16:00:00-04:00
2024-05-31 17:28:42,819: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:42,821: root: INFO: Current backtesting datetime 2023-06-23 15:59:00-04:00
2024-05-31 17:28:42,821: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:42,822: root: INFO: Current backtesting datetime 2023-06-23 16:00:00-04:00
2024-05-31 17:28:42,822: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:42,822: root: INFO: Current backtesting datetime 2023-06-26 08:30:00-04:00
2024-05-31 17:28:42,822: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:42,824: root: INFO: Current backtesting datetime 2023-06-26 09:30:00-04:00
2024-05-31 17:28:42,824: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:42,825: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,825: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,825: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,826: root: INFO: Current backtesting datetime 2023-06-26 10:00:00-04:00
2024-05-31 17:28:42,826: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,827: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,827: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,827: root: INFO: Current backtesting datetime 2023-06-26 10:30:00-04:00
2024-05-31 17:28:42,829: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,829: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,830: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,830: root: INFO: Current backtesting datetime 2023-06-26 11:00:00-04:00
2024-05-31 17:28:42,831: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,831: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,831: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,832: root: INFO: Current backtesting datetime 2023-06-26 11:30:00-04:00
2024-05-31 17:28:42,832: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,833: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,833: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,834: root: INFO: Current backtesting datetime 2023-06-26 12:00:00-04:00
2024-05-31 17:28:42,834: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,834: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,835: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,836: root: INFO: Current backtesting datetime 2023-06-26 12:30:00-04:00
2024-05-31 17:28:42,836: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,837: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,837: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,838: root: INFO: Current backtesting datetime 2023-06-26 13:00:00-04:00
2024-05-31 17:28:42,839: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,839: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,840: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,840: root: INFO: Current backtesting datetime 2023-06-26 13:30:00-04:00
2024-05-31 17:28:42,841: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,841: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,842: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,842: root: INFO: Current backtesting datetime 2023-06-26 14:00:00-04:00
2024-05-31 17:28:42,843: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,843: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,843: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,844: root: INFO: Current backtesting datetime 2023-06-26 14:30:00-04:00
2024-05-31 17:28:42,844: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,845: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,845: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,846: root: INFO: Current backtesting datetime 2023-06-26 15:00:00-04:00
2024-05-31 17:28:42,846: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,846: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,847: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,847: root: INFO: Current backtesting datetime 2023-06-26 15:30:00-04:00
2024-05-31 17:28:42,848: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,848: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,849: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,850: root: INFO: Current backtesting datetime 2023-06-26 16:00:00-04:00
2024-05-31 17:28:42,850: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:42,852: root: INFO: Current backtesting datetime 2023-06-26 15:59:00-04:00
2024-05-31 17:28:42,852: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:42,852: root: INFO: Current backtesting datetime 2023-06-26 16:00:00-04:00
2024-05-31 17:28:42,852: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:42,853: root: INFO: Current backtesting datetime 2023-06-27 08:30:00-04:00
2024-05-31 17:28:42,853: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:42,853: root: INFO: Current backtesting datetime 2023-06-27 09:30:00-04:00
2024-05-31 17:28:42,853: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:42,873: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,873: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,874: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,875: root: INFO: Current backtesting datetime 2023-06-27 10:00:00-04:00
2024-05-31 17:28:42,875: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,876: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,876: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,877: root: INFO: Current backtesting datetime 2023-06-27 10:30:00-04:00
2024-05-31 17:28:42,878: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,878: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,878: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,879: root: INFO: Current backtesting datetime 2023-06-27 11:00:00-04:00
2024-05-31 17:28:42,879: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,880: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,880: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,882: root: INFO: Current backtesting datetime 2023-06-27 11:30:00-04:00
2024-05-31 17:28:42,882: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,882: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,883: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,883: root: INFO: Current backtesting datetime 2023-06-27 12:00:00-04:00
2024-05-31 17:28:42,884: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,884: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,884: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,885: root: INFO: Current backtesting datetime 2023-06-27 12:30:00-04:00
2024-05-31 17:28:42,885: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,886: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,887: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,887: root: INFO: Current backtesting datetime 2023-06-27 13:00:00-04:00
2024-05-31 17:28:42,888: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,888: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,888: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,889: root: INFO: Current backtesting datetime 2023-06-27 13:30:00-04:00
2024-05-31 17:28:42,890: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,890: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,890: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,891: root: INFO: Current backtesting datetime 2023-06-27 14:00:00-04:00
2024-05-31 17:28:42,891: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,891: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,892: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,892: root: INFO: Current backtesting datetime 2023-06-27 14:30:00-04:00
2024-05-31 17:28:42,893: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,893: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,894: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,894: root: INFO: Current backtesting datetime 2023-06-27 15:00:00-04:00
2024-05-31 17:28:42,894: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,894: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,896: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,896: root: INFO: Current backtesting datetime 2023-06-27 15:30:00-04:00
2024-05-31 17:28:42,897: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,897: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,898: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,899: root: INFO: Current backtesting datetime 2023-06-27 16:00:00-04:00
2024-05-31 17:28:42,899: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:42,900: root: INFO: Current backtesting datetime 2023-06-27 15:59:00-04:00
2024-05-31 17:28:42,900: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:42,901: root: INFO: Current backtesting datetime 2023-06-27 16:00:00-04:00
2024-05-31 17:28:42,901: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:42,902: root: INFO: Current backtesting datetime 2023-06-28 08:30:00-04:00
2024-05-31 17:28:42,902: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:42,903: root: INFO: Current backtesting datetime 2023-06-28 09:30:00-04:00
2024-05-31 17:28:42,903: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:42,904: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,904: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,904: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,905: root: INFO: Current backtesting datetime 2023-06-28 10:00:00-04:00
2024-05-31 17:28:42,905: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,906: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,906: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,907: root: INFO: Current backtesting datetime 2023-06-28 10:30:00-04:00
2024-05-31 17:28:42,907: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,907: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,908: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,908: root: INFO: Current backtesting datetime 2023-06-28 11:00:00-04:00
2024-05-31 17:28:42,909: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,909: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,910: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,910: root: INFO: Current backtesting datetime 2023-06-28 11:30:00-04:00
2024-05-31 17:28:42,910: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,910: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,912: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,913: root: INFO: Current backtesting datetime 2023-06-28 12:00:00-04:00
2024-05-31 17:28:42,913: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,913: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,914: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,915: root: INFO: Current backtesting datetime 2023-06-28 12:30:00-04:00
2024-05-31 17:28:42,915: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,915: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,915: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,916: root: INFO: Current backtesting datetime 2023-06-28 13:00:00-04:00
2024-05-31 17:28:42,917: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,917: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,917: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,918: root: INFO: Current backtesting datetime 2023-06-28 13:30:00-04:00
2024-05-31 17:28:42,918: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,919: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,919: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,920: root: INFO: Current backtesting datetime 2023-06-28 14:00:00-04:00
2024-05-31 17:28:42,920: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,920: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,921: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,921: root: INFO: Current backtesting datetime 2023-06-28 14:30:00-04:00
2024-05-31 17:28:42,921: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,922: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,922: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,923: root: INFO: Current backtesting datetime 2023-06-28 15:00:00-04:00
2024-05-31 17:28:42,923: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,923: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,924: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,924: root: INFO: Current backtesting datetime 2023-06-28 15:30:00-04:00
2024-05-31 17:28:42,925: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,925: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,926: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,927: root: INFO: Current backtesting datetime 2023-06-28 16:00:00-04:00
2024-05-31 17:28:42,927: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:42,929: root: INFO: Current backtesting datetime 2023-06-28 15:59:00-04:00
2024-05-31 17:28:42,929: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:42,929: root: INFO: Current backtesting datetime 2023-06-28 16:00:00-04:00
2024-05-31 17:28:42,929: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:42,930: root: INFO: Current backtesting datetime 2023-06-29 08:30:00-04:00
2024-05-31 17:28:42,930: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:42,931: root: INFO: Current backtesting datetime 2023-06-29 09:30:00-04:00
2024-05-31 17:28:42,931: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:42,932: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,932: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,932: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,933: root: INFO: Current backtesting datetime 2023-06-29 10:00:00-04:00
2024-05-31 17:28:42,934: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,934: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,934: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,935: root: INFO: Current backtesting datetime 2023-06-29 10:30:00-04:00
2024-05-31 17:28:42,935: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,935: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,936: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,937: root: INFO: Current backtesting datetime 2023-06-29 11:00:00-04:00
2024-05-31 17:28:42,937: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,938: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,938: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,939: root: INFO: Current backtesting datetime 2023-06-29 11:30:00-04:00
2024-05-31 17:28:42,939: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,939: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,940: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,941: root: INFO: Current backtesting datetime 2023-06-29 12:00:00-04:00
2024-05-31 17:28:42,941: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,941: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,941: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,942: root: INFO: Current backtesting datetime 2023-06-29 12:30:00-04:00
2024-05-31 17:28:42,942: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,942: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,944: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,945: root: INFO: Current backtesting datetime 2023-06-29 13:00:00-04:00
2024-05-31 17:28:42,945: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,946: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,947: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,947: root: INFO: Current backtesting datetime 2023-06-29 13:30:00-04:00
2024-05-31 17:28:42,948: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,948: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,948: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,949: root: INFO: Current backtesting datetime 2023-06-29 14:00:00-04:00
2024-05-31 17:28:42,949: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,949: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,950: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,951: root: INFO: Current backtesting datetime 2023-06-29 14:30:00-04:00
2024-05-31 17:28:42,951: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,951: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,951: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,953: root: INFO: Current backtesting datetime 2023-06-29 15:00:00-04:00
2024-05-31 17:28:42,953: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,953: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,954: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,955: root: INFO: Current backtesting datetime 2023-06-29 15:30:00-04:00
2024-05-31 17:28:42,955: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,955: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,955: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,956: root: INFO: Current backtesting datetime 2023-06-29 16:00:00-04:00
2024-05-31 17:28:42,956: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:28:42,957: root: INFO: Current backtesting datetime 2023-06-29 15:59:00-04:00
2024-05-31 17:28:42,957: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:42,958: root: INFO: Current backtesting datetime 2023-06-29 16:00:00-04:00
2024-05-31 17:28:42,958: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:42,958: root: INFO: Current backtesting datetime 2023-06-30 08:30:00-04:00
2024-05-31 17:28:42,959: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:28:42,960: root: INFO: Current backtesting datetime 2023-06-30 09:30:00-04:00
2024-05-31 17:28:42,961: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:28:42,961: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,961: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:28:42[0m
2024-05-31 17:28:42,963: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:28:42,963: root: INFO: Current backtesting datetime 2023-06-30 10:00:00-04:00
2024-05-31 17:28:42,964: root: INFO: Current backtesting datetime 2023-06-30 15:59:00-04:00
2024-05-31 17:28:42,964: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:28:42,965: root: INFO: Current backtesting datetime 2023-06-30 16:00:00-04:00
2024-05-31 17:28:42,965: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:28:42,965: asyncio: INFO: [MLTrader] Executing the on_strategy_end lifecycle method
2024-05-31 17:28:42,989: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:28:43,006: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:28:43,261: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:28:43,284: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:28:43,513: root: INFO: Backtesting finished
2024-05-31 17:28:43,531: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:28:43,549: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:28:43,795: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:28:43,816: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:28:44,063: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:28:44,084: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:28:44,333: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:28:44,349: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:28:44,606: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:28:44,631: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:28:44,886: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:28:44,913: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:28:45,163: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:28:45,191: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:28:45,437: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:28:45,457: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:28:45,705: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:28:45,728: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:28:45,991: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:28:46,027: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:28:46,311: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:28:46,355: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:28:46,635: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:28:46,655: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:28:46,926: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:28:46,956: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:28:47,210: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:28:47,250: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:28:47,500: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:28:47,515: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:28:47,543: backtest_stats: INFO: Backtest took 0:00:07.277880 for a speed of 0.000
