2024-05-31 17:52:54,478: asyncio: INFO: [MLTrader] Executing the initialize lifecycle method
2024-05-31 17:52:54,583: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:54,738: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:55,182: root: INFO: Current backtesting datetime 2023-05-11 10:00:00-04:00
2024-05-31 17:52:55,184: root: INFO: Current backtesting datetime 2023-05-11 11:00:00-04:00
2024-05-31 17:52:55,184: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:55,185: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:55[0m
2024-05-31 17:52:55,185: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:55,183: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:55,206: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:55,455: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:55,473: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:55,661: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:55,801: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:56,129: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:56,688: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:56,712: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:56,761: asyncio: WARNING: [MLTrader] Selling all positions for MLTrader strategy
2024-05-31 17:52:56,761: asyncio: INFO: [MLTrader] [32mNew order was created: market order of | 2427.0 SPY buy | at price $420.1890124511719 of class bracket with status new[0m
2024-05-31 17:52:56,763: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,763: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,763: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,764: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,765: root: INFO: market order of | 2427.0 SPY buy | at price $420.1890124511719 of class bracket with status new was sent to broker backtesting
2024-05-31 17:52:56,765: root: INFO: market order of | 2427.0 SPY buy | at price $420.1890124511719 of class bracket with status new was sent to broker backtesting
2024-05-31 17:52:56,765: asyncio: INFO: [MLTrader] [32mOrder was filled: market order of | 2427.0 SPY buy | at price $411.95 of class bracket with status fill[0m
2024-05-31 17:52:56,769: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,770: root: INFO: Current backtesting datetime 2023-05-11 11:30:00-04:00
2024-05-31 17:52:56,771: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,771: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,771: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,771: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,771: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,772: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,772: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,772: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,772: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,773: root: INFO: Current backtesting datetime 2023-05-11 12:00:00-04:00
2024-05-31 17:52:56,775: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,775: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,776: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,776: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,776: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,776: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,776: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,777: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,777: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,778: root: INFO: Current backtesting datetime 2023-05-11 12:30:00-04:00
2024-05-31 17:52:56,779: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,779: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,779: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,779: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,780: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,780: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,780: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,780: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,781: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,782: root: INFO: Current backtesting datetime 2023-05-11 13:00:00-04:00
2024-05-31 17:52:56,782: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,782: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,782: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,782: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,783: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,783: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,783: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,783: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,784: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,784: root: INFO: Current backtesting datetime 2023-05-11 13:30:00-04:00
2024-05-31 17:52:56,786: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,787: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,787: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,787: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,787: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,787: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,787: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,787: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,788: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,789: root: INFO: Current backtesting datetime 2023-05-11 14:00:00-04:00
2024-05-31 17:52:56,790: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,790: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,790: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,790: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,792: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,792: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,792: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,792: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,793: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,794: root: INFO: Current backtesting datetime 2023-05-11 14:30:00-04:00
2024-05-31 17:52:56,795: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,795: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,795: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,795: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,796: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,796: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,796: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,796: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,797: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,798: root: INFO: Current backtesting datetime 2023-05-11 15:00:00-04:00
2024-05-31 17:52:56,799: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,799: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,799: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,799: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,800: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,800: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,800: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,800: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,800: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,801: root: INFO: Current backtesting datetime 2023-05-11 15:30:00-04:00
2024-05-31 17:52:56,802: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,802: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,802: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,802: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,803: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,803: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,803: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,803: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,804: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,804: root: INFO: Current backtesting datetime 2023-05-11 16:00:00-04:00
2024-05-31 17:52:56,807: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:56,807: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,807: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,807: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,807: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,807: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,807: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,808: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,808: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,809: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,809: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,809: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,809: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,810: root: INFO: Current backtesting datetime 2023-05-11 15:59:00-04:00
2024-05-31 17:52:56,810: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:56,811: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,811: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,811: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,811: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,811: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,812: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,813: root: INFO: Current backtesting datetime 2023-05-11 16:00:00-04:00
2024-05-31 17:52:56,813: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:56,813: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,813: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,813: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,813: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,813: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,814: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,814: root: INFO: Current backtesting datetime 2023-05-12 08:30:00-04:00
2024-05-31 17:52:56,815: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,816: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,817: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:56,817: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,817: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,817: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,817: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,817: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,817: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,818: root: INFO: Current backtesting datetime 2023-05-12 09:30:00-04:00
2024-05-31 17:52:56,818: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:56,820: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,820: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,820: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,820: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,821: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,821: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,821: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,821: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,822: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,823: root: INFO: Current backtesting datetime 2023-05-12 10:00:00-04:00
2024-05-31 17:52:56,824: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,824: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,825: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,825: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,844: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,845: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,845: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,845: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,847: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,848: root: INFO: Current backtesting datetime 2023-05-12 10:30:00-04:00
2024-05-31 17:52:56,848: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,848: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,848: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,849: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,849: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,849: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,849: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,850: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,850: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,851: root: INFO: Current backtesting datetime 2023-05-12 11:00:00-04:00
2024-05-31 17:52:56,852: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,852: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,852: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,852: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,853: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,853: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,853: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,853: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,854: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,855: root: INFO: Current backtesting datetime 2023-05-12 11:30:00-04:00
2024-05-31 17:52:56,855: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,855: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,857: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,857: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,857: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,857: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,857: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,858: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,858: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,859: root: INFO: Current backtesting datetime 2023-05-12 12:00:00-04:00
2024-05-31 17:52:56,860: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,860: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,860: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,860: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,860: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,860: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,860: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,861: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,861: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,862: root: INFO: Current backtesting datetime 2023-05-12 12:30:00-04:00
2024-05-31 17:52:56,863: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,863: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,863: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,863: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,864: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,864: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,864: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,864: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,865: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,866: root: INFO: Current backtesting datetime 2023-05-12 13:00:00-04:00
2024-05-31 17:52:56,867: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,867: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,867: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,867: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,868: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,868: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,868: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,869: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,869: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,870: root: INFO: Current backtesting datetime 2023-05-12 13:30:00-04:00
2024-05-31 17:52:56,871: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,872: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,872: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,872: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,872: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,872: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,872: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,873: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,873: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,874: root: INFO: Current backtesting datetime 2023-05-12 14:00:00-04:00
2024-05-31 17:52:56,875: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,875: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,875: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,875: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,876: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,876: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,877: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,877: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,878: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,878: root: INFO: Current backtesting datetime 2023-05-12 14:30:00-04:00
2024-05-31 17:52:56,879: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,879: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,879: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,879: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,879: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,879: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,880: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,880: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,881: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,881: root: INFO: Current backtesting datetime 2023-05-12 15:00:00-04:00
2024-05-31 17:52:56,882: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,882: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,882: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,882: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,883: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,883: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,883: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,883: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,884: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,885: root: INFO: Current backtesting datetime 2023-05-12 15:30:00-04:00
2024-05-31 17:52:56,886: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,887: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,887: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,887: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,887: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,887: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,887: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,888: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,888: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,889: root: INFO: Current backtesting datetime 2023-05-12 16:00:00-04:00
2024-05-31 17:52:56,890: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:56,890: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,890: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,890: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,891: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,891: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,892: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,892: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,892: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,893: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,893: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,893: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,893: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,894: root: INFO: Current backtesting datetime 2023-05-12 15:59:00-04:00
2024-05-31 17:52:56,895: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:56,895: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,895: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,895: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,895: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,895: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,896: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,897: root: INFO: Current backtesting datetime 2023-05-12 16:00:00-04:00
2024-05-31 17:52:56,897: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:56,897: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,897: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,897: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,897: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,897: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,898: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,899: root: INFO: Current backtesting datetime 2023-05-15 08:30:00-04:00
2024-05-31 17:52:56,899: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,900: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,900: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:56,900: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,900: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,902: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,902: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,902: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,902: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,903: root: INFO: Current backtesting datetime 2023-05-15 09:30:00-04:00
2024-05-31 17:52:56,903: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:56,905: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,905: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,905: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,905: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,906: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,906: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,906: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,906: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,907: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,907: root: INFO: Current backtesting datetime 2023-05-15 10:00:00-04:00
2024-05-31 17:52:56,908: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,908: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,908: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,908: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,909: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,909: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,909: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,909: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,910: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,911: root: INFO: Current backtesting datetime 2023-05-15 10:30:00-04:00
2024-05-31 17:52:56,912: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,912: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,913: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,913: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,913: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,913: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,913: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,914: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,914: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,915: root: INFO: Current backtesting datetime 2023-05-15 11:00:00-04:00
2024-05-31 17:52:56,916: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,916: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,916: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,916: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,917: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,917: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,917: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,917: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,918: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,919: root: INFO: Current backtesting datetime 2023-05-15 11:30:00-04:00
2024-05-31 17:52:56,920: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,920: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,920: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,920: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,921: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,921: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,921: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,921: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,921: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,922: root: INFO: Current backtesting datetime 2023-05-15 12:00:00-04:00
2024-05-31 17:52:56,923: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,923: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,923: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,923: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,924: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,924: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,924: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,924: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,925: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,925: root: INFO: Current backtesting datetime 2023-05-15 12:30:00-04:00
2024-05-31 17:52:56,927: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,927: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,927: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,927: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,928: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,928: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,928: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,928: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,929: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,930: root: INFO: Current backtesting datetime 2023-05-15 13:00:00-04:00
2024-05-31 17:52:56,931: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,931: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,931: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,931: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,932: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,932: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,932: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,932: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,933: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,933: root: INFO: Current backtesting datetime 2023-05-15 13:30:00-04:00
2024-05-31 17:52:56,934: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,935: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,935: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,935: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,935: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,935: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,935: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,937: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,938: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,939: root: INFO: Current backtesting datetime 2023-05-15 14:00:00-04:00
2024-05-31 17:52:56,940: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,941: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,941: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,941: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,941: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,941: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,941: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,942: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,942: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,943: root: INFO: Current backtesting datetime 2023-05-15 14:30:00-04:00
2024-05-31 17:52:56,944: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,944: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,944: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,944: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,944: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,945: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,945: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,945: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,945: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,947: root: INFO: Current backtesting datetime 2023-05-15 15:00:00-04:00
2024-05-31 17:52:56,949: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,949: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,949: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,949: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,950: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,950: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,950: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,950: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,951: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,952: root: INFO: Current backtesting datetime 2023-05-15 15:30:00-04:00
2024-05-31 17:52:56,953: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,953: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,953: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,953: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,953: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,954: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,954: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,954: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,954: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,955: root: INFO: Current backtesting datetime 2023-05-15 16:00:00-04:00
2024-05-31 17:52:56,955: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:56,955: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,955: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,957: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,957: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,957: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,957: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,958: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,958: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,959: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,959: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,959: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,959: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,960: root: INFO: Current backtesting datetime 2023-05-15 15:59:00-04:00
2024-05-31 17:52:56,960: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:56,960: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,960: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,961: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,961: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,961: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,962: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,965: root: INFO: Current backtesting datetime 2023-05-15 16:00:00-04:00
2024-05-31 17:52:56,961: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:56,965: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:56,965: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,965: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,967: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,967: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,967: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,968: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,969: root: INFO: Current backtesting datetime 2023-05-16 08:30:00-04:00
2024-05-31 17:52:56,970: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,970: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,971: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:56,971: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,971: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,971: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,972: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,972: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,972: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,973: root: INFO: Current backtesting datetime 2023-05-16 09:30:00-04:00
2024-05-31 17:52:56,973: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:56,974: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,975: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,975: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,975: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,975: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,976: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,976: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,976: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,977: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,977: root: INFO: Current backtesting datetime 2023-05-16 10:00:00-04:00
2024-05-31 17:52:56,978: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:56,979: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,979: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,979: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,979: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,980: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,980: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,980: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,980: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,981: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,982: root: INFO: Current backtesting datetime 2023-05-16 10:30:00-04:00
2024-05-31 17:52:56,983: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,983: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,983: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,983: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,983: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,984: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,984: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,984: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,985: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,985: root: INFO: Current backtesting datetime 2023-05-16 11:00:00-04:00
2024-05-31 17:52:56,987: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,987: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,987: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,987: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,988: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,988: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,988: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,988: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,989: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,989: root: INFO: Current backtesting datetime 2023-05-16 11:30:00-04:00
2024-05-31 17:52:56,990: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,990: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,990: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,990: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,991: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,991: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,991: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,991: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,992: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,993: root: INFO: Current backtesting datetime 2023-05-16 12:00:00-04:00
2024-05-31 17:52:56,994: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,994: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,995: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,995: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,995: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,995: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,995: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,995: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,997: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:56,998: root: INFO: Current backtesting datetime 2023-05-16 12:30:00-04:00
2024-05-31 17:52:56,999: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,999: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:56[0m
2024-05-31 17:52:56,999: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:56,999: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,999: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:56,999: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,000: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,000: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,000: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,002: root: INFO: Current backtesting datetime 2023-05-16 13:00:00-04:00
2024-05-31 17:52:57,003: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,003: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,003: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,003: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,004: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,004: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,004: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,004: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,005: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,005: root: INFO: Current backtesting datetime 2023-05-16 13:30:00-04:00
2024-05-31 17:52:57,007: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,007: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,007: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,007: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,007: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,007: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,007: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,007: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,007: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,009: root: INFO: Current backtesting datetime 2023-05-16 14:00:00-04:00
2024-05-31 17:52:57,011: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,011: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,011: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,011: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,011: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,012: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,012: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,012: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,013: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,013: root: INFO: Current backtesting datetime 2023-05-16 14:30:00-04:00
2024-05-31 17:52:57,014: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,014: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,014: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,015: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,015: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,015: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,015: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,015: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,016: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,017: root: INFO: Current backtesting datetime 2023-05-16 15:00:00-04:00
2024-05-31 17:52:57,017: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,018: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,018: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,018: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,018: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,018: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,018: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,019: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,020: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,021: root: INFO: Current backtesting datetime 2023-05-16 15:30:00-04:00
2024-05-31 17:52:57,022: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,022: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,022: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,022: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,022: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,023: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,023: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,023: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,024: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,025: root: INFO: Current backtesting datetime 2023-05-16 16:00:00-04:00
2024-05-31 17:52:57,026: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:57,026: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,026: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,026: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,026: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,026: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,027: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,027: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,027: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,028: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,028: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,028: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,028: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,030: root: INFO: Current backtesting datetime 2023-05-16 15:59:00-04:00
2024-05-31 17:52:57,030: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:57,030: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,030: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,031: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,031: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,031: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,031: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,032: root: INFO: Current backtesting datetime 2023-05-16 16:00:00-04:00
2024-05-31 17:52:57,032: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:57,032: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,032: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,032: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,033: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,033: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,033: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,034: root: INFO: Current backtesting datetime 2023-05-17 08:30:00-04:00
2024-05-31 17:52:57,034: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,035: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,035: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:57,035: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,035: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,035: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,035: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,035: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,036: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,037: root: INFO: Current backtesting datetime 2023-05-17 09:30:00-04:00
2024-05-31 17:52:57,037: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:57,038: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,038: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,038: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,038: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,040: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,040: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,040: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,040: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,041: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,041: root: INFO: Current backtesting datetime 2023-05-17 10:00:00-04:00
2024-05-31 17:52:57,042: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,043: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,043: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,043: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,043: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,043: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,043: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,044: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,044: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,045: root: INFO: Current backtesting datetime 2023-05-17 10:30:00-04:00
2024-05-31 17:52:57,046: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,046: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,046: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,046: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,046: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,046: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,046: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,047: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,048: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,049: root: INFO: Current backtesting datetime 2023-05-17 11:00:00-04:00
2024-05-31 17:52:57,050: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,050: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,050: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,050: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,051: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,051: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,051: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,051: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,052: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,053: root: INFO: Current backtesting datetime 2023-05-17 11:30:00-04:00
2024-05-31 17:52:57,054: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,054: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,054: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,054: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,055: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,055: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,055: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,055: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,056: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,056: root: INFO: Current backtesting datetime 2023-05-17 12:00:00-04:00
2024-05-31 17:52:57,058: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,059: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,059: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,059: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,059: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,059: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,060: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,060: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,061: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,062: root: INFO: Current backtesting datetime 2023-05-17 12:30:00-04:00
2024-05-31 17:52:57,063: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,063: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,063: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,063: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,064: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,064: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,064: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,064: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,065: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,065: root: INFO: Current backtesting datetime 2023-05-17 13:00:00-04:00
2024-05-31 17:52:57,067: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,068: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,068: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,068: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,068: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,068: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,068: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,069: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,069: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,070: root: INFO: Current backtesting datetime 2023-05-17 13:30:00-04:00
2024-05-31 17:52:57,070: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,071: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,071: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,071: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,072: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,072: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,072: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,072: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,073: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,074: root: INFO: Current backtesting datetime 2023-05-17 14:00:00-04:00
2024-05-31 17:52:57,075: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,075: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,075: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,075: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,076: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,076: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,076: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,076: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,077: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,077: root: INFO: Current backtesting datetime 2023-05-17 14:30:00-04:00
2024-05-31 17:52:57,078: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,078: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,078: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,079: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,079: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,079: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,079: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,080: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,080: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,081: root: INFO: Current backtesting datetime 2023-05-17 15:00:00-04:00
2024-05-31 17:52:57,082: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,082: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,082: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,082: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,082: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,083: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,083: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,083: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,084: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,084: root: INFO: Current backtesting datetime 2023-05-17 15:30:00-04:00
2024-05-31 17:52:57,085: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,085: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,085: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,085: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,087: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,087: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,087: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,087: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,088: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,089: root: INFO: Current backtesting datetime 2023-05-17 16:00:00-04:00
2024-05-31 17:52:57,090: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:57,090: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,090: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,091: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,091: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,110: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,112: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,113: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,113: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,114: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,114: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,114: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,114: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,115: root: INFO: Current backtesting datetime 2023-05-17 15:59:00-04:00
2024-05-31 17:52:57,115: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:57,116: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,116: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,116: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,116: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,116: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,116: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,117: root: INFO: Current backtesting datetime 2023-05-17 16:00:00-04:00
2024-05-31 17:52:57,117: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:57,117: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,117: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,117: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,117: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,117: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,118: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,118: root: INFO: Current backtesting datetime 2023-05-18 08:30:00-04:00
2024-05-31 17:52:57,119: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,119: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,120: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:57,120: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,120: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,120: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,120: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,120: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,122: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,123: root: INFO: Current backtesting datetime 2023-05-18 09:30:00-04:00
2024-05-31 17:52:57,123: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:57,124: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,124: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,124: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,124: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,125: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,125: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,125: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,125: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,126: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,127: root: INFO: Current backtesting datetime 2023-05-18 10:00:00-04:00
2024-05-31 17:52:57,127: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,127: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,127: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,127: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,128: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,128: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,128: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,129: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,129: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,130: root: INFO: Current backtesting datetime 2023-05-18 10:30:00-04:00
2024-05-31 17:52:57,131: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,131: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,131: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,131: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,131: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,132: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,132: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,132: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,133: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,134: root: INFO: Current backtesting datetime 2023-05-18 11:00:00-04:00
2024-05-31 17:52:57,134: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,135: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,135: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,135: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,135: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,135: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,135: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,136: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,136: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,137: root: INFO: Current backtesting datetime 2023-05-18 11:30:00-04:00
2024-05-31 17:52:57,138: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,139: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,139: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,139: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,140: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,140: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,140: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,140: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,141: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,143: root: INFO: Current backtesting datetime 2023-05-18 12:00:00-04:00
2024-05-31 17:52:57,143: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,143: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,144: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,144: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,144: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,144: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,144: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,145: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,145: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,145: root: INFO: Current backtesting datetime 2023-05-18 12:30:00-04:00
2024-05-31 17:52:57,147: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,147: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,148: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,148: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,148: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,149: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,149: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,149: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,150: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,151: root: INFO: Current backtesting datetime 2023-05-18 13:00:00-04:00
2024-05-31 17:52:57,152: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,152: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,152: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,152: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,152: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,153: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,153: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,153: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,154: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,155: root: INFO: Current backtesting datetime 2023-05-18 13:30:00-04:00
2024-05-31 17:52:57,156: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,157: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,157: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,157: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,157: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,157: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,158: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,158: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,159: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,159: root: INFO: Current backtesting datetime 2023-05-18 14:00:00-04:00
2024-05-31 17:52:57,160: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,160: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,161: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,161: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,161: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,161: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,161: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,161: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,162: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,164: root: INFO: Current backtesting datetime 2023-05-18 14:30:00-04:00
2024-05-31 17:52:57,165: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,165: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,165: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,165: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,166: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,166: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,166: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,166: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,167: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,168: root: INFO: Current backtesting datetime 2023-05-18 15:00:00-04:00
2024-05-31 17:52:57,168: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,169: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,169: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,169: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,169: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,169: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,169: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,170: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,170: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,171: root: INFO: Current backtesting datetime 2023-05-18 15:30:00-04:00
2024-05-31 17:52:57,172: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,173: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,173: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,173: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,173: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,173: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,173: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,174: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,174: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,175: root: INFO: Current backtesting datetime 2023-05-18 16:00:00-04:00
2024-05-31 17:52:57,176: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:57,176: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,176: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,176: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,176: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,177: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,177: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,177: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,178: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,178: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,178: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,178: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,179: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,180: root: INFO: Current backtesting datetime 2023-05-18 15:59:00-04:00
2024-05-31 17:52:57,180: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:57,181: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,181: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,181: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,181: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,181: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,182: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,182: root: INFO: Current backtesting datetime 2023-05-18 16:00:00-04:00
2024-05-31 17:52:57,182: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:57,182: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,182: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,183: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,183: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,183: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,184: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,185: root: INFO: Current backtesting datetime 2023-05-19 08:30:00-04:00
2024-05-31 17:52:57,186: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,186: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,187: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:57,187: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,187: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,187: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,187: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:52:57,187: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,188: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:52:57,188: asyncio: INFO: [MLTrader] [32mOrder was canceled: stop order of | 2427.0 SPY sell | at price $407.83051208496096 with status canceled[0m
2024-05-31 17:52:57,190: root: INFO: Position MLTrader Position: 0.0 shares of SPY (2 orders) liquidated
2024-05-31 17:52:57,190: asyncio: INFO: [MLTrader] [32mOrder was filled: limit order of | 2427.0 SPY sell | at price $420.19 with status fill[0m
2024-05-31 17:52:57,193: root: INFO: Current backtesting datetime 2023-05-19 09:30:00-04:00
2024-05-31 17:52:57,193: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:57,194: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,194: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,194: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,195: root: INFO: Current backtesting datetime 2023-05-19 10:00:00-04:00
2024-05-31 17:52:57,195: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,196: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,196: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,197: root: INFO: Current backtesting datetime 2023-05-19 10:30:00-04:00
2024-05-31 17:52:57,197: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,198: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,198: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,199: root: INFO: Current backtesting datetime 2023-05-19 11:00:00-04:00
2024-05-31 17:52:57,199: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,199: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,200: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,200: root: INFO: Current backtesting datetime 2023-05-19 11:30:00-04:00
2024-05-31 17:52:57,200: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,202: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,202: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,203: root: INFO: Current backtesting datetime 2023-05-19 12:00:00-04:00
2024-05-31 17:52:57,203: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,203: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,204: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,205: root: INFO: Current backtesting datetime 2023-05-19 12:30:00-04:00
2024-05-31 17:52:57,205: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,205: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,206: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,207: root: INFO: Current backtesting datetime 2023-05-19 13:00:00-04:00
2024-05-31 17:52:57,208: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,208: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,208: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,209: root: INFO: Current backtesting datetime 2023-05-19 13:30:00-04:00
2024-05-31 17:52:57,209: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,210: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,210: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,211: root: INFO: Current backtesting datetime 2023-05-19 14:00:00-04:00
2024-05-31 17:52:57,212: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,212: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,213: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,214: root: INFO: Current backtesting datetime 2023-05-19 14:30:00-04:00
2024-05-31 17:52:57,215: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,215: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,216: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,216: root: INFO: Current backtesting datetime 2023-05-19 15:00:00-04:00
2024-05-31 17:52:57,217: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,217: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,218: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,219: root: INFO: Current backtesting datetime 2023-05-19 15:30:00-04:00
2024-05-31 17:52:57,219: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,219: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,220: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,220: root: INFO: Current backtesting datetime 2023-05-19 16:00:00-04:00
2024-05-31 17:52:57,221: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:57,221: root: INFO: Current backtesting datetime 2023-05-19 15:59:00-04:00
2024-05-31 17:52:57,222: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:57,222: root: INFO: Current backtesting datetime 2023-05-19 16:00:00-04:00
2024-05-31 17:52:57,223: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:57,223: root: INFO: Current backtesting datetime 2023-05-22 08:30:00-04:00
2024-05-31 17:52:57,223: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:57,225: root: INFO: Current backtesting datetime 2023-05-22 09:30:00-04:00
2024-05-31 17:52:57,225: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:57,225: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,225: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,227: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,228: root: INFO: Current backtesting datetime 2023-05-22 10:00:00-04:00
2024-05-31 17:52:57,229: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,229: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,230: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,230: root: INFO: Current backtesting datetime 2023-05-22 10:30:00-04:00
2024-05-31 17:52:57,227: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:57,231: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,231: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,232: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,233: root: INFO: Current backtesting datetime 2023-05-22 11:00:00-04:00
2024-05-31 17:52:57,233: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,234: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,234: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,235: root: INFO: Current backtesting datetime 2023-05-22 11:30:00-04:00
2024-05-31 17:52:57,236: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,236: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,237: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,237: root: INFO: Current backtesting datetime 2023-05-22 12:00:00-04:00
2024-05-31 17:52:57,238: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,238: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,238: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,239: root: INFO: Current backtesting datetime 2023-05-22 12:30:00-04:00
2024-05-31 17:52:57,240: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,240: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,241: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,241: root: INFO: Current backtesting datetime 2023-05-22 13:00:00-04:00
2024-05-31 17:52:57,242: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,242: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,243: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,243: root: INFO: Current backtesting datetime 2023-05-22 13:30:00-04:00
2024-05-31 17:52:57,244: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,244: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,244: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,245: root: INFO: Current backtesting datetime 2023-05-22 14:00:00-04:00
2024-05-31 17:52:57,245: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,246: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:57,246: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,247: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,248: root: INFO: Current backtesting datetime 2023-05-22 14:30:00-04:00
2024-05-31 17:52:57,249: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,249: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,250: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,251: root: INFO: Current backtesting datetime 2023-05-22 15:00:00-04:00
2024-05-31 17:52:57,251: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,251: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,252: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,253: root: INFO: Current backtesting datetime 2023-05-22 15:30:00-04:00
2024-05-31 17:52:57,253: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,254: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,254: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,255: root: INFO: Current backtesting datetime 2023-05-22 16:00:00-04:00
2024-05-31 17:52:57,256: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:57,257: root: INFO: Current backtesting datetime 2023-05-22 15:59:00-04:00
2024-05-31 17:52:57,257: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:57,257: root: INFO: Current backtesting datetime 2023-05-22 16:00:00-04:00
2024-05-31 17:52:57,257: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:57,258: root: INFO: Current backtesting datetime 2023-05-23 08:30:00-04:00
2024-05-31 17:52:57,258: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:57,259: root: INFO: Current backtesting datetime 2023-05-23 09:30:00-04:00
2024-05-31 17:52:57,259: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:57,260: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,260: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,261: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,262: root: INFO: Current backtesting datetime 2023-05-23 10:00:00-04:00
2024-05-31 17:52:57,262: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,262: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,263: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,264: root: INFO: Current backtesting datetime 2023-05-23 10:30:00-04:00
2024-05-31 17:52:57,264: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,264: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,265: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,265: root: INFO: Current backtesting datetime 2023-05-23 11:00:00-04:00
2024-05-31 17:52:57,267: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,267: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,267: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,268: root: INFO: Current backtesting datetime 2023-05-23 11:30:00-04:00
2024-05-31 17:52:57,269: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,269: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,269: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,270: root: INFO: Current backtesting datetime 2023-05-23 12:00:00-04:00
2024-05-31 17:52:57,270: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,271: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,271: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,272: root: INFO: Current backtesting datetime 2023-05-23 12:30:00-04:00
2024-05-31 17:52:57,272: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,273: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,273: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,274: root: INFO: Current backtesting datetime 2023-05-23 13:00:00-04:00
2024-05-31 17:52:57,274: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,275: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,275: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,275: root: INFO: Current backtesting datetime 2023-05-23 13:30:00-04:00
2024-05-31 17:52:57,277: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,277: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,278: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,278: root: INFO: Current backtesting datetime 2023-05-23 14:00:00-04:00
2024-05-31 17:52:57,279: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,279: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,280: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,280: root: INFO: Current backtesting datetime 2023-05-23 14:30:00-04:00
2024-05-31 17:52:57,281: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,281: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,282: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,283: root: INFO: Current backtesting datetime 2023-05-23 15:00:00-04:00
2024-05-31 17:52:57,283: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,283: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,284: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,285: root: INFO: Current backtesting datetime 2023-05-23 15:30:00-04:00
2024-05-31 17:52:57,285: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,285: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,285: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,287: root: INFO: Current backtesting datetime 2023-05-23 16:00:00-04:00
2024-05-31 17:52:57,288: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:57,289: root: INFO: Current backtesting datetime 2023-05-23 15:59:00-04:00
2024-05-31 17:52:57,289: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:57,290: root: INFO: Current backtesting datetime 2023-05-23 16:00:00-04:00
2024-05-31 17:52:57,290: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:57,291: root: INFO: Current backtesting datetime 2023-05-24 08:30:00-04:00
2024-05-31 17:52:57,291: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:57,292: root: INFO: Current backtesting datetime 2023-05-24 09:30:00-04:00
2024-05-31 17:52:57,292: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:57,293: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,293: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,293: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,294: root: INFO: Current backtesting datetime 2023-05-24 10:00:00-04:00
2024-05-31 17:52:57,295: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,295: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,296: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,297: root: INFO: Current backtesting datetime 2023-05-24 10:30:00-04:00
2024-05-31 17:52:57,297: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,297: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,298: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,298: root: INFO: Current backtesting datetime 2023-05-24 11:00:00-04:00
2024-05-31 17:52:57,299: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,299: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,300: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,300: root: INFO: Current backtesting datetime 2023-05-24 11:30:00-04:00
2024-05-31 17:52:57,300: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,300: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,302: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,303: root: INFO: Current backtesting datetime 2023-05-24 12:00:00-04:00
2024-05-31 17:52:57,303: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,303: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,304: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,305: root: INFO: Current backtesting datetime 2023-05-24 12:30:00-04:00
2024-05-31 17:52:57,306: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,307: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,307: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,308: root: INFO: Current backtesting datetime 2023-05-24 13:00:00-04:00
2024-05-31 17:52:57,309: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,309: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,310: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,311: root: INFO: Current backtesting datetime 2023-05-24 13:30:00-04:00
2024-05-31 17:52:57,312: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,312: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,312: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,313: root: INFO: Current backtesting datetime 2023-05-24 14:00:00-04:00
2024-05-31 17:52:57,313: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,313: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,314: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,315: root: INFO: Current backtesting datetime 2023-05-24 14:30:00-04:00
2024-05-31 17:52:57,316: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,316: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,317: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,318: root: INFO: Current backtesting datetime 2023-05-24 15:00:00-04:00
2024-05-31 17:52:57,318: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,318: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,319: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,320: root: INFO: Current backtesting datetime 2023-05-24 15:30:00-04:00
2024-05-31 17:52:57,320: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,320: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,321: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,322: root: INFO: Current backtesting datetime 2023-05-24 16:00:00-04:00
2024-05-31 17:52:57,322: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:57,324: root: INFO: Current backtesting datetime 2023-05-24 15:59:00-04:00
2024-05-31 17:52:57,325: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:57,325: root: INFO: Current backtesting datetime 2023-05-24 16:00:00-04:00
2024-05-31 17:52:57,325: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:57,326: root: INFO: Current backtesting datetime 2023-05-25 08:30:00-04:00
2024-05-31 17:52:57,326: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:57,327: root: INFO: Current backtesting datetime 2023-05-25 09:30:00-04:00
2024-05-31 17:52:57,327: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:57,327: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,328: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,328: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,329: root: INFO: Current backtesting datetime 2023-05-25 10:00:00-04:00
2024-05-31 17:52:57,330: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,330: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,330: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,331: root: INFO: Current backtesting datetime 2023-05-25 10:30:00-04:00
2024-05-31 17:52:57,332: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,332: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,332: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,334: root: INFO: Current backtesting datetime 2023-05-25 11:00:00-04:00
2024-05-31 17:52:57,334: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,334: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,335: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,335: root: INFO: Current backtesting datetime 2023-05-25 11:30:00-04:00
2024-05-31 17:52:57,336: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,336: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,337: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,337: root: INFO: Current backtesting datetime 2023-05-25 12:00:00-04:00
2024-05-31 17:52:57,337: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,337: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,338: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,339: root: INFO: Current backtesting datetime 2023-05-25 12:30:00-04:00
2024-05-31 17:52:57,339: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,340: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,340: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,341: root: INFO: Current backtesting datetime 2023-05-25 13:00:00-04:00
2024-05-31 17:52:57,341: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,341: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,342: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,342: root: INFO: Current backtesting datetime 2023-05-25 13:30:00-04:00
2024-05-31 17:52:57,344: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,344: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,345: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,345: root: INFO: Current backtesting datetime 2023-05-25 14:00:00-04:00
2024-05-31 17:52:57,346: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,346: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,347: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,347: root: INFO: Current backtesting datetime 2023-05-25 14:30:00-04:00
2024-05-31 17:52:57,347: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,347: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,347: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,349: root: INFO: Current backtesting datetime 2023-05-25 15:00:00-04:00
2024-05-31 17:52:57,349: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,350: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,350: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,351: root: INFO: Current backtesting datetime 2023-05-25 15:30:00-04:00
2024-05-31 17:52:57,351: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,352: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,352: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,353: root: INFO: Current backtesting datetime 2023-05-25 16:00:00-04:00
2024-05-31 17:52:57,353: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:57,354: root: INFO: Current backtesting datetime 2023-05-25 15:59:00-04:00
2024-05-31 17:52:57,355: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:57,355: root: INFO: Current backtesting datetime 2023-05-25 16:00:00-04:00
2024-05-31 17:52:57,355: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:57,355: root: INFO: Current backtesting datetime 2023-05-26 08:30:00-04:00
2024-05-31 17:52:57,357: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:57,358: root: INFO: Current backtesting datetime 2023-05-26 09:30:00-04:00
2024-05-31 17:52:57,358: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:57,359: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,359: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,359: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,359: root: INFO: Current backtesting datetime 2023-05-26 10:00:00-04:00
2024-05-31 17:52:57,360: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,360: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,361: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,371: root: INFO: Current backtesting datetime 2023-05-26 10:30:00-04:00
2024-05-31 17:52:57,382: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,382: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,383: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,384: root: INFO: Current backtesting datetime 2023-05-26 11:00:00-04:00
2024-05-31 17:52:57,385: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,385: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,386: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,387: root: INFO: Current backtesting datetime 2023-05-26 11:30:00-04:00
2024-05-31 17:52:57,387: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,387: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,387: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,387: root: INFO: Current backtesting datetime 2023-05-26 12:00:00-04:00
2024-05-31 17:52:57,389: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,389: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,389: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,390: root: INFO: Current backtesting datetime 2023-05-26 12:30:00-04:00
2024-05-31 17:52:57,390: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,391: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,391: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,392: root: INFO: Current backtesting datetime 2023-05-26 13:00:00-04:00
2024-05-31 17:52:57,392: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,393: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,393: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,393: root: INFO: Current backtesting datetime 2023-05-26 13:30:00-04:00
2024-05-31 17:52:57,394: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,394: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,395: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,395: root: INFO: Current backtesting datetime 2023-05-26 14:00:00-04:00
2024-05-31 17:52:57,395: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,395: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,397: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,397: root: INFO: Current backtesting datetime 2023-05-26 14:30:00-04:00
2024-05-31 17:52:57,398: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,398: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,399: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,399: root: INFO: Current backtesting datetime 2023-05-26 15:00:00-04:00
2024-05-31 17:52:57,400: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,400: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,400: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,402: root: INFO: Current backtesting datetime 2023-05-26 15:30:00-04:00
2024-05-31 17:52:57,402: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,403: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,403: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,403: root: INFO: Current backtesting datetime 2023-05-26 16:00:00-04:00
2024-05-31 17:52:57,404: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:57,405: root: INFO: Current backtesting datetime 2023-05-26 15:59:00-04:00
2024-05-31 17:52:57,405: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:57,407: root: INFO: Current backtesting datetime 2023-05-26 16:00:00-04:00
2024-05-31 17:52:57,407: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:57,408: root: INFO: Current backtesting datetime 2023-05-30 08:30:00-04:00
2024-05-31 17:52:57,408: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:57,409: root: INFO: Current backtesting datetime 2023-05-30 09:30:00-04:00
2024-05-31 17:52:57,409: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:57,409: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,409: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,410: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,410: root: INFO: Current backtesting datetime 2023-05-30 10:00:00-04:00
2024-05-31 17:52:57,411: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,411: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,412: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,413: root: INFO: Current backtesting datetime 2023-05-30 10:30:00-04:00
2024-05-31 17:52:57,413: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,413: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,414: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,415: root: INFO: Current backtesting datetime 2023-05-30 11:00:00-04:00
2024-05-31 17:52:57,416: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,416: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,416: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,417: root: INFO: Current backtesting datetime 2023-05-30 11:30:00-04:00
2024-05-31 17:52:57,417: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,417: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,417: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,419: root: INFO: Current backtesting datetime 2023-05-30 12:00:00-04:00
2024-05-31 17:52:57,420: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,420: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,421: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,422: root: INFO: Current backtesting datetime 2023-05-30 12:30:00-04:00
2024-05-31 17:52:57,422: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,422: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,423: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,423: root: INFO: Current backtesting datetime 2023-05-30 13:00:00-04:00
2024-05-31 17:52:57,423: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,424: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,424: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,425: root: INFO: Current backtesting datetime 2023-05-30 13:30:00-04:00
2024-05-31 17:52:57,425: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,425: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,427: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,427: root: INFO: Current backtesting datetime 2023-05-30 14:00:00-04:00
2024-05-31 17:52:57,428: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,428: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,429: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,429: root: INFO: Current backtesting datetime 2023-05-30 14:30:00-04:00
2024-05-31 17:52:57,430: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,430: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,430: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,431: root: INFO: Current backtesting datetime 2023-05-30 15:00:00-04:00
2024-05-31 17:52:57,431: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,432: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,432: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,433: root: INFO: Current backtesting datetime 2023-05-30 15:30:00-04:00
2024-05-31 17:52:57,434: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,435: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,435: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,436: root: INFO: Current backtesting datetime 2023-05-30 16:00:00-04:00
2024-05-31 17:52:57,436: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:57,437: root: INFO: Current backtesting datetime 2023-05-30 15:59:00-04:00
2024-05-31 17:52:57,437: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:57,439: root: INFO: Current backtesting datetime 2023-05-30 16:00:00-04:00
2024-05-31 17:52:57,439: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:57,439: root: INFO: Current backtesting datetime 2023-05-31 08:30:00-04:00
2024-05-31 17:52:57,440: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:57,441: root: INFO: Current backtesting datetime 2023-05-31 09:30:00-04:00
2024-05-31 17:52:57,441: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:57,441: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,442: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,442: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,443: root: INFO: Current backtesting datetime 2023-05-31 10:00:00-04:00
2024-05-31 17:52:57,443: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,444: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,444: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,445: root: INFO: Current backtesting datetime 2023-05-31 10:30:00-04:00
2024-05-31 17:52:57,445: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,445: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,446: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,446: root: INFO: Current backtesting datetime 2023-05-31 11:00:00-04:00
2024-05-31 17:52:57,447: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,447: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,448: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,449: root: INFO: Current backtesting datetime 2023-05-31 11:30:00-04:00
2024-05-31 17:52:57,449: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,449: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,451: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,452: root: INFO: Current backtesting datetime 2023-05-31 12:00:00-04:00
2024-05-31 17:52:57,452: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,452: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,453: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,454: root: INFO: Current backtesting datetime 2023-05-31 12:30:00-04:00
2024-05-31 17:52:57,454: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,454: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,455: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,456: root: INFO: Current backtesting datetime 2023-05-31 13:00:00-04:00
2024-05-31 17:52:57,456: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,456: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,457: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,457: root: INFO: Current backtesting datetime 2023-05-31 13:30:00-04:00
2024-05-31 17:52:57,458: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,458: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,458: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,460: root: INFO: Current backtesting datetime 2023-05-31 14:00:00-04:00
2024-05-31 17:52:57,460: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,460: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,461: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,462: root: INFO: Current backtesting datetime 2023-05-31 14:30:00-04:00
2024-05-31 17:52:57,463: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,463: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,463: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,464: root: INFO: Current backtesting datetime 2023-05-31 15:00:00-04:00
2024-05-31 17:52:57,465: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,465: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,465: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,466: root: INFO: Current backtesting datetime 2023-05-31 15:30:00-04:00
2024-05-31 17:52:57,467: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,467: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,467: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,468: root: INFO: Current backtesting datetime 2023-05-31 16:00:00-04:00
2024-05-31 17:52:57,469: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:57,470: root: INFO: Current backtesting datetime 2023-05-31 15:59:00-04:00
2024-05-31 17:52:57,470: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:57,472: root: INFO: Current backtesting datetime 2023-05-31 16:00:00-04:00
2024-05-31 17:52:57,472: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:57,472: root: INFO: Current backtesting datetime 2023-06-01 08:30:00-04:00
2024-05-31 17:52:57,473: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:57,473: root: INFO: Current backtesting datetime 2023-06-01 09:30:00-04:00
2024-05-31 17:52:57,473: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:57,474: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,474: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,475: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,475: root: INFO: Current backtesting datetime 2023-06-01 10:00:00-04:00
2024-05-31 17:52:57,475: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,477: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,477: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,478: root: INFO: Current backtesting datetime 2023-06-01 10:30:00-04:00
2024-05-31 17:52:57,478: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,478: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,479: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,480: root: INFO: Current backtesting datetime 2023-06-01 11:00:00-04:00
2024-05-31 17:52:57,480: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,480: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,481: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,481: root: INFO: Current backtesting datetime 2023-06-01 11:30:00-04:00
2024-05-31 17:52:57,482: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,482: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,483: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,484: root: INFO: Current backtesting datetime 2023-06-01 12:00:00-04:00
2024-05-31 17:52:57,484: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,484: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,486: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,486: root: INFO: Current backtesting datetime 2023-06-01 12:30:00-04:00
2024-05-31 17:52:57,487: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,487: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,487: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,488: root: INFO: Current backtesting datetime 2023-06-01 13:00:00-04:00
2024-05-31 17:52:57,488: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,489: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,490: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,490: root: INFO: Current backtesting datetime 2023-06-01 13:30:00-04:00
2024-05-31 17:52:57,490: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,491: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,491: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,492: root: INFO: Current backtesting datetime 2023-06-01 14:00:00-04:00
2024-05-31 17:52:57,492: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,493: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,493: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,494: root: INFO: Current backtesting datetime 2023-06-01 14:30:00-04:00
2024-05-31 17:52:57,495: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,495: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,496: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,497: root: INFO: Current backtesting datetime 2023-06-01 15:00:00-04:00
2024-05-31 17:52:57,498: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,498: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,499: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,500: root: INFO: Current backtesting datetime 2023-06-01 15:30:00-04:00
2024-05-31 17:52:57,501: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,501: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,502: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,503: root: INFO: Current backtesting datetime 2023-06-01 16:00:00-04:00
2024-05-31 17:52:57,498: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:57,504: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:57,505: root: INFO: Current backtesting datetime 2023-06-01 15:59:00-04:00
2024-05-31 17:52:57,505: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:57,505: root: INFO: Current backtesting datetime 2023-06-01 16:00:00-04:00
2024-05-31 17:52:57,505: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:57,507: root: INFO: Current backtesting datetime 2023-06-02 08:30:00-04:00
2024-05-31 17:52:57,507: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:57,508: root: INFO: Current backtesting datetime 2023-06-02 09:30:00-04:00
2024-05-31 17:52:57,508: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:57,508: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,509: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,509: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,510: root: INFO: Current backtesting datetime 2023-06-02 10:00:00-04:00
2024-05-31 17:52:57,510: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,510: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,511: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,512: root: INFO: Current backtesting datetime 2023-06-02 10:30:00-04:00
2024-05-31 17:52:57,512: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,512: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,513: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,514: root: INFO: Current backtesting datetime 2023-06-02 11:00:00-04:00
2024-05-31 17:52:57,514: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,514: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,515: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,516: root: INFO: Current backtesting datetime 2023-06-02 11:30:00-04:00
2024-05-31 17:52:57,516: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,516: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,518: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,519: root: INFO: Current backtesting datetime 2023-06-02 12:00:00-04:00
2024-05-31 17:52:57,519: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,520: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,520: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,521: root: INFO: Current backtesting datetime 2023-06-02 12:30:00-04:00
2024-05-31 17:52:57,521: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,521: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,522: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,522: root: INFO: Current backtesting datetime 2023-06-02 13:00:00-04:00
2024-05-31 17:52:57,523: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,523: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,524: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,524: root: INFO: Current backtesting datetime 2023-06-02 13:30:00-04:00
2024-05-31 17:52:57,524: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,526: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,526: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,527: root: INFO: Current backtesting datetime 2023-06-02 14:00:00-04:00
2024-05-31 17:52:57,527: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,527: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,528: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,528: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:57,529: root: INFO: Current backtesting datetime 2023-06-02 14:30:00-04:00
2024-05-31 17:52:57,529: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,530: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,530: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,531: root: INFO: Current backtesting datetime 2023-06-02 15:00:00-04:00
2024-05-31 17:52:57,531: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,532: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,533: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,533: root: INFO: Current backtesting datetime 2023-06-02 15:30:00-04:00
2024-05-31 17:52:57,534: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,534: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,535: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,535: root: INFO: Current backtesting datetime 2023-06-02 16:00:00-04:00
2024-05-31 17:52:57,536: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:57,537: root: INFO: Current backtesting datetime 2023-06-02 15:59:00-04:00
2024-05-31 17:52:57,537: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:57,537: root: INFO: Current backtesting datetime 2023-06-02 16:00:00-04:00
2024-05-31 17:52:57,537: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:57,539: root: INFO: Current backtesting datetime 2023-06-05 08:30:00-04:00
2024-05-31 17:52:57,539: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:57,540: root: INFO: Current backtesting datetime 2023-06-05 09:30:00-04:00
2024-05-31 17:52:57,540: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:57,540: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,541: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,541: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,541: root: INFO: Current backtesting datetime 2023-06-05 10:00:00-04:00
2024-05-31 17:52:57,542: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,542: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,542: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,543: root: INFO: Current backtesting datetime 2023-06-05 10:30:00-04:00
2024-05-31 17:52:57,543: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,544: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,544: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,546: root: INFO: Current backtesting datetime 2023-06-05 11:00:00-04:00
2024-05-31 17:52:57,546: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,546: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,547: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,547: root: INFO: Current backtesting datetime 2023-06-05 11:30:00-04:00
2024-05-31 17:52:57,548: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,548: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,549: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,549: root: INFO: Current backtesting datetime 2023-06-05 12:00:00-04:00
2024-05-31 17:52:57,550: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,550: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,550: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,551: root: INFO: Current backtesting datetime 2023-06-05 12:30:00-04:00
2024-05-31 17:52:57,552: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,552: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,553: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,554: root: INFO: Current backtesting datetime 2023-06-05 13:00:00-04:00
2024-05-31 17:52:57,555: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,555: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,555: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,556: root: INFO: Current backtesting datetime 2023-06-05 13:30:00-04:00
2024-05-31 17:52:57,556: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,557: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,557: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,558: root: INFO: Current backtesting datetime 2023-06-05 14:00:00-04:00
2024-05-31 17:52:57,559: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,559: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,559: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,561: root: INFO: Current backtesting datetime 2023-06-05 14:30:00-04:00
2024-05-31 17:52:57,561: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,561: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,561: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,562: root: INFO: Current backtesting datetime 2023-06-05 15:00:00-04:00
2024-05-31 17:52:57,562: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,563: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,563: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,564: root: INFO: Current backtesting datetime 2023-06-05 15:30:00-04:00
2024-05-31 17:52:57,564: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,564: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,566: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,566: root: INFO: Current backtesting datetime 2023-06-05 16:00:00-04:00
2024-05-31 17:52:57,567: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:57,567: root: INFO: Current backtesting datetime 2023-06-05 15:59:00-04:00
2024-05-31 17:52:57,568: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:57,568: root: INFO: Current backtesting datetime 2023-06-05 16:00:00-04:00
2024-05-31 17:52:57,568: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:57,569: root: INFO: Current backtesting datetime 2023-06-06 08:30:00-04:00
2024-05-31 17:52:57,569: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:57,570: root: INFO: Current backtesting datetime 2023-06-06 09:30:00-04:00
2024-05-31 17:52:57,570: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:57,571: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,571: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,572: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,573: root: INFO: Current backtesting datetime 2023-06-06 10:00:00-04:00
2024-05-31 17:52:57,574: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,574: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,575: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,575: root: INFO: Current backtesting datetime 2023-06-06 10:30:00-04:00
2024-05-31 17:52:57,576: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,576: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,577: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,577: root: INFO: Current backtesting datetime 2023-06-06 11:00:00-04:00
2024-05-31 17:52:57,578: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,578: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,578: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,579: root: INFO: Current backtesting datetime 2023-06-06 11:30:00-04:00
2024-05-31 17:52:57,580: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,580: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,581: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,582: root: INFO: Current backtesting datetime 2023-06-06 12:00:00-04:00
2024-05-31 17:52:57,582: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,583: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,583: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,583: root: INFO: Current backtesting datetime 2023-06-06 12:30:00-04:00
2024-05-31 17:52:57,584: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,584: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,584: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,585: root: INFO: Current backtesting datetime 2023-06-06 13:00:00-04:00
2024-05-31 17:52:57,585: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,586: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,587: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,588: root: INFO: Current backtesting datetime 2023-06-06 13:30:00-04:00
2024-05-31 17:52:57,588: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,589: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,589: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,590: root: INFO: Current backtesting datetime 2023-06-06 14:00:00-04:00
2024-05-31 17:52:57,590: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,591: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,591: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,592: root: INFO: Current backtesting datetime 2023-06-06 14:30:00-04:00
2024-05-31 17:52:57,592: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,593: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,593: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,594: root: INFO: Current backtesting datetime 2023-06-06 15:00:00-04:00
2024-05-31 17:52:57,594: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,594: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,595: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,596: root: INFO: Current backtesting datetime 2023-06-06 15:30:00-04:00
2024-05-31 17:52:57,597: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,597: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,597: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,598: root: INFO: Current backtesting datetime 2023-06-06 16:00:00-04:00
2024-05-31 17:52:57,598: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:57,599: root: INFO: Current backtesting datetime 2023-06-06 15:59:00-04:00
2024-05-31 17:52:57,600: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:57,600: root: INFO: Current backtesting datetime 2023-06-06 16:00:00-04:00
2024-05-31 17:52:57,600: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:57,601: root: INFO: Current backtesting datetime 2023-06-07 08:30:00-04:00
2024-05-31 17:52:57,601: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:57,602: root: INFO: Current backtesting datetime 2023-06-07 09:30:00-04:00
2024-05-31 17:52:57,602: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:57,602: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,603: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,603: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,604: root: INFO: Current backtesting datetime 2023-06-07 10:00:00-04:00
2024-05-31 17:52:57,604: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,604: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,605: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,606: root: INFO: Current backtesting datetime 2023-06-07 10:30:00-04:00
2024-05-31 17:52:57,606: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,607: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,607: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,608: root: INFO: Current backtesting datetime 2023-06-07 11:00:00-04:00
2024-05-31 17:52:57,609: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,609: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,610: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,611: root: INFO: Current backtesting datetime 2023-06-07 11:30:00-04:00
2024-05-31 17:52:57,611: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,612: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,612: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,613: root: INFO: Current backtesting datetime 2023-06-07 12:00:00-04:00
2024-05-31 17:52:57,613: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,614: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,614: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,615: root: INFO: Current backtesting datetime 2023-06-07 12:30:00-04:00
2024-05-31 17:52:57,615: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,616: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,617: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,618: root: INFO: Current backtesting datetime 2023-06-07 13:00:00-04:00
2024-05-31 17:52:57,618: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,618: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,619: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,619: root: INFO: Current backtesting datetime 2023-06-07 13:30:00-04:00
2024-05-31 17:52:57,620: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,620: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,621: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,622: root: INFO: Current backtesting datetime 2023-06-07 14:00:00-04:00
2024-05-31 17:52:57,622: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,622: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,623: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,623: root: INFO: Current backtesting datetime 2023-06-07 14:30:00-04:00
2024-05-31 17:52:57,624: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,624: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,625: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,625: root: INFO: Current backtesting datetime 2023-06-07 15:00:00-04:00
2024-05-31 17:52:57,625: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,625: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,627: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,628: root: INFO: Current backtesting datetime 2023-06-07 15:30:00-04:00
2024-05-31 17:52:57,628: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,628: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,629: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,630: root: INFO: Current backtesting datetime 2023-06-07 16:00:00-04:00
2024-05-31 17:52:57,630: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:57,632: root: INFO: Current backtesting datetime 2023-06-07 15:59:00-04:00
2024-05-31 17:52:57,632: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:57,632: root: INFO: Current backtesting datetime 2023-06-07 16:00:00-04:00
2024-05-31 17:52:57,633: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:57,633: root: INFO: Current backtesting datetime 2023-06-08 08:30:00-04:00
2024-05-31 17:52:57,633: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:57,634: root: INFO: Current backtesting datetime 2023-06-08 09:30:00-04:00
2024-05-31 17:52:57,634: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:57,635: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,635: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,635: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,637: root: INFO: Current backtesting datetime 2023-06-08 10:00:00-04:00
2024-05-31 17:52:57,637: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,637: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,638: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,639: root: INFO: Current backtesting datetime 2023-06-08 10:30:00-04:00
2024-05-31 17:52:57,639: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,639: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,640: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,640: root: INFO: Current backtesting datetime 2023-06-08 11:00:00-04:00
2024-05-31 17:52:57,641: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,641: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,664: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,666: root: INFO: Current backtesting datetime 2023-06-08 11:30:00-04:00
2024-05-31 17:52:57,666: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,666: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,667: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,668: root: INFO: Current backtesting datetime 2023-06-08 12:00:00-04:00
2024-05-31 17:52:57,668: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,668: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,668: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,669: root: INFO: Current backtesting datetime 2023-06-08 12:30:00-04:00
2024-05-31 17:52:57,670: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,670: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,670: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,671: root: INFO: Current backtesting datetime 2023-06-08 13:00:00-04:00
2024-05-31 17:52:57,672: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,672: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,672: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,673: root: INFO: Current backtesting datetime 2023-06-08 13:30:00-04:00
2024-05-31 17:52:57,674: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,674: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,674: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,675: root: INFO: Current backtesting datetime 2023-06-08 14:00:00-04:00
2024-05-31 17:52:57,676: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,676: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,677: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,678: root: INFO: Current backtesting datetime 2023-06-08 14:30:00-04:00
2024-05-31 17:52:57,678: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,678: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,679: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,680: root: INFO: Current backtesting datetime 2023-06-08 15:00:00-04:00
2024-05-31 17:52:57,680: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,680: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,681: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,681: root: INFO: Current backtesting datetime 2023-06-08 15:30:00-04:00
2024-05-31 17:52:57,682: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,682: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,683: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,683: root: INFO: Current backtesting datetime 2023-06-08 16:00:00-04:00
2024-05-31 17:52:57,684: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:57,685: root: INFO: Current backtesting datetime 2023-06-08 15:59:00-04:00
2024-05-31 17:52:57,685: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:57,685: root: INFO: Current backtesting datetime 2023-06-08 16:00:00-04:00
2024-05-31 17:52:57,685: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:57,687: root: INFO: Current backtesting datetime 2023-06-09 08:30:00-04:00
2024-05-31 17:52:57,687: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:57,688: root: INFO: Current backtesting datetime 2023-06-09 09:30:00-04:00
2024-05-31 17:52:57,688: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:57,688: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,689: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,691: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,691: root: INFO: Current backtesting datetime 2023-06-09 10:00:00-04:00
2024-05-31 17:52:57,692: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,692: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,693: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,693: root: INFO: Current backtesting datetime 2023-06-09 10:30:00-04:00
2024-05-31 17:52:57,694: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,694: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,695: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,696: root: INFO: Current backtesting datetime 2023-06-09 11:00:00-04:00
2024-05-31 17:52:57,696: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,696: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,697: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,698: root: INFO: Current backtesting datetime 2023-06-09 11:30:00-04:00
2024-05-31 17:52:57,699: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,699: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,700: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,700: root: INFO: Current backtesting datetime 2023-06-09 12:00:00-04:00
2024-05-31 17:52:57,701: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,701: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,702: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,702: root: INFO: Current backtesting datetime 2023-06-09 12:30:00-04:00
2024-05-31 17:52:57,702: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,702: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,703: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,704: root: INFO: Current backtesting datetime 2023-06-09 13:00:00-04:00
2024-05-31 17:52:57,704: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,704: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,705: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,706: root: INFO: Current backtesting datetime 2023-06-09 13:30:00-04:00
2024-05-31 17:52:57,706: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,707: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,707: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,708: root: INFO: Current backtesting datetime 2023-06-09 14:00:00-04:00
2024-05-31 17:52:57,708: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,709: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,709: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,710: root: INFO: Current backtesting datetime 2023-06-09 14:30:00-04:00
2024-05-31 17:52:57,710: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,710: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,711: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,711: root: INFO: Current backtesting datetime 2023-06-09 15:00:00-04:00
2024-05-31 17:52:57,712: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,712: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,713: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,714: root: INFO: Current backtesting datetime 2023-06-09 15:30:00-04:00
2024-05-31 17:52:57,714: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,715: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,716: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,716: root: INFO: Current backtesting datetime 2023-06-09 16:00:00-04:00
2024-05-31 17:52:57,717: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:57,718: root: INFO: Current backtesting datetime 2023-06-09 15:59:00-04:00
2024-05-31 17:52:57,718: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:57,719: root: INFO: Current backtesting datetime 2023-06-09 16:00:00-04:00
2024-05-31 17:52:57,719: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:57,720: root: INFO: Current backtesting datetime 2023-06-12 08:30:00-04:00
2024-05-31 17:52:57,720: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:57,721: root: INFO: Current backtesting datetime 2023-06-12 09:30:00-04:00
2024-05-31 17:52:57,721: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:57,722: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,722: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,723: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,723: root: INFO: Current backtesting datetime 2023-06-12 10:00:00-04:00
2024-05-31 17:52:57,723: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,723: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,724: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,725: root: INFO: Current backtesting datetime 2023-06-12 10:30:00-04:00
2024-05-31 17:52:57,726: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,726: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,727: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,728: root: INFO: Current backtesting datetime 2023-06-12 11:00:00-04:00
2024-05-31 17:52:57,728: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,728: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,729: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,730: root: INFO: Current backtesting datetime 2023-06-12 11:30:00-04:00
2024-05-31 17:52:57,730: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,730: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,731: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,732: root: INFO: Current backtesting datetime 2023-06-12 12:00:00-04:00
2024-05-31 17:52:57,732: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,733: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,733: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,734: root: INFO: Current backtesting datetime 2023-06-12 12:30:00-04:00
2024-05-31 17:52:57,734: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,735: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,735: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,737: root: INFO: Current backtesting datetime 2023-06-12 13:00:00-04:00
2024-05-31 17:52:57,737: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,737: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,738: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,739: root: INFO: Current backtesting datetime 2023-06-12 13:30:00-04:00
2024-05-31 17:52:57,740: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,740: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,740: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,741: root: INFO: Current backtesting datetime 2023-06-12 14:00:00-04:00
2024-05-31 17:52:57,742: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,742: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,742: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,743: root: INFO: Current backtesting datetime 2023-06-12 14:30:00-04:00
2024-05-31 17:52:57,743: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,743: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,744: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,744: root: INFO: Current backtesting datetime 2023-06-12 15:00:00-04:00
2024-05-31 17:52:57,746: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,746: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,747: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,747: root: INFO: Current backtesting datetime 2023-06-12 15:30:00-04:00
2024-05-31 17:52:57,748: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,748: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,748: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,749: root: INFO: Current backtesting datetime 2023-06-12 16:00:00-04:00
2024-05-31 17:52:57,750: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:57,751: root: INFO: Current backtesting datetime 2023-06-12 15:59:00-04:00
2024-05-31 17:52:57,751: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:57,752: root: INFO: Current backtesting datetime 2023-06-12 16:00:00-04:00
2024-05-31 17:52:57,752: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:57,752: root: INFO: Current backtesting datetime 2023-06-13 08:30:00-04:00
2024-05-31 17:52:57,753: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:57,754: root: INFO: Current backtesting datetime 2023-06-13 09:30:00-04:00
2024-05-31 17:52:57,754: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:57,755: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,755: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,756: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,756: root: INFO: Current backtesting datetime 2023-06-13 10:00:00-04:00
2024-05-31 17:52:57,757: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,757: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,758: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,758: root: INFO: Current backtesting datetime 2023-06-13 10:30:00-04:00
2024-05-31 17:52:57,759: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,759: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,759: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,760: root: INFO: Current backtesting datetime 2023-06-13 11:00:00-04:00
2024-05-31 17:52:57,761: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,761: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,761: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,762: root: INFO: Current backtesting datetime 2023-06-13 11:30:00-04:00
2024-05-31 17:52:57,762: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,762: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,763: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,764: root: INFO: Current backtesting datetime 2023-06-13 12:00:00-04:00
2024-05-31 17:52:57,764: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,764: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,764: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,766: root: INFO: Current backtesting datetime 2023-06-13 12:30:00-04:00
2024-05-31 17:52:57,767: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,767: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,767: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,768: root: INFO: Current backtesting datetime 2023-06-13 13:00:00-04:00
2024-05-31 17:52:57,769: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,769: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,770: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,770: root: INFO: Current backtesting datetime 2023-06-13 13:30:00-04:00
2024-05-31 17:52:57,771: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,771: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,771: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,772: root: INFO: Current backtesting datetime 2023-06-13 14:00:00-04:00
2024-05-31 17:52:57,773: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,773: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,774: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,775: root: INFO: Current backtesting datetime 2023-06-13 14:30:00-04:00
2024-05-31 17:52:57,775: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,775: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,776: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,777: root: INFO: Current backtesting datetime 2023-06-13 15:00:00-04:00
2024-05-31 17:52:57,778: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,778: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,779: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,779: root: INFO: Current backtesting datetime 2023-06-13 15:30:00-04:00
2024-05-31 17:52:57,780: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,780: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,781: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,782: root: INFO: Current backtesting datetime 2023-06-13 16:00:00-04:00
2024-05-31 17:52:57,783: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:57,785: root: INFO: Current backtesting datetime 2023-06-13 15:59:00-04:00
2024-05-31 17:52:57,782: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:57,785: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:57,785: root: INFO: Current backtesting datetime 2023-06-13 16:00:00-04:00
2024-05-31 17:52:57,785: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:57,787: root: INFO: Current backtesting datetime 2023-06-14 08:30:00-04:00
2024-05-31 17:52:57,788: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:57,788: root: INFO: Current backtesting datetime 2023-06-14 09:30:00-04:00
2024-05-31 17:52:57,789: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:57,789: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,790: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,790: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,791: root: INFO: Current backtesting datetime 2023-06-14 10:00:00-04:00
2024-05-31 17:52:57,791: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,792: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,792: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,793: root: INFO: Current backtesting datetime 2023-06-14 10:30:00-04:00
2024-05-31 17:52:57,793: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,793: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,794: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,794: root: INFO: Current backtesting datetime 2023-06-14 11:00:00-04:00
2024-05-31 17:52:57,795: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,795: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,796: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,797: root: INFO: Current backtesting datetime 2023-06-14 11:30:00-04:00
2024-05-31 17:52:57,797: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,798: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,798: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:57,799: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,800: root: INFO: Current backtesting datetime 2023-06-14 12:00:00-04:00
2024-05-31 17:52:57,800: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,800: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,801: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,802: root: INFO: Current backtesting datetime 2023-06-14 12:30:00-04:00
2024-05-31 17:52:57,802: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,802: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,803: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,803: root: INFO: Current backtesting datetime 2023-06-14 13:00:00-04:00
2024-05-31 17:52:57,803: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,804: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,805: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,805: root: INFO: Current backtesting datetime 2023-06-14 13:30:00-04:00
2024-05-31 17:52:57,805: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,806: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,807: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,807: root: INFO: Current backtesting datetime 2023-06-14 14:00:00-04:00
2024-05-31 17:52:57,808: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,808: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,809: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,810: root: INFO: Current backtesting datetime 2023-06-14 14:30:00-04:00
2024-05-31 17:52:57,810: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,810: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,811: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,812: root: INFO: Current backtesting datetime 2023-06-14 15:00:00-04:00
2024-05-31 17:52:57,812: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,812: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,813: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,813: root: INFO: Current backtesting datetime 2023-06-14 15:30:00-04:00
2024-05-31 17:52:57,813: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,815: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,815: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,816: root: INFO: Current backtesting datetime 2023-06-14 16:00:00-04:00
2024-05-31 17:52:57,817: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:57,817: root: INFO: Current backtesting datetime 2023-06-14 15:59:00-04:00
2024-05-31 17:52:57,818: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:57,818: root: INFO: Current backtesting datetime 2023-06-14 16:00:00-04:00
2024-05-31 17:52:57,818: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:57,819: root: INFO: Current backtesting datetime 2023-06-15 08:30:00-04:00
2024-05-31 17:52:57,819: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:57,820: root: INFO: Current backtesting datetime 2023-06-15 09:30:00-04:00
2024-05-31 17:52:57,820: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:57,821: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,821: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,822: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,822: root: INFO: Current backtesting datetime 2023-06-15 10:00:00-04:00
2024-05-31 17:52:57,823: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,823: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,824: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,825: root: INFO: Current backtesting datetime 2023-06-15 10:30:00-04:00
2024-05-31 17:52:57,826: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,826: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,826: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,827: root: INFO: Current backtesting datetime 2023-06-15 11:00:00-04:00
2024-05-31 17:52:57,827: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,827: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,827: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,828: root: INFO: Current backtesting datetime 2023-06-15 11:30:00-04:00
2024-05-31 17:52:57,829: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,830: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,830: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,831: root: INFO: Current backtesting datetime 2023-06-15 12:00:00-04:00
2024-05-31 17:52:57,832: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,832: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,832: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,833: root: INFO: Current backtesting datetime 2023-06-15 12:30:00-04:00
2024-05-31 17:52:57,834: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,834: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,834: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,835: root: INFO: Current backtesting datetime 2023-06-15 13:00:00-04:00
2024-05-31 17:52:57,836: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,837: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,837: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,837: root: INFO: Current backtesting datetime 2023-06-15 13:30:00-04:00
2024-05-31 17:52:57,838: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,838: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,839: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,839: root: INFO: Current backtesting datetime 2023-06-15 14:00:00-04:00
2024-05-31 17:52:57,840: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,840: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,841: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,841: root: INFO: Current backtesting datetime 2023-06-15 14:30:00-04:00
2024-05-31 17:52:57,842: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,842: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,843: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,844: root: INFO: Current backtesting datetime 2023-06-15 15:00:00-04:00
2024-05-31 17:52:57,845: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,845: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,846: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,847: root: INFO: Current backtesting datetime 2023-06-15 15:30:00-04:00
2024-05-31 17:52:57,847: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,847: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,848: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,848: root: INFO: Current backtesting datetime 2023-06-15 16:00:00-04:00
2024-05-31 17:52:57,849: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:57,850: root: INFO: Current backtesting datetime 2023-06-15 15:59:00-04:00
2024-05-31 17:52:57,851: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:57,851: root: INFO: Current backtesting datetime 2023-06-15 16:00:00-04:00
2024-05-31 17:52:57,851: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:57,852: root: INFO: Current backtesting datetime 2023-06-16 08:30:00-04:00
2024-05-31 17:52:57,852: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:57,853: root: INFO: Current backtesting datetime 2023-06-16 09:30:00-04:00
2024-05-31 17:52:57,853: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:57,854: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,854: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,854: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,856: root: INFO: Current backtesting datetime 2023-06-16 10:00:00-04:00
2024-05-31 17:52:57,856: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,856: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,857: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,858: root: INFO: Current backtesting datetime 2023-06-16 10:30:00-04:00
2024-05-31 17:52:57,858: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,859: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,860: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,860: root: INFO: Current backtesting datetime 2023-06-16 11:00:00-04:00
2024-05-31 17:52:57,861: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,861: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,862: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,863: root: INFO: Current backtesting datetime 2023-06-16 11:30:00-04:00
2024-05-31 17:52:57,864: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,864: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,864: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,866: root: INFO: Current backtesting datetime 2023-06-16 12:00:00-04:00
2024-05-31 17:52:57,867: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,867: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,867: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,868: root: INFO: Current backtesting datetime 2023-06-16 12:30:00-04:00
2024-05-31 17:52:57,869: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,869: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,870: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,870: root: INFO: Current backtesting datetime 2023-06-16 13:00:00-04:00
2024-05-31 17:52:57,871: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,871: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,872: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,873: root: INFO: Current backtesting datetime 2023-06-16 13:30:00-04:00
2024-05-31 17:52:57,873: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,874: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,874: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,875: root: INFO: Current backtesting datetime 2023-06-16 14:00:00-04:00
2024-05-31 17:52:57,875: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,875: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,875: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,876: root: INFO: Current backtesting datetime 2023-06-16 14:30:00-04:00
2024-05-31 17:52:57,877: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,877: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,878: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,879: root: INFO: Current backtesting datetime 2023-06-16 15:00:00-04:00
2024-05-31 17:52:57,879: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,879: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,880: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,881: root: INFO: Current backtesting datetime 2023-06-16 15:30:00-04:00
2024-05-31 17:52:57,881: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,882: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,882: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,883: root: INFO: Current backtesting datetime 2023-06-16 16:00:00-04:00
2024-05-31 17:52:57,883: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:57,885: root: INFO: Current backtesting datetime 2023-06-16 15:59:00-04:00
2024-05-31 17:52:57,885: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:57,886: root: INFO: Current backtesting datetime 2023-06-16 16:00:00-04:00
2024-05-31 17:52:57,886: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:57,887: root: INFO: Current backtesting datetime 2023-06-20 08:30:00-04:00
2024-05-31 17:52:57,888: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:57,888: root: INFO: Current backtesting datetime 2023-06-20 09:30:00-04:00
2024-05-31 17:52:57,888: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:57,889: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,889: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,889: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,890: root: INFO: Current backtesting datetime 2023-06-20 10:00:00-04:00
2024-05-31 17:52:57,890: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,891: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,892: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,893: root: INFO: Current backtesting datetime 2023-06-20 10:30:00-04:00
2024-05-31 17:52:57,893: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,894: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,894: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,895: root: INFO: Current backtesting datetime 2023-06-20 11:00:00-04:00
2024-05-31 17:52:57,895: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,896: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,897: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,897: root: INFO: Current backtesting datetime 2023-06-20 11:30:00-04:00
2024-05-31 17:52:57,898: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,898: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,898: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,899: root: INFO: Current backtesting datetime 2023-06-20 12:00:00-04:00
2024-05-31 17:52:57,900: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,900: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,900: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,900: root: INFO: Current backtesting datetime 2023-06-20 12:30:00-04:00
2024-05-31 17:52:57,902: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,902: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,903: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,903: root: INFO: Current backtesting datetime 2023-06-20 13:00:00-04:00
2024-05-31 17:52:57,904: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,904: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,904: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,905: root: INFO: Current backtesting datetime 2023-06-20 13:30:00-04:00
2024-05-31 17:52:57,905: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,906: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,907: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,908: root: INFO: Current backtesting datetime 2023-06-20 14:00:00-04:00
2024-05-31 17:52:57,909: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,909: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,910: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,910: root: INFO: Current backtesting datetime 2023-06-20 14:30:00-04:00
2024-05-31 17:52:57,911: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,911: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,912: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,932: root: INFO: Current backtesting datetime 2023-06-20 15:00:00-04:00
2024-05-31 17:52:57,934: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,934: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,935: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,935: root: INFO: Current backtesting datetime 2023-06-20 15:30:00-04:00
2024-05-31 17:52:57,936: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,936: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,937: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,937: root: INFO: Current backtesting datetime 2023-06-20 16:00:00-04:00
2024-05-31 17:52:57,937: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:57,938: root: INFO: Current backtesting datetime 2023-06-20 15:59:00-04:00
2024-05-31 17:52:57,939: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:57,939: root: INFO: Current backtesting datetime 2023-06-20 16:00:00-04:00
2024-05-31 17:52:57,939: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:57,941: root: INFO: Current backtesting datetime 2023-06-21 08:30:00-04:00
2024-05-31 17:52:57,941: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:57,942: root: INFO: Current backtesting datetime 2023-06-21 09:30:00-04:00
2024-05-31 17:52:57,942: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:57,943: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,943: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,944: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,944: root: INFO: Current backtesting datetime 2023-06-21 10:00:00-04:00
2024-05-31 17:52:57,945: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,945: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,945: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,947: root: INFO: Current backtesting datetime 2023-06-21 10:30:00-04:00
2024-05-31 17:52:57,948: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,948: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,949: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,950: root: INFO: Current backtesting datetime 2023-06-21 11:00:00-04:00
2024-05-31 17:52:57,951: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,951: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,951: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,952: root: INFO: Current backtesting datetime 2023-06-21 11:30:00-04:00
2024-05-31 17:52:57,952: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,952: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,953: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,954: root: INFO: Current backtesting datetime 2023-06-21 12:00:00-04:00
2024-05-31 17:52:57,954: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,954: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,955: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,955: root: INFO: Current backtesting datetime 2023-06-21 12:30:00-04:00
2024-05-31 17:52:57,957: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,957: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,957: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,958: root: INFO: Current backtesting datetime 2023-06-21 13:00:00-04:00
2024-05-31 17:52:57,958: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,958: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,959: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,959: root: INFO: Current backtesting datetime 2023-06-21 13:30:00-04:00
2024-05-31 17:52:57,960: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,960: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,961: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,962: root: INFO: Current backtesting datetime 2023-06-21 14:00:00-04:00
2024-05-31 17:52:57,962: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,963: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,963: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,964: root: INFO: Current backtesting datetime 2023-06-21 14:30:00-04:00
2024-05-31 17:52:57,964: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,965: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,965: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,966: root: INFO: Current backtesting datetime 2023-06-21 15:00:00-04:00
2024-05-31 17:52:57,966: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,966: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,967: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,967: root: INFO: Current backtesting datetime 2023-06-21 15:30:00-04:00
2024-05-31 17:52:57,968: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,968: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,969: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,969: root: INFO: Current backtesting datetime 2023-06-21 16:00:00-04:00
2024-05-31 17:52:57,970: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:57,970: root: INFO: Current backtesting datetime 2023-06-21 15:59:00-04:00
2024-05-31 17:52:57,972: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:57,972: root: INFO: Current backtesting datetime 2023-06-21 16:00:00-04:00
2024-05-31 17:52:57,972: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:57,973: root: INFO: Current backtesting datetime 2023-06-22 08:30:00-04:00
2024-05-31 17:52:57,973: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:57,974: root: INFO: Current backtesting datetime 2023-06-22 09:30:00-04:00
2024-05-31 17:52:57,974: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:57,975: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,975: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,976: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,977: root: INFO: Current backtesting datetime 2023-06-22 10:00:00-04:00
2024-05-31 17:52:57,977: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,977: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,977: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,978: root: INFO: Current backtesting datetime 2023-06-22 10:30:00-04:00
2024-05-31 17:52:57,978: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,979: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,979: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,980: root: INFO: Current backtesting datetime 2023-06-22 11:00:00-04:00
2024-05-31 17:52:57,980: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,981: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,981: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,982: root: INFO: Current backtesting datetime 2023-06-22 11:30:00-04:00
2024-05-31 17:52:57,983: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,983: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,984: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,984: root: INFO: Current backtesting datetime 2023-06-22 12:00:00-04:00
2024-05-31 17:52:57,985: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,985: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,986: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,986: root: INFO: Current backtesting datetime 2023-06-22 12:30:00-04:00
2024-05-31 17:52:57,986: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,987: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,987: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,987: root: INFO: Current backtesting datetime 2023-06-22 13:00:00-04:00
2024-05-31 17:52:57,987: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,989: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,990: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,990: root: INFO: Current backtesting datetime 2023-06-22 13:30:00-04:00
2024-05-31 17:52:57,991: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,991: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,991: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,992: root: INFO: Current backtesting datetime 2023-06-22 14:00:00-04:00
2024-05-31 17:52:57,992: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,992: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,993: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,994: root: INFO: Current backtesting datetime 2023-06-22 14:30:00-04:00
2024-05-31 17:52:57,994: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,994: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,995: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,995: root: INFO: Current backtesting datetime 2023-06-22 15:00:00-04:00
2024-05-31 17:52:57,997: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,997: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,998: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:57,999: root: INFO: Current backtesting datetime 2023-06-22 15:30:00-04:00
2024-05-31 17:52:57,999: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,999: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:57[0m
2024-05-31 17:52:57,999: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,000: root: INFO: Current backtesting datetime 2023-06-22 16:00:00-04:00
2024-05-31 17:52:58,000: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:58,002: root: INFO: Current backtesting datetime 2023-06-22 15:59:00-04:00
2024-05-31 17:52:58,002: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:58,002: root: INFO: Current backtesting datetime 2023-06-22 16:00:00-04:00
2024-05-31 17:52:58,002: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:58,003: root: INFO: Current backtesting datetime 2023-06-23 08:30:00-04:00
2024-05-31 17:52:58,003: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:58,004: root: INFO: Current backtesting datetime 2023-06-23 09:30:00-04:00
2024-05-31 17:52:58,004: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:58,005: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,005: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,005: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,007: root: INFO: Current backtesting datetime 2023-06-23 10:00:00-04:00
2024-05-31 17:52:58,007: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,007: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,008: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,009: root: INFO: Current backtesting datetime 2023-06-23 10:30:00-04:00
2024-05-31 17:52:58,009: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,009: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,009: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,010: root: INFO: Current backtesting datetime 2023-06-23 11:00:00-04:00
2024-05-31 17:52:58,010: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,011: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,011: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,012: root: INFO: Current backtesting datetime 2023-06-23 11:30:00-04:00
2024-05-31 17:52:58,012: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,012: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,014: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,014: root: INFO: Current backtesting datetime 2023-06-23 12:00:00-04:00
2024-05-31 17:52:58,015: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,015: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,015: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,016: root: INFO: Current backtesting datetime 2023-06-23 12:30:00-04:00
2024-05-31 17:52:58,016: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,017: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,017: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,018: root: INFO: Current backtesting datetime 2023-06-23 13:00:00-04:00
2024-05-31 17:52:58,018: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,018: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,020: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,020: root: INFO: Current backtesting datetime 2023-06-23 13:30:00-04:00
2024-05-31 17:52:58,021: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,021: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,021: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,022: root: INFO: Current backtesting datetime 2023-06-23 14:00:00-04:00
2024-05-31 17:52:58,022: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,023: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,023: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,024: root: INFO: Current backtesting datetime 2023-06-23 14:30:00-04:00
2024-05-31 17:52:58,024: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,024: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,025: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,027: root: INFO: Current backtesting datetime 2023-06-23 15:00:00-04:00
2024-05-31 17:52:58,027: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,027: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,028: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,028: root: INFO: Current backtesting datetime 2023-06-23 15:30:00-04:00
2024-05-31 17:52:58,029: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,029: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,030: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,030: root: INFO: Current backtesting datetime 2023-06-23 16:00:00-04:00
2024-05-31 17:52:58,030: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:58,031: root: INFO: Current backtesting datetime 2023-06-23 15:59:00-04:00
2024-05-31 17:52:58,031: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:58,033: root: INFO: Current backtesting datetime 2023-06-23 16:00:00-04:00
2024-05-31 17:52:58,033: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:58,033: root: INFO: Current backtesting datetime 2023-06-26 08:30:00-04:00
2024-05-31 17:52:58,034: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:58,034: root: INFO: Current backtesting datetime 2023-06-26 09:30:00-04:00
2024-05-31 17:52:58,034: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:58,035: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,036: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,036: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,037: root: INFO: Current backtesting datetime 2023-06-26 10:00:00-04:00
2024-05-31 17:52:58,037: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,037: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,038: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,038: root: INFO: Current backtesting datetime 2023-06-26 10:30:00-04:00
2024-05-31 17:52:58,038: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,040: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,040: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,041: root: INFO: Current backtesting datetime 2023-06-26 11:00:00-04:00
2024-05-31 17:52:58,041: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,041: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,042: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,043: root: INFO: Current backtesting datetime 2023-06-26 11:30:00-04:00
2024-05-31 17:52:58,043: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,043: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,043: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,044: root: INFO: Current backtesting datetime 2023-06-26 12:00:00-04:00
2024-05-31 17:52:58,045: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,045: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,045: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,047: root: INFO: Current backtesting datetime 2023-06-26 12:30:00-04:00
2024-05-31 17:52:58,047: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,047: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,048: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,049: root: INFO: Current backtesting datetime 2023-06-26 13:00:00-04:00
2024-05-31 17:52:58,049: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,049: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,050: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,054: root: INFO: Current backtesting datetime 2023-06-26 13:30:00-04:00
2024-05-31 17:52:58,049: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:58,054: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,055: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,055: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,056: root: INFO: Current backtesting datetime 2023-06-26 14:00:00-04:00
2024-05-31 17:52:58,056: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,057: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,057: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,057: root: INFO: Current backtesting datetime 2023-06-26 14:30:00-04:00
2024-05-31 17:52:58,058: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,059: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,059: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,061: root: INFO: Current backtesting datetime 2023-06-26 15:00:00-04:00
2024-05-31 17:52:58,061: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,062: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,062: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,063: root: INFO: Current backtesting datetime 2023-06-26 15:30:00-04:00
2024-05-31 17:52:58,063: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,063: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,064: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,065: root: INFO: Current backtesting datetime 2023-06-26 16:00:00-04:00
2024-05-31 17:52:58,065: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:58,067: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:58,068: root: INFO: Current backtesting datetime 2023-06-26 15:59:00-04:00
2024-05-31 17:52:58,069: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:58,069: root: INFO: Current backtesting datetime 2023-06-26 16:00:00-04:00
2024-05-31 17:52:58,069: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:58,070: root: INFO: Current backtesting datetime 2023-06-27 08:30:00-04:00
2024-05-31 17:52:58,070: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:58,071: root: INFO: Current backtesting datetime 2023-06-27 09:30:00-04:00
2024-05-31 17:52:58,071: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:58,071: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,072: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,072: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,074: root: INFO: Current backtesting datetime 2023-06-27 10:00:00-04:00
2024-05-31 17:52:58,074: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,074: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,075: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,075: root: INFO: Current backtesting datetime 2023-06-27 10:30:00-04:00
2024-05-31 17:52:58,076: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,076: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,077: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,077: root: INFO: Current backtesting datetime 2023-06-27 11:00:00-04:00
2024-05-31 17:52:58,077: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,077: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,078: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,079: root: INFO: Current backtesting datetime 2023-06-27 11:30:00-04:00
2024-05-31 17:52:58,079: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,079: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,081: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,081: root: INFO: Current backtesting datetime 2023-06-27 12:00:00-04:00
2024-05-31 17:52:58,082: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,082: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,082: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,083: root: INFO: Current backtesting datetime 2023-06-27 12:30:00-04:00
2024-05-31 17:52:58,083: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,083: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,084: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,085: root: INFO: Current backtesting datetime 2023-06-27 13:00:00-04:00
2024-05-31 17:52:58,085: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,085: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,087: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,087: root: INFO: Current backtesting datetime 2023-06-27 13:30:00-04:00
2024-05-31 17:52:58,088: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,088: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,089: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,089: root: INFO: Current backtesting datetime 2023-06-27 14:00:00-04:00
2024-05-31 17:52:58,090: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,090: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,091: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,091: root: INFO: Current backtesting datetime 2023-06-27 14:30:00-04:00
2024-05-31 17:52:58,091: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,091: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,092: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,092: root: INFO: Current backtesting datetime 2023-06-27 15:00:00-04:00
2024-05-31 17:52:58,094: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,094: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,095: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,095: root: INFO: Current backtesting datetime 2023-06-27 15:30:00-04:00
2024-05-31 17:52:58,095: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,096: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,096: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,097: root: INFO: Current backtesting datetime 2023-06-27 16:00:00-04:00
2024-05-31 17:52:58,097: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:58,098: root: INFO: Current backtesting datetime 2023-06-27 15:59:00-04:00
2024-05-31 17:52:58,099: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:58,099: root: INFO: Current backtesting datetime 2023-06-27 16:00:00-04:00
2024-05-31 17:52:58,099: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:58,101: root: INFO: Current backtesting datetime 2023-06-28 08:30:00-04:00
2024-05-31 17:52:58,101: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:58,102: root: INFO: Current backtesting datetime 2023-06-28 09:30:00-04:00
2024-05-31 17:52:58,102: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:58,103: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,103: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,103: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,104: root: INFO: Current backtesting datetime 2023-06-28 10:00:00-04:00
2024-05-31 17:52:58,104: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,104: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,105: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,105: root: INFO: Current backtesting datetime 2023-06-28 10:30:00-04:00
2024-05-31 17:52:58,105: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,107: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,107: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,108: root: INFO: Current backtesting datetime 2023-06-28 11:00:00-04:00
2024-05-31 17:52:58,108: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,109: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,109: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,110: root: INFO: Current backtesting datetime 2023-06-28 11:30:00-04:00
2024-05-31 17:52:58,110: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,110: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,111: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,111: root: INFO: Current backtesting datetime 2023-06-28 12:00:00-04:00
2024-05-31 17:52:58,112: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,112: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,112: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,113: root: INFO: Current backtesting datetime 2023-06-28 12:30:00-04:00
2024-05-31 17:52:58,113: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,114: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,115: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,116: root: INFO: Current backtesting datetime 2023-06-28 13:00:00-04:00
2024-05-31 17:52:58,116: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,116: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,117: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,117: root: INFO: Current backtesting datetime 2023-06-28 13:30:00-04:00
2024-05-31 17:52:58,118: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,118: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,118: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,119: root: INFO: Current backtesting datetime 2023-06-28 14:00:00-04:00
2024-05-31 17:52:58,119: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,120: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,120: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,122: root: INFO: Current backtesting datetime 2023-06-28 14:30:00-04:00
2024-05-31 17:52:58,122: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,122: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,123: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,123: root: INFO: Current backtesting datetime 2023-06-28 15:00:00-04:00
2024-05-31 17:52:58,124: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,124: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,125: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,125: root: INFO: Current backtesting datetime 2023-06-28 15:30:00-04:00
2024-05-31 17:52:58,125: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,125: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,127: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,127: root: INFO: Current backtesting datetime 2023-06-28 16:00:00-04:00
2024-05-31 17:52:58,128: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:58,129: root: INFO: Current backtesting datetime 2023-06-28 15:59:00-04:00
2024-05-31 17:52:58,130: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:58,130: root: INFO: Current backtesting datetime 2023-06-28 16:00:00-04:00
2024-05-31 17:52:58,130: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:58,131: root: INFO: Current backtesting datetime 2023-06-29 08:30:00-04:00
2024-05-31 17:52:58,131: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:58,132: root: INFO: Current backtesting datetime 2023-06-29 09:30:00-04:00
2024-05-31 17:52:58,132: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:58,133: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,133: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,133: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,134: root: INFO: Current backtesting datetime 2023-06-29 10:00:00-04:00
2024-05-31 17:52:58,135: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,136: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,136: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,137: root: INFO: Current backtesting datetime 2023-06-29 10:30:00-04:00
2024-05-31 17:52:58,137: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,137: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,138: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,139: root: INFO: Current backtesting datetime 2023-06-29 11:00:00-04:00
2024-05-31 17:52:58,139: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,139: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,140: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,140: root: INFO: Current backtesting datetime 2023-06-29 11:30:00-04:00
2024-05-31 17:52:58,140: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,140: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,141: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,142: root: INFO: Current backtesting datetime 2023-06-29 12:00:00-04:00
2024-05-31 17:52:58,143: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,143: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,143: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,144: root: INFO: Current backtesting datetime 2023-06-29 12:30:00-04:00
2024-05-31 17:52:58,144: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,144: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,146: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,147: root: INFO: Current backtesting datetime 2023-06-29 13:00:00-04:00
2024-05-31 17:52:58,147: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,147: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,148: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,149: root: INFO: Current backtesting datetime 2023-06-29 13:30:00-04:00
2024-05-31 17:52:58,150: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,150: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,151: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,152: root: INFO: Current backtesting datetime 2023-06-29 14:00:00-04:00
2024-05-31 17:52:58,153: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,153: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,153: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,154: root: INFO: Current backtesting datetime 2023-06-29 14:30:00-04:00
2024-05-31 17:52:58,154: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,155: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,155: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,156: root: INFO: Current backtesting datetime 2023-06-29 15:00:00-04:00
2024-05-31 17:52:58,157: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,157: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,158: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,158: root: INFO: Current backtesting datetime 2023-06-29 15:30:00-04:00
2024-05-31 17:52:58,159: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,159: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,159: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,160: root: INFO: Current backtesting datetime 2023-06-29 16:00:00-04:00
2024-05-31 17:52:58,160: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:52:58,161: root: INFO: Current backtesting datetime 2023-06-29 15:59:00-04:00
2024-05-31 17:52:58,161: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:58,162: root: INFO: Current backtesting datetime 2023-06-29 16:00:00-04:00
2024-05-31 17:52:58,162: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:58,163: root: INFO: Current backtesting datetime 2023-06-30 08:30:00-04:00
2024-05-31 17:52:58,163: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:52:58,164: root: INFO: Current backtesting datetime 2023-06-30 09:30:00-04:00
2024-05-31 17:52:58,164: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:52:58,165: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,165: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:52:58[0m
2024-05-31 17:52:58,166: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:52:58,167: root: INFO: Current backtesting datetime 2023-06-30 10:00:00-04:00
2024-05-31 17:52:58,167: root: INFO: Current backtesting datetime 2023-06-30 15:59:00-04:00
2024-05-31 17:52:58,168: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:52:58,168: root: INFO: Current backtesting datetime 2023-06-30 16:00:00-04:00
2024-05-31 17:52:58,168: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:52:58,168: asyncio: INFO: [MLTrader] Executing the on_strategy_end lifecycle method
2024-05-31 17:52:58,315: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:58,332: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:58,600: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:58,628: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:58,786: root: INFO: Backtesting finished
2024-05-31 17:52:58,889: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:58,909: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:59,158: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:59,178: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:59,425: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:59,442: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:59,691: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:59,710: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:52:59,957: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:52:59,973: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:53:00,226: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:53:00,253: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:53:00,505: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:53:00,533: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:53:00,790: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:53:00,817: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:53:01,073: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:53:01,099: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:53:01,355: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:53:01,386: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:53:01,636: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:53:01,662: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:53:01,936: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:53:01,959: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:53:02,228: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:53:02,256: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:53:02,511: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:53:02,536: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:53:02,601: backtest_stats: INFO: Backtest took 0:00:08.124069 for a speed of 0.000
2024-05-31 17:53:02,945: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:53:03,002: alpaca.trading.stream: INFO: starting trading websocket connection
