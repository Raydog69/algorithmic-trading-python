2024-05-31 17:21:31,340: asyncio: INFO: [MLTrader] Executing the initialize lifecycle method
2024-05-31 17:21:31,411: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:21:31,485: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:21:31,846: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:21:32,007: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:21:32,034: root: INFO: Current backtesting datetime 2023-05-11 10:00:00-04:00
2024-05-31 17:21:32,035: root: INFO: Current backtesting datetime 2023-05-11 11:00:00-04:00
2024-05-31 17:21:32,035: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:32,035: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:32[0m
2024-05-31 17:21:32,036: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:32,282: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:21:32,297: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:21:32,497: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:32,580: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:21:32,623: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:21:32,635: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:32[0m
2024-05-31 17:21:32,637: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:32,638: root: INFO: Current backtesting datetime 2023-05-11 11:30:00-04:00
2024-05-31 17:21:32,638: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:32[0m
2024-05-31 17:21:32,639: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:32,640: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:32,795: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:32[0m
2024-05-31 17:21:32,796: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:32,797: root: INFO: Current backtesting datetime 2023-05-11 12:00:00-04:00
2024-05-31 17:21:32,797: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:32[0m
2024-05-31 17:21:32,799: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:32,799: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:32,894: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:21:32,949: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:32[0m
2024-05-31 17:21:32,950: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:21:32,951: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:32,952: root: INFO: Current backtesting datetime 2023-05-11 12:30:00-04:00
2024-05-31 17:21:32,953: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:32[0m
2024-05-31 17:21:32,953: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:32,955: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,119: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,120: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,120: root: INFO: Current backtesting datetime 2023-05-11 13:00:00-04:00
2024-05-31 17:21:33,121: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,121: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,122: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,218: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:21:33,263: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,264: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,264: root: INFO: Current backtesting datetime 2023-05-11 13:30:00-04:00
2024-05-31 17:21:33,266: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:21:33,266: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,267: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,268: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,427: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,428: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,428: root: INFO: Current backtesting datetime 2023-05-11 14:00:00-04:00
2024-05-31 17:21:33,429: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,429: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,430: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,541: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:21:33,575: asyncio: WARNING: [MLTrader] Selling all positions for MLTrader strategy
2024-05-31 17:21:33,575: asyncio: INFO: [MLTrader] [32mNew order was created: market order of | 2427.0 SPY sell | at price $407.83051208496096 of class bracket with status new[0m
2024-05-31 17:21:33,577: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,578: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,578: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,578: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,579: root: INFO: market order of | 2427.0 SPY sell | at price $407.83051208496096 of class bracket with status new was sent to broker backtesting
2024-05-31 17:21:33,579: root: INFO: market order of | 2427.0 SPY sell | at price $407.83051208496096 of class bracket with status new was sent to broker backtesting
2024-05-31 17:21:33,579: asyncio: INFO: [MLTrader] [32mOrder was filled: market order of | 2427.0 SPY sell | at price $411.95 of class bracket with status fill[0m
2024-05-31 17:21:33,580: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:21:33,583: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,584: root: INFO: Current backtesting datetime 2023-05-11 14:30:00-04:00
2024-05-31 17:21:33,585: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,585: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,586: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,586: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,586: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,586: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,586: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,586: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,587: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,588: root: INFO: Current backtesting datetime 2023-05-11 15:00:00-04:00
2024-05-31 17:21:33,589: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,589: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,589: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,589: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,589: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,590: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,590: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,590: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,591: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,591: root: INFO: Current backtesting datetime 2023-05-11 15:30:00-04:00
2024-05-31 17:21:33,592: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,592: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,593: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,593: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,593: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,593: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,593: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,594: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,594: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,595: root: INFO: Current backtesting datetime 2023-05-11 16:00:00-04:00
2024-05-31 17:21:33,596: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:33,596: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,596: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,597: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,597: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,597: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,597: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,598: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,598: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,598: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,598: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,598: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,598: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,600: root: INFO: Current backtesting datetime 2023-05-11 15:59:00-04:00
2024-05-31 17:21:33,600: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:33,601: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,601: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,601: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,601: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,601: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,601: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,602: root: INFO: Current backtesting datetime 2023-05-11 16:00:00-04:00
2024-05-31 17:21:33,602: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:33,602: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,602: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,603: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,603: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,603: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,603: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,604: root: INFO: Current backtesting datetime 2023-05-12 08:30:00-04:00
2024-05-31 17:21:33,605: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,605: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,606: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:33,606: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,606: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,606: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,606: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,606: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,607: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,607: root: INFO: Current backtesting datetime 2023-05-12 09:30:00-04:00
2024-05-31 17:21:33,607: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:33,608: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,609: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,609: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,609: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,609: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,609: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,609: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,610: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,610: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,612: root: INFO: Current backtesting datetime 2023-05-12 10:00:00-04:00
2024-05-31 17:21:33,612: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,613: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,613: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,613: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,613: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,613: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,613: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,614: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,614: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,615: root: INFO: Current backtesting datetime 2023-05-12 10:30:00-04:00
2024-05-31 17:21:33,616: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,616: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,616: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,616: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,616: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,616: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,616: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,617: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,617: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,619: root: INFO: Current backtesting datetime 2023-05-12 11:00:00-04:00
2024-05-31 17:21:33,620: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,620: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,620: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,620: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,621: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,621: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,621: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,621: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,622: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,623: root: INFO: Current backtesting datetime 2023-05-12 11:30:00-04:00
2024-05-31 17:21:33,624: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,624: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,624: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,624: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,625: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,625: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,625: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,625: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,625: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,627: root: INFO: Current backtesting datetime 2023-05-12 12:00:00-04:00
2024-05-31 17:21:33,628: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,628: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,628: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,628: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,628: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,628: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,628: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,628: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,629: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,630: root: INFO: Current backtesting datetime 2023-05-12 12:30:00-04:00
2024-05-31 17:21:33,631: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,631: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,631: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,631: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,631: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,631: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,632: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,632: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,633: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,633: root: INFO: Current backtesting datetime 2023-05-12 13:00:00-04:00
2024-05-31 17:21:33,634: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,634: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,634: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,634: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,635: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,635: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,635: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,635: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,637: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,637: root: INFO: Current backtesting datetime 2023-05-12 13:30:00-04:00
2024-05-31 17:21:33,638: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,639: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,639: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,639: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,639: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,640: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,640: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,640: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,641: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,642: root: INFO: Current backtesting datetime 2023-05-12 14:00:00-04:00
2024-05-31 17:21:33,643: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,643: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,644: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,644: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,644: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,644: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,644: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,645: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,645: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,646: root: INFO: Current backtesting datetime 2023-05-12 14:30:00-04:00
2024-05-31 17:21:33,646: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,647: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,647: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,647: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,647: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,647: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,647: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,648: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,649: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,650: root: INFO: Current backtesting datetime 2023-05-12 15:00:00-04:00
2024-05-31 17:21:33,651: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,651: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,651: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,651: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,652: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,652: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,652: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,652: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,653: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,653: root: INFO: Current backtesting datetime 2023-05-12 15:30:00-04:00
2024-05-31 17:21:33,654: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,655: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,655: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,655: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,655: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,655: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,655: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,656: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,657: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,657: root: INFO: Current backtesting datetime 2023-05-12 16:00:00-04:00
2024-05-31 17:21:33,658: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:33,658: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,659: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,659: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,659: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,659: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,659: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,660: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,660: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,660: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,660: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,660: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,661: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,662: root: INFO: Current backtesting datetime 2023-05-12 15:59:00-04:00
2024-05-31 17:21:33,662: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:33,662: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,662: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,663: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,663: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,663: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,663: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,664: root: INFO: Current backtesting datetime 2023-05-12 16:00:00-04:00
2024-05-31 17:21:33,664: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:33,664: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,664: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,664: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,664: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,664: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,664: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,666: root: INFO: Current backtesting datetime 2023-05-15 08:30:00-04:00
2024-05-31 17:21:33,667: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,667: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,668: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:33,668: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,668: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,669: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,669: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,669: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,670: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,670: root: INFO: Current backtesting datetime 2023-05-15 09:30:00-04:00
2024-05-31 17:21:33,670: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:33,672: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,672: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,672: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,672: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,672: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,672: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,672: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,673: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,674: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,675: root: INFO: Current backtesting datetime 2023-05-15 10:00:00-04:00
2024-05-31 17:21:33,677: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,677: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,677: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,677: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,678: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,678: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,678: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,678: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,679: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,680: root: INFO: Current backtesting datetime 2023-05-15 10:30:00-04:00
2024-05-31 17:21:33,681: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,681: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,681: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,681: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,681: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,682: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,682: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,682: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,683: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,684: root: INFO: Current backtesting datetime 2023-05-15 11:00:00-04:00
2024-05-31 17:21:33,684: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,685: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,685: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,685: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,685: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,685: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,685: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,686: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,687: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,687: root: INFO: Current backtesting datetime 2023-05-15 11:30:00-04:00
2024-05-31 17:21:33,689: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,689: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,689: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,689: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,689: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,690: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,690: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,690: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,691: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,692: root: INFO: Current backtesting datetime 2023-05-15 12:00:00-04:00
2024-05-31 17:21:33,692: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,693: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,693: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,693: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,693: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,693: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,693: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,694: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,694: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,706: root: INFO: Current backtesting datetime 2023-05-15 12:30:00-04:00
2024-05-31 17:21:33,718: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,718: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,718: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,718: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,719: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,719: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,719: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,719: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,720: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,721: root: INFO: Current backtesting datetime 2023-05-15 13:00:00-04:00
2024-05-31 17:21:33,722: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,723: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,723: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,723: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,723: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,723: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,723: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,724: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,724: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,724: root: INFO: Current backtesting datetime 2023-05-15 13:30:00-04:00
2024-05-31 17:21:33,725: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,725: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,726: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,726: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,726: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,727: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,727: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,727: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,728: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,728: root: INFO: Current backtesting datetime 2023-05-15 14:00:00-04:00
2024-05-31 17:21:33,729: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,730: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,730: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,730: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,730: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,730: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,730: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,731: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,731: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,732: root: INFO: Current backtesting datetime 2023-05-15 14:30:00-04:00
2024-05-31 17:21:33,733: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,733: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,733: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,733: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,734: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,734: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,734: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,734: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,734: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,735: root: INFO: Current backtesting datetime 2023-05-15 15:00:00-04:00
2024-05-31 17:21:33,736: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,737: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,737: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,737: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,737: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,737: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,738: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,738: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,739: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,739: root: INFO: Current backtesting datetime 2023-05-15 15:30:00-04:00
2024-05-31 17:21:33,740: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,740: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,740: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,740: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,741: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,741: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,741: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,741: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,742: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,743: root: INFO: Current backtesting datetime 2023-05-15 16:00:00-04:00
2024-05-31 17:21:33,743: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:33,744: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,744: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,744: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,744: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,744: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,745: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,745: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,745: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,746: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,746: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,746: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,746: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,747: root: INFO: Current backtesting datetime 2023-05-15 15:59:00-04:00
2024-05-31 17:21:33,747: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:33,747: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,747: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,748: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,748: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,748: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,748: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,749: root: INFO: Current backtesting datetime 2023-05-15 16:00:00-04:00
2024-05-31 17:21:33,749: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:33,749: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,749: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,749: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,750: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,750: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,750: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,751: root: INFO: Current backtesting datetime 2023-05-16 08:30:00-04:00
2024-05-31 17:21:33,751: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,752: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,753: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:33,753: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,753: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,753: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,753: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,753: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,754: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,754: root: INFO: Current backtesting datetime 2023-05-16 09:30:00-04:00
2024-05-31 17:21:33,754: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:33,755: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,755: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,755: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,756: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,756: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,756: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,756: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,757: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,758: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,759: root: INFO: Current backtesting datetime 2023-05-16 10:00:00-04:00
2024-05-31 17:21:33,759: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,760: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,760: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,760: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,760: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,760: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,760: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,761: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,761: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,762: root: INFO: Current backtesting datetime 2023-05-16 10:30:00-04:00
2024-05-31 17:21:33,763: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,763: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,763: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,763: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,764: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,764: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,764: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,764: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,765: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,765: root: INFO: Current backtesting datetime 2023-05-16 11:00:00-04:00
2024-05-31 17:21:33,767: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,767: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,767: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,767: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,767: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,767: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,767: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,767: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,768: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,769: root: INFO: Current backtesting datetime 2023-05-16 11:30:00-04:00
2024-05-31 17:21:33,770: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,770: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,770: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,770: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,771: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,771: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,771: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,771: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,772: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,772: root: INFO: Current backtesting datetime 2023-05-16 12:00:00-04:00
2024-05-31 17:21:33,773: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,774: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,774: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,774: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,774: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,774: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,774: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,775: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,775: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,777: root: INFO: Current backtesting datetime 2023-05-16 12:30:00-04:00
2024-05-31 17:21:33,778: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,778: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,778: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,778: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,779: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,779: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,779: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,779: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,780: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,780: root: INFO: Current backtesting datetime 2023-05-16 13:00:00-04:00
2024-05-31 17:21:33,781: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,781: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,782: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,782: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,782: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,782: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,782: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,782: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,783: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,784: root: INFO: Current backtesting datetime 2023-05-16 13:30:00-04:00
2024-05-31 17:21:33,785: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,785: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,785: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,785: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,785: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,785: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,785: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,786: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,787: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,787: root: INFO: Current backtesting datetime 2023-05-16 14:00:00-04:00
2024-05-31 17:21:33,788: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,789: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,789: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,789: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,789: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,789: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,789: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,790: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,790: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,791: root: INFO: Current backtesting datetime 2023-05-16 14:30:00-04:00
2024-05-31 17:21:33,792: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,792: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,792: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,792: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,793: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,793: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,793: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,794: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,794: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,795: root: INFO: Current backtesting datetime 2023-05-16 15:00:00-04:00
2024-05-31 17:21:33,795: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,795: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,795: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,796: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,796: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,797: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,797: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,797: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,798: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,799: root: INFO: Current backtesting datetime 2023-05-16 15:30:00-04:00
2024-05-31 17:21:33,800: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,801: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,801: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,801: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,801: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,801: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,801: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,802: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,802: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,803: root: INFO: Current backtesting datetime 2023-05-16 16:00:00-04:00
2024-05-31 17:21:33,803: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:33,803: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,803: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,804: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,804: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,804: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,804: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,805: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,805: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,805: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,805: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,805: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,806: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,806: root: INFO: Current backtesting datetime 2023-05-16 15:59:00-04:00
2024-05-31 17:21:33,807: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:33,807: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,807: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,808: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,808: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,808: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,808: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,809: root: INFO: Current backtesting datetime 2023-05-16 16:00:00-04:00
2024-05-31 17:21:33,809: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:33,809: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,809: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,809: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,809: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,809: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,810: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,810: root: INFO: Current backtesting datetime 2023-05-17 08:30:00-04:00
2024-05-31 17:21:33,811: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,811: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,812: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:33,812: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,812: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,813: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,813: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,813: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,813: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,814: root: INFO: Current backtesting datetime 2023-05-17 09:30:00-04:00
2024-05-31 17:21:33,814: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:33,815: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,815: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,815: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,815: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,816: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,816: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,816: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,817: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,817: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,818: root: INFO: Current backtesting datetime 2023-05-17 10:00:00-04:00
2024-05-31 17:21:33,819: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,819: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,819: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,819: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,820: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,820: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,820: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,820: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,821: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,822: root: INFO: Current backtesting datetime 2023-05-17 10:30:00-04:00
2024-05-31 17:21:33,822: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,823: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,823: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,823: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,823: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,823: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,823: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,824: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,824: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,825: root: INFO: Current backtesting datetime 2023-05-17 11:00:00-04:00
2024-05-31 17:21:33,826: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,826: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,826: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,826: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,828: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,828: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,828: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,828: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,829: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,830: root: INFO: Current backtesting datetime 2023-05-17 11:30:00-04:00
2024-05-31 17:21:33,831: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,831: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,831: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,831: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,831: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,832: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,832: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,832: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,833: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,835: root: INFO: Current backtesting datetime 2023-05-17 12:00:00-04:00
2024-05-31 17:21:33,835: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,836: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,836: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,836: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,836: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,833: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:21:33,837: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,837: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,837: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,838: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,838: root: INFO: Current backtesting datetime 2023-05-17 12:30:00-04:00
2024-05-31 17:21:33,840: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,840: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,840: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,840: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,840: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,841: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,841: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,841: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,842: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,843: root: INFO: Current backtesting datetime 2023-05-17 13:00:00-04:00
2024-05-31 17:21:33,843: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,844: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,844: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,844: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,844: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,844: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,844: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,845: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,846: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,847: root: INFO: Current backtesting datetime 2023-05-17 13:30:00-04:00
2024-05-31 17:21:33,849: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,849: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,849: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,849: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,849: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,849: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,849: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,850: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,851: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,851: root: INFO: Current backtesting datetime 2023-05-17 14:00:00-04:00
2024-05-31 17:21:33,852: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,852: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,853: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,853: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,853: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,854: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,854: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,854: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,855: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,857: root: INFO: Current backtesting datetime 2023-05-17 14:30:00-04:00
2024-05-31 17:21:33,858: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,858: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,858: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,858: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,859: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,859: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,859: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,859: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,859: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,860: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:21:33,861: root: INFO: Current backtesting datetime 2023-05-17 15:00:00-04:00
2024-05-31 17:21:33,862: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,862: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,862: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,862: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,863: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,863: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,863: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,863: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,864: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,865: root: INFO: Current backtesting datetime 2023-05-17 15:30:00-04:00
2024-05-31 17:21:33,865: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,866: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,866: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,866: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,866: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,866: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,866: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,867: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,867: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,869: root: INFO: Current backtesting datetime 2023-05-17 16:00:00-04:00
2024-05-31 17:21:33,869: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:33,869: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,869: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,869: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,870: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,870: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,870: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,871: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,871: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,871: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,871: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,871: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,871: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,872: root: INFO: Current backtesting datetime 2023-05-17 15:59:00-04:00
2024-05-31 17:21:33,872: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:33,872: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,872: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,873: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,873: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,873: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,874: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,875: root: INFO: Current backtesting datetime 2023-05-17 16:00:00-04:00
2024-05-31 17:21:33,875: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:33,875: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,875: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,875: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,875: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,875: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,877: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,878: root: INFO: Current backtesting datetime 2023-05-18 08:30:00-04:00
2024-05-31 17:21:33,878: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,878: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,879: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:33,879: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,879: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,880: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,880: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,880: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,880: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,881: root: INFO: Current backtesting datetime 2023-05-18 09:30:00-04:00
2024-05-31 17:21:33,881: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:33,882: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,883: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,883: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,883: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,883: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,883: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,883: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,884: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,884: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,885: root: INFO: Current backtesting datetime 2023-05-18 10:00:00-04:00
2024-05-31 17:21:33,885: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,885: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,885: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,885: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,886: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,886: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,886: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,886: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,887: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,888: root: INFO: Current backtesting datetime 2023-05-18 10:30:00-04:00
2024-05-31 17:21:33,889: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,889: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,889: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,889: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,890: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,890: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,890: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,890: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,891: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,892: root: INFO: Current backtesting datetime 2023-05-18 11:00:00-04:00
2024-05-31 17:21:33,893: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,893: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,893: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,893: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,893: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,894: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,894: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,894: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,895: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,895: root: INFO: Current backtesting datetime 2023-05-18 11:30:00-04:00
2024-05-31 17:21:33,896: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,896: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,896: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,897: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,897: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,897: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,897: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,897: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,898: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,898: root: INFO: Current backtesting datetime 2023-05-18 12:00:00-04:00
2024-05-31 17:21:33,900: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,900: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,900: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,900: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,900: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,901: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,901: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,901: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,902: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,903: root: INFO: Current backtesting datetime 2023-05-18 12:30:00-04:00
2024-05-31 17:21:33,903: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,904: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,904: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,904: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,904: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,904: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,904: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,905: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,905: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,906: root: INFO: Current backtesting datetime 2023-05-18 13:00:00-04:00
2024-05-31 17:21:33,906: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,908: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,908: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,908: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,908: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,908: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,908: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,909: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,909: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,910: root: INFO: Current backtesting datetime 2023-05-18 13:30:00-04:00
2024-05-31 17:21:33,911: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,911: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,911: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,912: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,912: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,912: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,912: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,912: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,913: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,914: root: INFO: Current backtesting datetime 2023-05-18 14:00:00-04:00
2024-05-31 17:21:33,914: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,915: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,915: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,915: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,915: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,915: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,915: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,915: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,916: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,917: root: INFO: Current backtesting datetime 2023-05-18 14:30:00-04:00
2024-05-31 17:21:33,918: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,918: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,918: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,918: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,918: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,919: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,919: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,919: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,920: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,921: root: INFO: Current backtesting datetime 2023-05-18 15:00:00-04:00
2024-05-31 17:21:33,922: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,922: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,922: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,922: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,922: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,922: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,923: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,923: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,924: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,924: root: INFO: Current backtesting datetime 2023-05-18 15:30:00-04:00
2024-05-31 17:21:33,925: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,925: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,925: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,925: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,926: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,926: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,926: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,926: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,927: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,927: root: INFO: Current backtesting datetime 2023-05-18 16:00:00-04:00
2024-05-31 17:21:33,928: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:33,928: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,928: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,928: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,929: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,929: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,929: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,929: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,929: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,931: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,931: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,931: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,931: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,931: root: INFO: Current backtesting datetime 2023-05-18 15:59:00-04:00
2024-05-31 17:21:33,932: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:33,932: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,932: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,932: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,932: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,932: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,933: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,933: root: INFO: Current backtesting datetime 2023-05-18 16:00:00-04:00
2024-05-31 17:21:33,934: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:33,934: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,934: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,934: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,934: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,934: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,934: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,935: root: INFO: Current backtesting datetime 2023-05-19 08:30:00-04:00
2024-05-31 17:21:33,936: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,936: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,937: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:33,937: asyncio: INFO: [MLTrader] Getting historical prices for SPY, 1 bars, 
2024-05-31 17:21:33,937: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,937: root: WARNING: quote is not implemented for YahooData, but USD was passed as the quote
2024-05-31 17:21:33,938: asyncio: INFO: [MLTrader] [32mOrder was canceled: limit order of | 2427.0 SPY buy | at price $407.83051208496096 with status canceled[0m
2024-05-31 17:21:33,940: root: INFO: Position MLTrader Position: 0.0 shares of SPY (2 orders) liquidated
2024-05-31 17:21:33,940: asyncio: INFO: [MLTrader] [32mOrder was filled: stop order of | 2427.0 SPY buy | at price $420.19 with status fill[0m
2024-05-31 17:21:33,943: root: INFO: Current backtesting datetime 2023-05-19 09:30:00-04:00
2024-05-31 17:21:33,943: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:33,944: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,944: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,945: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,945: root: INFO: Current backtesting datetime 2023-05-19 10:00:00-04:00
2024-05-31 17:21:33,946: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,946: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,946: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,947: root: INFO: Current backtesting datetime 2023-05-19 10:30:00-04:00
2024-05-31 17:21:33,947: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,948: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,948: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,949: root: INFO: Current backtesting datetime 2023-05-19 11:00:00-04:00
2024-05-31 17:21:33,949: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,949: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,950: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,950: root: INFO: Current backtesting datetime 2023-05-19 11:30:00-04:00
2024-05-31 17:21:33,952: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,952: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,953: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,953: root: INFO: Current backtesting datetime 2023-05-19 12:00:00-04:00
2024-05-31 17:21:33,954: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,954: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,954: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,955: root: INFO: Current backtesting datetime 2023-05-19 12:30:00-04:00
2024-05-31 17:21:33,955: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,955: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,956: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,957: root: INFO: Current backtesting datetime 2023-05-19 13:00:00-04:00
2024-05-31 17:21:33,957: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,957: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,958: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,958: root: INFO: Current backtesting datetime 2023-05-19 13:30:00-04:00
2024-05-31 17:21:33,959: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,959: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,960: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,960: root: INFO: Current backtesting datetime 2023-05-19 14:00:00-04:00
2024-05-31 17:21:33,960: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,960: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,962: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,962: root: INFO: Current backtesting datetime 2023-05-19 14:30:00-04:00
2024-05-31 17:21:33,963: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,963: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,964: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,964: root: INFO: Current backtesting datetime 2023-05-19 15:00:00-04:00
2024-05-31 17:21:33,965: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,965: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,965: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,966: root: INFO: Current backtesting datetime 2023-05-19 15:30:00-04:00
2024-05-31 17:21:33,966: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,966: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,967: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,967: root: INFO: Current backtesting datetime 2023-05-19 16:00:00-04:00
2024-05-31 17:21:33,968: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:33,969: root: INFO: Current backtesting datetime 2023-05-19 15:59:00-04:00
2024-05-31 17:21:33,969: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:33,969: root: INFO: Current backtesting datetime 2023-05-19 16:00:00-04:00
2024-05-31 17:21:33,969: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:33,970: root: INFO: Current backtesting datetime 2023-05-22 08:30:00-04:00
2024-05-31 17:21:33,971: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:33,971: root: INFO: Current backtesting datetime 2023-05-22 09:30:00-04:00
2024-05-31 17:21:33,971: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:33,972: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,972: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,973: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,973: root: INFO: Current backtesting datetime 2023-05-22 10:00:00-04:00
2024-05-31 17:21:33,974: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,974: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,975: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,995: root: INFO: Current backtesting datetime 2023-05-22 10:30:00-04:00
2024-05-31 17:21:33,996: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,996: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,997: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,997: root: INFO: Current backtesting datetime 2023-05-22 11:00:00-04:00
2024-05-31 17:21:33,998: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,998: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:33[0m
2024-05-31 17:21:33,998: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:33,999: root: INFO: Current backtesting datetime 2023-05-22 11:30:00-04:00
2024-05-31 17:21:34,000: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:33[0m
2024-05-31 17:21:34,000: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,001: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,002: root: INFO: Current backtesting datetime 2023-05-22 12:00:00-04:00
2024-05-31 17:21:34,002: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,002: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,003: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,003: root: INFO: Current backtesting datetime 2023-05-22 12:30:00-04:00
2024-05-31 17:21:34,004: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,004: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,004: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,005: root: INFO: Current backtesting datetime 2023-05-22 13:00:00-04:00
2024-05-31 17:21:34,006: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,006: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,008: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,009: root: INFO: Current backtesting datetime 2023-05-22 13:30:00-04:00
2024-05-31 17:21:34,009: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,009: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,010: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,011: root: INFO: Current backtesting datetime 2023-05-22 14:00:00-04:00
2024-05-31 17:21:34,011: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,011: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,012: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,012: root: INFO: Current backtesting datetime 2023-05-22 14:30:00-04:00
2024-05-31 17:21:34,013: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,013: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,014: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,014: root: INFO: Current backtesting datetime 2023-05-22 15:00:00-04:00
2024-05-31 17:21:34,014: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,014: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,015: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,016: root: INFO: Current backtesting datetime 2023-05-22 15:30:00-04:00
2024-05-31 17:21:34,016: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,016: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,017: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,018: root: INFO: Current backtesting datetime 2023-05-22 16:00:00-04:00
2024-05-31 17:21:34,018: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:34,019: root: INFO: Current backtesting datetime 2023-05-22 15:59:00-04:00
2024-05-31 17:21:34,019: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:34,020: root: INFO: Current backtesting datetime 2023-05-22 16:00:00-04:00
2024-05-31 17:21:34,020: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:34,021: root: INFO: Current backtesting datetime 2023-05-23 08:30:00-04:00
2024-05-31 17:21:34,021: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:34,022: root: INFO: Current backtesting datetime 2023-05-23 09:30:00-04:00
2024-05-31 17:21:34,022: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:34,022: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,022: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,024: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,024: root: INFO: Current backtesting datetime 2023-05-23 10:00:00-04:00
2024-05-31 17:21:34,025: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,025: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,025: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,026: root: INFO: Current backtesting datetime 2023-05-23 10:30:00-04:00
2024-05-31 17:21:34,026: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,027: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,027: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,028: root: INFO: Current backtesting datetime 2023-05-23 11:00:00-04:00
2024-05-31 17:21:34,028: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,029: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,029: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,030: root: INFO: Current backtesting datetime 2023-05-23 11:30:00-04:00
2024-05-31 17:21:34,030: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,030: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,031: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,032: root: INFO: Current backtesting datetime 2023-05-23 12:00:00-04:00
2024-05-31 17:21:34,032: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,032: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,033: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,034: root: INFO: Current backtesting datetime 2023-05-23 12:30:00-04:00
2024-05-31 17:21:34,034: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,035: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,035: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,037: root: INFO: Current backtesting datetime 2023-05-23 13:00:00-04:00
2024-05-31 17:21:34,037: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,037: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,038: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,038: root: INFO: Current backtesting datetime 2023-05-23 13:30:00-04:00
2024-05-31 17:21:34,039: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,039: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,040: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,040: root: INFO: Current backtesting datetime 2023-05-23 14:00:00-04:00
2024-05-31 17:21:34,041: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,041: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,042: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,043: root: INFO: Current backtesting datetime 2023-05-23 14:30:00-04:00
2024-05-31 17:21:34,043: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,043: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,044: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,045: root: INFO: Current backtesting datetime 2023-05-23 15:00:00-04:00
2024-05-31 17:21:34,045: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,045: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,045: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,046: root: INFO: Current backtesting datetime 2023-05-23 15:30:00-04:00
2024-05-31 17:21:34,046: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,046: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,047: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,048: root: INFO: Current backtesting datetime 2023-05-23 16:00:00-04:00
2024-05-31 17:21:34,049: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:34,050: root: INFO: Current backtesting datetime 2023-05-23 15:59:00-04:00
2024-05-31 17:21:34,050: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:34,051: root: INFO: Current backtesting datetime 2023-05-23 16:00:00-04:00
2024-05-31 17:21:34,051: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:34,051: root: INFO: Current backtesting datetime 2023-05-24 08:30:00-04:00
2024-05-31 17:21:34,051: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:34,052: root: INFO: Current backtesting datetime 2023-05-24 09:30:00-04:00
2024-05-31 17:21:34,052: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:34,053: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,053: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,054: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,054: root: INFO: Current backtesting datetime 2023-05-24 10:00:00-04:00
2024-05-31 17:21:34,055: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,055: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,056: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,056: root: INFO: Current backtesting datetime 2023-05-24 10:30:00-04:00
2024-05-31 17:21:34,057: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,057: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,057: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,058: root: INFO: Current backtesting datetime 2023-05-24 11:00:00-04:00
2024-05-31 17:21:34,058: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,058: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,060: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,060: root: INFO: Current backtesting datetime 2023-05-24 11:30:00-04:00
2024-05-31 17:21:34,061: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,061: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,062: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,063: root: INFO: Current backtesting datetime 2023-05-24 12:00:00-04:00
2024-05-31 17:21:34,063: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,063: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,064: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,065: root: INFO: Current backtesting datetime 2023-05-24 12:30:00-04:00
2024-05-31 17:21:34,065: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,065: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,065: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,066: root: INFO: Current backtesting datetime 2023-05-24 13:00:00-04:00
2024-05-31 17:21:34,066: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,067: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,067: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,067: root: INFO: Current backtesting datetime 2023-05-24 13:30:00-04:00
2024-05-31 17:21:34,069: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,069: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,070: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,070: root: INFO: Current backtesting datetime 2023-05-24 14:00:00-04:00
2024-05-31 17:21:34,071: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,071: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,072: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,072: root: INFO: Current backtesting datetime 2023-05-24 14:30:00-04:00
2024-05-31 17:21:34,073: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,073: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,074: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,074: root: INFO: Current backtesting datetime 2023-05-24 15:00:00-04:00
2024-05-31 17:21:34,074: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,075: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,075: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,076: root: INFO: Current backtesting datetime 2023-05-24 15:30:00-04:00
2024-05-31 17:21:34,076: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,076: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,077: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,078: root: INFO: Current backtesting datetime 2023-05-24 16:00:00-04:00
2024-05-31 17:21:34,078: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:34,080: root: INFO: Current backtesting datetime 2023-05-24 15:59:00-04:00
2024-05-31 17:21:34,080: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:34,081: root: INFO: Current backtesting datetime 2023-05-24 16:00:00-04:00
2024-05-31 17:21:34,081: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:34,081: root: INFO: Current backtesting datetime 2023-05-25 08:30:00-04:00
2024-05-31 17:21:34,082: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:34,082: root: INFO: Current backtesting datetime 2023-05-25 09:30:00-04:00
2024-05-31 17:21:34,083: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:34,083: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,084: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,084: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,085: root: INFO: Current backtesting datetime 2023-05-25 10:00:00-04:00
2024-05-31 17:21:34,085: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,085: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,085: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,086: root: INFO: Current backtesting datetime 2023-05-25 10:30:00-04:00
2024-05-31 17:21:34,086: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,087: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,087: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,088: root: INFO: Current backtesting datetime 2023-05-25 11:00:00-04:00
2024-05-31 17:21:34,088: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,088: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,090: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,091: root: INFO: Current backtesting datetime 2023-05-25 11:30:00-04:00
2024-05-31 17:21:34,091: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,092: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,092: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,093: root: INFO: Current backtesting datetime 2023-05-25 12:00:00-04:00
2024-05-31 17:21:34,093: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,094: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,094: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,095: root: INFO: Current backtesting datetime 2023-05-25 12:30:00-04:00
2024-05-31 17:21:34,095: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,095: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,096: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,097: root: INFO: Current backtesting datetime 2023-05-25 13:00:00-04:00
2024-05-31 17:21:34,097: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,097: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,098: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,098: root: INFO: Current backtesting datetime 2023-05-25 13:30:00-04:00
2024-05-31 17:21:34,099: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,099: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,100: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,101: root: INFO: Current backtesting datetime 2023-05-25 14:00:00-04:00
2024-05-31 17:21:34,101: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,101: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,102: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,102: root: INFO: Current backtesting datetime 2023-05-25 14:30:00-04:00
2024-05-31 17:21:34,103: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,103: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,104: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,105: root: INFO: Current backtesting datetime 2023-05-25 15:00:00-04:00
2024-05-31 17:21:34,105: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,105: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,105: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,106: root: INFO: Current backtesting datetime 2023-05-25 15:30:00-04:00
2024-05-31 17:21:34,106: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,107: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,107: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,108: root: INFO: Current backtesting datetime 2023-05-25 16:00:00-04:00
2024-05-31 17:21:34,108: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:34,109: root: INFO: Current backtesting datetime 2023-05-25 15:59:00-04:00
2024-05-31 17:21:34,110: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:34,111: root: INFO: Current backtesting datetime 2023-05-25 16:00:00-04:00
2024-05-31 17:21:34,111: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:34,112: root: INFO: Current backtesting datetime 2023-05-26 08:30:00-04:00
2024-05-31 17:21:34,113: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:34,114: root: INFO: Current backtesting datetime 2023-05-26 09:30:00-04:00
2024-05-31 17:21:34,114: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:34,115: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,115: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,116: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,113: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:21:34,116: root: INFO: Current backtesting datetime 2023-05-26 10:00:00-04:00
2024-05-31 17:21:34,117: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,117: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,118: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,119: root: INFO: Current backtesting datetime 2023-05-26 10:30:00-04:00
2024-05-31 17:21:34,119: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,119: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,120: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,120: root: INFO: Current backtesting datetime 2023-05-26 11:00:00-04:00
2024-05-31 17:21:34,120: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,121: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,121: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,122: root: INFO: Current backtesting datetime 2023-05-26 11:30:00-04:00
2024-05-31 17:21:34,122: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,122: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,123: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,124: root: INFO: Current backtesting datetime 2023-05-26 12:00:00-04:00
2024-05-31 17:21:34,124: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,124: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,126: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,126: root: INFO: Current backtesting datetime 2023-05-26 12:30:00-04:00
2024-05-31 17:21:34,127: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,127: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,128: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,128: root: INFO: Current backtesting datetime 2023-05-26 13:00:00-04:00
2024-05-31 17:21:34,128: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,129: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,129: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,130: root: INFO: Current backtesting datetime 2023-05-26 13:30:00-04:00
2024-05-31 17:21:34,130: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,130: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,131: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,132: root: INFO: Current backtesting datetime 2023-05-26 14:00:00-04:00
2024-05-31 17:21:34,132: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,132: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,133: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,133: root: INFO: Current backtesting datetime 2023-05-26 14:30:00-04:00
2024-05-31 17:21:34,134: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,134: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,135: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,135: root: INFO: Current backtesting datetime 2023-05-26 15:00:00-04:00
2024-05-31 17:21:34,136: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,136: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,137: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,138: root: INFO: Current backtesting datetime 2023-05-26 15:30:00-04:00
2024-05-31 17:21:34,138: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,138: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,139: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,140: root: INFO: Current backtesting datetime 2023-05-26 16:00:00-04:00
2024-05-31 17:21:34,140: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:34,141: root: INFO: Current backtesting datetime 2023-05-26 15:59:00-04:00
2024-05-31 17:21:34,141: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:34,141: root: INFO: Current backtesting datetime 2023-05-26 16:00:00-04:00
2024-05-31 17:21:34,142: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:21:34,142: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:34,144: root: INFO: Current backtesting datetime 2023-05-30 08:30:00-04:00
2024-05-31 17:21:34,144: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:34,145: root: INFO: Current backtesting datetime 2023-05-30 09:30:00-04:00
2024-05-31 17:21:34,145: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:34,146: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,146: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,147: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,147: root: INFO: Current backtesting datetime 2023-05-30 10:00:00-04:00
2024-05-31 17:21:34,148: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,148: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,149: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,150: root: INFO: Current backtesting datetime 2023-05-30 10:30:00-04:00
2024-05-31 17:21:34,150: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,150: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,151: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,151: root: INFO: Current backtesting datetime 2023-05-30 11:00:00-04:00
2024-05-31 17:21:34,151: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,153: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,153: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,154: root: INFO: Current backtesting datetime 2023-05-30 11:30:00-04:00
2024-05-31 17:21:34,154: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,155: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,155: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,155: root: INFO: Current backtesting datetime 2023-05-30 12:00:00-04:00
2024-05-31 17:21:34,156: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,156: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,157: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,158: root: INFO: Current backtesting datetime 2023-05-30 12:30:00-04:00
2024-05-31 17:21:34,159: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,159: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,160: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,161: root: INFO: Current backtesting datetime 2023-05-30 13:00:00-04:00
2024-05-31 17:21:34,161: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,162: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,162: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,163: root: INFO: Current backtesting datetime 2023-05-30 13:30:00-04:00
2024-05-31 17:21:34,164: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,164: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,165: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,165: root: INFO: Current backtesting datetime 2023-05-30 14:00:00-04:00
2024-05-31 17:21:34,165: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,166: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,166: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,167: root: INFO: Current backtesting datetime 2023-05-30 14:30:00-04:00
2024-05-31 17:21:34,168: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,168: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,168: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,169: root: INFO: Current backtesting datetime 2023-05-30 15:00:00-04:00
2024-05-31 17:21:34,169: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,170: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,170: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,171: root: INFO: Current backtesting datetime 2023-05-30 15:30:00-04:00
2024-05-31 17:21:34,171: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,171: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,172: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,174: root: INFO: Current backtesting datetime 2023-05-30 16:00:00-04:00
2024-05-31 17:21:34,174: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:34,175: root: INFO: Current backtesting datetime 2023-05-30 15:59:00-04:00
2024-05-31 17:21:34,175: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:34,175: root: INFO: Current backtesting datetime 2023-05-30 16:00:00-04:00
2024-05-31 17:21:34,176: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:34,176: root: INFO: Current backtesting datetime 2023-05-31 08:30:00-04:00
2024-05-31 17:21:34,177: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:34,177: root: INFO: Current backtesting datetime 2023-05-31 09:30:00-04:00
2024-05-31 17:21:34,177: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:34,178: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,178: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,179: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,179: root: INFO: Current backtesting datetime 2023-05-31 10:00:00-04:00
2024-05-31 17:21:34,180: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,180: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,181: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,181: root: INFO: Current backtesting datetime 2023-05-31 10:30:00-04:00
2024-05-31 17:21:34,182: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,182: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,183: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,184: root: INFO: Current backtesting datetime 2023-05-31 11:00:00-04:00
2024-05-31 17:21:34,184: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,184: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,185: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,185: root: INFO: Current backtesting datetime 2023-05-31 11:30:00-04:00
2024-05-31 17:21:34,186: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,186: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,187: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,188: root: INFO: Current backtesting datetime 2023-05-31 12:00:00-04:00
2024-05-31 17:21:34,188: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,188: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,189: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,190: root: INFO: Current backtesting datetime 2023-05-31 12:30:00-04:00
2024-05-31 17:21:34,190: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,190: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,191: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,191: root: INFO: Current backtesting datetime 2023-05-31 13:00:00-04:00
2024-05-31 17:21:34,192: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,192: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,192: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,193: root: INFO: Current backtesting datetime 2023-05-31 13:30:00-04:00
2024-05-31 17:21:34,194: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,194: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,195: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,195: root: INFO: Current backtesting datetime 2023-05-31 14:00:00-04:00
2024-05-31 17:21:34,195: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,196: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,196: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,197: root: INFO: Current backtesting datetime 2023-05-31 14:30:00-04:00
2024-05-31 17:21:34,197: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,197: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,198: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,198: root: INFO: Current backtesting datetime 2023-05-31 15:00:00-04:00
2024-05-31 17:21:34,199: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,199: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,199: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,200: root: INFO: Current backtesting datetime 2023-05-31 15:30:00-04:00
2024-05-31 17:21:34,200: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,200: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,202: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,202: root: INFO: Current backtesting datetime 2023-05-31 16:00:00-04:00
2024-05-31 17:21:34,203: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:34,204: root: INFO: Current backtesting datetime 2023-05-31 15:59:00-04:00
2024-05-31 17:21:34,204: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:34,205: root: INFO: Current backtesting datetime 2023-05-31 16:00:00-04:00
2024-05-31 17:21:34,205: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:34,205: root: INFO: Current backtesting datetime 2023-06-01 08:30:00-04:00
2024-05-31 17:21:34,205: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:34,206: root: INFO: Current backtesting datetime 2023-06-01 09:30:00-04:00
2024-05-31 17:21:34,206: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:34,207: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,207: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,208: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,208: root: INFO: Current backtesting datetime 2023-06-01 10:00:00-04:00
2024-05-31 17:21:34,209: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,209: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,209: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,210: root: INFO: Current backtesting datetime 2023-06-01 10:30:00-04:00
2024-05-31 17:21:34,210: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,211: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,211: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,212: root: INFO: Current backtesting datetime 2023-06-01 11:00:00-04:00
2024-05-31 17:21:34,212: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,212: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,213: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,214: root: INFO: Current backtesting datetime 2023-06-01 11:30:00-04:00
2024-05-31 17:21:34,214: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,214: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,215: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,215: root: INFO: Current backtesting datetime 2023-06-01 12:00:00-04:00
2024-05-31 17:21:34,216: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,216: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,217: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,217: root: INFO: Current backtesting datetime 2023-06-01 12:30:00-04:00
2024-05-31 17:21:34,218: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,218: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,219: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,219: root: INFO: Current backtesting datetime 2023-06-01 13:00:00-04:00
2024-05-31 17:21:34,220: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,220: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,220: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,221: root: INFO: Current backtesting datetime 2023-06-01 13:30:00-04:00
2024-05-31 17:21:34,222: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,222: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,223: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,223: root: INFO: Current backtesting datetime 2023-06-01 14:00:00-04:00
2024-05-31 17:21:34,224: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,224: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,224: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,224: root: INFO: Current backtesting datetime 2023-06-01 14:30:00-04:00
2024-05-31 17:21:34,226: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,226: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,226: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,227: root: INFO: Current backtesting datetime 2023-06-01 15:00:00-04:00
2024-05-31 17:21:34,227: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,227: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,228: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,228: root: INFO: Current backtesting datetime 2023-06-01 15:30:00-04:00
2024-05-31 17:21:34,229: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,229: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,230: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,230: root: INFO: Current backtesting datetime 2023-06-01 16:00:00-04:00
2024-05-31 17:21:34,231: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:34,232: root: INFO: Current backtesting datetime 2023-06-01 15:59:00-04:00
2024-05-31 17:21:34,232: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:34,232: root: INFO: Current backtesting datetime 2023-06-01 16:00:00-04:00
2024-05-31 17:21:34,232: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:34,233: root: INFO: Current backtesting datetime 2023-06-02 08:30:00-04:00
2024-05-31 17:21:34,233: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:34,234: root: INFO: Current backtesting datetime 2023-06-02 09:30:00-04:00
2024-05-31 17:21:34,234: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:34,235: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,235: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,235: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,236: root: INFO: Current backtesting datetime 2023-06-02 10:00:00-04:00
2024-05-31 17:21:34,236: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,236: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,237: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,238: root: INFO: Current backtesting datetime 2023-06-02 10:30:00-04:00
2024-05-31 17:21:34,238: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,238: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,239: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,239: root: INFO: Current backtesting datetime 2023-06-02 11:00:00-04:00
2024-05-31 17:21:34,240: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,240: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,240: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,241: root: INFO: Current backtesting datetime 2023-06-02 11:30:00-04:00
2024-05-31 17:21:34,241: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,242: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,242: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,243: root: INFO: Current backtesting datetime 2023-06-02 12:00:00-04:00
2024-05-31 17:21:34,243: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,244: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,244: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,244: root: INFO: Current backtesting datetime 2023-06-02 12:30:00-04:00
2024-05-31 17:21:34,246: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,246: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,246: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,246: root: INFO: Current backtesting datetime 2023-06-02 13:00:00-04:00
2024-05-31 17:21:34,247: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,247: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,248: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,248: root: INFO: Current backtesting datetime 2023-06-02 13:30:00-04:00
2024-05-31 17:21:34,249: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,249: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,250: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,250: root: INFO: Current backtesting datetime 2023-06-02 14:00:00-04:00
2024-05-31 17:21:34,251: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,251: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,251: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,252: root: INFO: Current backtesting datetime 2023-06-02 14:30:00-04:00
2024-05-31 17:21:34,252: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,253: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,253: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,254: root: INFO: Current backtesting datetime 2023-06-02 15:00:00-04:00
2024-05-31 17:21:34,254: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,254: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,254: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,274: root: INFO: Current backtesting datetime 2023-06-02 15:30:00-04:00
2024-05-31 17:21:34,275: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,276: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,277: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,278: root: INFO: Current backtesting datetime 2023-06-02 16:00:00-04:00
2024-05-31 17:21:34,279: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:34,280: root: INFO: Current backtesting datetime 2023-06-02 15:59:00-04:00
2024-05-31 17:21:34,280: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:34,281: root: INFO: Current backtesting datetime 2023-06-02 16:00:00-04:00
2024-05-31 17:21:34,281: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:34,281: root: INFO: Current backtesting datetime 2023-06-05 08:30:00-04:00
2024-05-31 17:21:34,282: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:34,282: root: INFO: Current backtesting datetime 2023-06-05 09:30:00-04:00
2024-05-31 17:21:34,282: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:34,283: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,283: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,284: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,285: root: INFO: Current backtesting datetime 2023-06-05 10:00:00-04:00
2024-05-31 17:21:34,285: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,285: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,286: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,287: root: INFO: Current backtesting datetime 2023-06-05 10:30:00-04:00
2024-05-31 17:21:34,287: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,287: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,288: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,289: root: INFO: Current backtesting datetime 2023-06-05 11:00:00-04:00
2024-05-31 17:21:34,289: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,290: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,290: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,291: root: INFO: Current backtesting datetime 2023-06-05 11:30:00-04:00
2024-05-31 17:21:34,292: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,292: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,292: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,293: root: INFO: Current backtesting datetime 2023-06-05 12:00:00-04:00
2024-05-31 17:21:34,293: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,294: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,294: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,295: root: INFO: Current backtesting datetime 2023-06-05 12:30:00-04:00
2024-05-31 17:21:34,295: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,295: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,296: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,297: root: INFO: Current backtesting datetime 2023-06-05 13:00:00-04:00
2024-05-31 17:21:34,297: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,298: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,299: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,299: root: INFO: Current backtesting datetime 2023-06-05 13:30:00-04:00
2024-05-31 17:21:34,300: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,300: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,300: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,301: root: INFO: Current backtesting datetime 2023-06-05 14:00:00-04:00
2024-05-31 17:21:34,301: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,302: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,302: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,303: root: INFO: Current backtesting datetime 2023-06-05 14:30:00-04:00
2024-05-31 17:21:34,303: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,304: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,304: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,305: root: INFO: Current backtesting datetime 2023-06-05 15:00:00-04:00
2024-05-31 17:21:34,305: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,306: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,306: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,306: root: INFO: Current backtesting datetime 2023-06-05 15:30:00-04:00
2024-05-31 17:21:34,308: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,308: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,309: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,309: root: INFO: Current backtesting datetime 2023-06-05 16:00:00-04:00
2024-05-31 17:21:34,309: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:34,310: root: INFO: Current backtesting datetime 2023-06-05 15:59:00-04:00
2024-05-31 17:21:34,310: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:34,311: root: INFO: Current backtesting datetime 2023-06-05 16:00:00-04:00
2024-05-31 17:21:34,311: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:34,312: root: INFO: Current backtesting datetime 2023-06-06 08:30:00-04:00
2024-05-31 17:21:34,312: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:34,313: root: INFO: Current backtesting datetime 2023-06-06 09:30:00-04:00
2024-05-31 17:21:34,313: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:34,314: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,314: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,314: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,315: root: INFO: Current backtesting datetime 2023-06-06 10:00:00-04:00
2024-05-31 17:21:34,315: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,316: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,317: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,317: root: INFO: Current backtesting datetime 2023-06-06 10:30:00-04:00
2024-05-31 17:21:34,318: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,318: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,318: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,319: root: INFO: Current backtesting datetime 2023-06-06 11:00:00-04:00
2024-05-31 17:21:34,319: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,320: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,320: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,321: root: INFO: Current backtesting datetime 2023-06-06 11:30:00-04:00
2024-05-31 17:21:34,321: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,321: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,322: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,323: root: INFO: Current backtesting datetime 2023-06-06 12:00:00-04:00
2024-05-31 17:21:34,323: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,323: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,324: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,324: root: INFO: Current backtesting datetime 2023-06-06 12:30:00-04:00
2024-05-31 17:21:34,325: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,325: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,326: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,326: root: INFO: Current backtesting datetime 2023-06-06 13:00:00-04:00
2024-05-31 17:21:34,326: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,328: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,328: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,329: root: INFO: Current backtesting datetime 2023-06-06 13:30:00-04:00
2024-05-31 17:21:34,329: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,330: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,330: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,330: root: INFO: Current backtesting datetime 2023-06-06 14:00:00-04:00
2024-05-31 17:21:34,331: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,331: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,331: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,332: root: INFO: Current backtesting datetime 2023-06-06 14:30:00-04:00
2024-05-31 17:21:34,333: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,333: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,334: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,334: root: INFO: Current backtesting datetime 2023-06-06 15:00:00-04:00
2024-05-31 17:21:34,335: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,335: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,335: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,336: root: INFO: Current backtesting datetime 2023-06-06 15:30:00-04:00
2024-05-31 17:21:34,336: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,337: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,337: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,338: root: INFO: Current backtesting datetime 2023-06-06 16:00:00-04:00
2024-05-31 17:21:34,338: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:34,340: root: INFO: Current backtesting datetime 2023-06-06 15:59:00-04:00
2024-05-31 17:21:34,341: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:34,341: root: INFO: Current backtesting datetime 2023-06-06 16:00:00-04:00
2024-05-31 17:21:34,341: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:34,342: root: INFO: Current backtesting datetime 2023-06-07 08:30:00-04:00
2024-05-31 17:21:34,342: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:34,343: root: INFO: Current backtesting datetime 2023-06-07 09:30:00-04:00
2024-05-31 17:21:34,343: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:34,344: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,344: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,345: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,345: root: INFO: Current backtesting datetime 2023-06-07 10:00:00-04:00
2024-05-31 17:21:34,345: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,346: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,346: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,347: root: INFO: Current backtesting datetime 2023-06-07 10:30:00-04:00
2024-05-31 17:21:34,347: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,347: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,348: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,349: root: INFO: Current backtesting datetime 2023-06-07 11:00:00-04:00
2024-05-31 17:21:34,349: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,349: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,350: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,351: root: INFO: Current backtesting datetime 2023-06-07 11:30:00-04:00
2024-05-31 17:21:34,351: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,351: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,352: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,352: root: INFO: Current backtesting datetime 2023-06-07 12:00:00-04:00
2024-05-31 17:21:34,353: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,353: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,354: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,361: root: INFO: Current backtesting datetime 2023-06-07 12:30:00-04:00
2024-05-31 17:21:34,362: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,362: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,363: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,364: root: INFO: Current backtesting datetime 2023-06-07 13:00:00-04:00
2024-05-31 17:21:34,364: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,365: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,366: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,367: root: INFO: Current backtesting datetime 2023-06-07 13:30:00-04:00
2024-05-31 17:21:34,368: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,368: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,369: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,371: root: INFO: Current backtesting datetime 2023-06-07 14:00:00-04:00
2024-05-31 17:21:34,371: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,372: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,373: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,374: root: INFO: Current backtesting datetime 2023-06-07 14:30:00-04:00
2024-05-31 17:21:34,375: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,375: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,376: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,377: root: INFO: Current backtesting datetime 2023-06-07 15:00:00-04:00
2024-05-31 17:21:34,379: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,379: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,380: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,380: root: INFO: Current backtesting datetime 2023-06-07 15:30:00-04:00
2024-05-31 17:21:34,381: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,382: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,383: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,383: root: INFO: Current backtesting datetime 2023-06-07 16:00:00-04:00
2024-05-31 17:21:34,384: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:34,385: root: INFO: Current backtesting datetime 2023-06-07 15:59:00-04:00
2024-05-31 17:21:34,386: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:34,387: root: INFO: Current backtesting datetime 2023-06-07 16:00:00-04:00
2024-05-31 17:21:34,388: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:34,389: root: INFO: Current backtesting datetime 2023-06-08 08:30:00-04:00
2024-05-31 17:21:34,390: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:34,390: root: INFO: Current backtesting datetime 2023-06-08 09:30:00-04:00
2024-05-31 17:21:34,391: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:34,396: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,396: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,398: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,400: root: INFO: Current backtesting datetime 2023-06-08 10:00:00-04:00
2024-05-31 17:21:34,395: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:21:34,400: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,401: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,402: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,404: root: INFO: Current backtesting datetime 2023-06-08 10:30:00-04:00
2024-05-31 17:21:34,404: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,405: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,406: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,407: root: INFO: Current backtesting datetime 2023-06-08 11:00:00-04:00
2024-05-31 17:21:34,408: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,408: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,409: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,411: root: INFO: Current backtesting datetime 2023-06-08 11:30:00-04:00
2024-05-31 17:21:34,412: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,412: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,413: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,414: root: INFO: Current backtesting datetime 2023-06-08 12:00:00-04:00
2024-05-31 17:21:34,415: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,415: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,417: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,418: root: INFO: Current backtesting datetime 2023-06-08 12:30:00-04:00
2024-05-31 17:21:34,419: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,420: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,420: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,421: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:21:34,422: root: INFO: Current backtesting datetime 2023-06-08 13:00:00-04:00
2024-05-31 17:21:34,423: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,423: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,424: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,425: root: INFO: Current backtesting datetime 2023-06-08 13:30:00-04:00
2024-05-31 17:21:34,426: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,426: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,427: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,429: root: INFO: Current backtesting datetime 2023-06-08 14:00:00-04:00
2024-05-31 17:21:34,429: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,430: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,431: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,432: root: INFO: Current backtesting datetime 2023-06-08 14:30:00-04:00
2024-05-31 17:21:34,433: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,433: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,434: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,435: root: INFO: Current backtesting datetime 2023-06-08 15:00:00-04:00
2024-05-31 17:21:34,437: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,437: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,438: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,439: root: INFO: Current backtesting datetime 2023-06-08 15:30:00-04:00
2024-05-31 17:21:34,440: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,440: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,443: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,444: root: INFO: Current backtesting datetime 2023-06-08 16:00:00-04:00
2024-05-31 17:21:34,445: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:34,446: root: INFO: Current backtesting datetime 2023-06-08 15:59:00-04:00
2024-05-31 17:21:34,446: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:34,447: root: INFO: Current backtesting datetime 2023-06-08 16:00:00-04:00
2024-05-31 17:21:34,447: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:34,447: root: INFO: Current backtesting datetime 2023-06-09 08:30:00-04:00
2024-05-31 17:21:34,448: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:34,448: root: INFO: Current backtesting datetime 2023-06-09 09:30:00-04:00
2024-05-31 17:21:34,448: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:34,449: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,449: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,450: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,451: root: INFO: Current backtesting datetime 2023-06-09 10:00:00-04:00
2024-05-31 17:21:34,451: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,451: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,452: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,453: root: INFO: Current backtesting datetime 2023-06-09 10:30:00-04:00
2024-05-31 17:21:34,453: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,453: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,455: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,455: root: INFO: Current backtesting datetime 2023-06-09 11:00:00-04:00
2024-05-31 17:21:34,456: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,458: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,459: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,460: root: INFO: Current backtesting datetime 2023-06-09 11:30:00-04:00
2024-05-31 17:21:34,460: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,461: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,462: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,462: root: INFO: Current backtesting datetime 2023-06-09 12:00:00-04:00
2024-05-31 17:21:34,463: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,463: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,464: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,465: root: INFO: Current backtesting datetime 2023-06-09 12:30:00-04:00
2024-05-31 17:21:34,466: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,466: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,466: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,467: root: INFO: Current backtesting datetime 2023-06-09 13:00:00-04:00
2024-05-31 17:21:34,468: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,468: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,469: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,470: root: INFO: Current backtesting datetime 2023-06-09 13:30:00-04:00
2024-05-31 17:21:34,470: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,470: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,471: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,472: root: INFO: Current backtesting datetime 2023-06-09 14:00:00-04:00
2024-05-31 17:21:34,473: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,473: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,473: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,474: root: INFO: Current backtesting datetime 2023-06-09 14:30:00-04:00
2024-05-31 17:21:34,474: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,474: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,476: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,476: root: INFO: Current backtesting datetime 2023-06-09 15:00:00-04:00
2024-05-31 17:21:34,476: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,477: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,477: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,478: root: INFO: Current backtesting datetime 2023-06-09 15:30:00-04:00
2024-05-31 17:21:34,479: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,479: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,480: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,480: root: INFO: Current backtesting datetime 2023-06-09 16:00:00-04:00
2024-05-31 17:21:34,481: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:34,482: root: INFO: Current backtesting datetime 2023-06-09 15:59:00-04:00
2024-05-31 17:21:34,482: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:34,483: root: INFO: Current backtesting datetime 2023-06-09 16:00:00-04:00
2024-05-31 17:21:34,483: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:34,483: root: INFO: Current backtesting datetime 2023-06-12 08:30:00-04:00
2024-05-31 17:21:34,484: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:34,485: root: INFO: Current backtesting datetime 2023-06-12 09:30:00-04:00
2024-05-31 17:21:34,485: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:34,486: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,486: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,487: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,488: root: INFO: Current backtesting datetime 2023-06-12 10:00:00-04:00
2024-05-31 17:21:34,488: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,488: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,489: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,489: root: INFO: Current backtesting datetime 2023-06-12 10:30:00-04:00
2024-05-31 17:21:34,490: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,490: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,490: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,491: root: INFO: Current backtesting datetime 2023-06-12 11:00:00-04:00
2024-05-31 17:21:34,492: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,492: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,493: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,493: root: INFO: Current backtesting datetime 2023-06-12 11:30:00-04:00
2024-05-31 17:21:34,494: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,494: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,495: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,495: root: INFO: Current backtesting datetime 2023-06-12 12:00:00-04:00
2024-05-31 17:21:34,495: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,495: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,496: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,497: root: INFO: Current backtesting datetime 2023-06-12 12:30:00-04:00
2024-05-31 17:21:34,497: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,498: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,498: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,499: root: INFO: Current backtesting datetime 2023-06-12 13:00:00-04:00
2024-05-31 17:21:34,499: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,499: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,500: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,501: root: INFO: Current backtesting datetime 2023-06-12 13:30:00-04:00
2024-05-31 17:21:34,501: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,501: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,502: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,502: root: INFO: Current backtesting datetime 2023-06-12 14:00:00-04:00
2024-05-31 17:21:34,503: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,503: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,503: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,504: root: INFO: Current backtesting datetime 2023-06-12 14:30:00-04:00
2024-05-31 17:21:34,504: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,504: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,506: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,506: root: INFO: Current backtesting datetime 2023-06-12 15:00:00-04:00
2024-05-31 17:21:34,507: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,507: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,507: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,508: root: INFO: Current backtesting datetime 2023-06-12 15:30:00-04:00
2024-05-31 17:21:34,509: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,509: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,509: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,510: root: INFO: Current backtesting datetime 2023-06-12 16:00:00-04:00
2024-05-31 17:21:34,510: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:34,511: root: INFO: Current backtesting datetime 2023-06-12 15:59:00-04:00
2024-05-31 17:21:34,512: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:34,512: root: INFO: Current backtesting datetime 2023-06-12 16:00:00-04:00
2024-05-31 17:21:34,512: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:34,513: root: INFO: Current backtesting datetime 2023-06-13 08:30:00-04:00
2024-05-31 17:21:34,513: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:34,514: root: INFO: Current backtesting datetime 2023-06-13 09:30:00-04:00
2024-05-31 17:21:34,514: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:34,515: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,515: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,515: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,516: root: INFO: Current backtesting datetime 2023-06-13 10:00:00-04:00
2024-05-31 17:21:34,517: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,517: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,517: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,518: root: INFO: Current backtesting datetime 2023-06-13 10:30:00-04:00
2024-05-31 17:21:34,518: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,519: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,519: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,520: root: INFO: Current backtesting datetime 2023-06-13 11:00:00-04:00
2024-05-31 17:21:34,520: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,520: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,521: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,522: root: INFO: Current backtesting datetime 2023-06-13 11:30:00-04:00
2024-05-31 17:21:34,522: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,522: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,523: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,523: root: INFO: Current backtesting datetime 2023-06-13 12:00:00-04:00
2024-05-31 17:21:34,524: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,524: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,524: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,525: root: INFO: Current backtesting datetime 2023-06-13 12:30:00-04:00
2024-05-31 17:21:34,525: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,526: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,526: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,527: root: INFO: Current backtesting datetime 2023-06-13 13:00:00-04:00
2024-05-31 17:21:34,527: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,528: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,528: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,529: root: INFO: Current backtesting datetime 2023-06-13 13:30:00-04:00
2024-05-31 17:21:34,529: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,529: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,530: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,531: root: INFO: Current backtesting datetime 2023-06-13 14:00:00-04:00
2024-05-31 17:21:34,531: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,531: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,532: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,533: root: INFO: Current backtesting datetime 2023-06-13 14:30:00-04:00
2024-05-31 17:21:34,533: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,533: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,534: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,554: root: INFO: Current backtesting datetime 2023-06-13 15:00:00-04:00
2024-05-31 17:21:34,555: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,555: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,556: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,557: root: INFO: Current backtesting datetime 2023-06-13 15:30:00-04:00
2024-05-31 17:21:34,557: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,557: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,558: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,559: root: INFO: Current backtesting datetime 2023-06-13 16:00:00-04:00
2024-05-31 17:21:34,559: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:34,560: root: INFO: Current backtesting datetime 2023-06-13 15:59:00-04:00
2024-05-31 17:21:34,561: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:34,561: root: INFO: Current backtesting datetime 2023-06-13 16:00:00-04:00
2024-05-31 17:21:34,561: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:34,562: root: INFO: Current backtesting datetime 2023-06-14 08:30:00-04:00
2024-05-31 17:21:34,562: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:34,563: root: INFO: Current backtesting datetime 2023-06-14 09:30:00-04:00
2024-05-31 17:21:34,563: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:34,564: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,564: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,565: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,565: root: INFO: Current backtesting datetime 2023-06-14 10:00:00-04:00
2024-05-31 17:21:34,566: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,566: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,566: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,567: root: INFO: Current backtesting datetime 2023-06-14 10:30:00-04:00
2024-05-31 17:21:34,568: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,568: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,568: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,570: root: INFO: Current backtesting datetime 2023-06-14 11:00:00-04:00
2024-05-31 17:21:34,570: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,571: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,571: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,572: root: INFO: Current backtesting datetime 2023-06-14 11:30:00-04:00
2024-05-31 17:21:34,572: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,572: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,573: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,573: root: INFO: Current backtesting datetime 2023-06-14 12:00:00-04:00
2024-05-31 17:21:34,573: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,574: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,574: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,575: root: INFO: Current backtesting datetime 2023-06-14 12:30:00-04:00
2024-05-31 17:21:34,575: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,576: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,577: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,577: root: INFO: Current backtesting datetime 2023-06-14 13:00:00-04:00
2024-05-31 17:21:34,578: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,578: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,579: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,579: root: INFO: Current backtesting datetime 2023-06-14 13:30:00-04:00
2024-05-31 17:21:34,579: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,580: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,580: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,581: root: INFO: Current backtesting datetime 2023-06-14 14:00:00-04:00
2024-05-31 17:21:34,581: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,582: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,582: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,583: root: INFO: Current backtesting datetime 2023-06-14 14:30:00-04:00
2024-05-31 17:21:34,583: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,584: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,584: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,584: root: INFO: Current backtesting datetime 2023-06-14 15:00:00-04:00
2024-05-31 17:21:34,586: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,586: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,586: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,587: root: INFO: Current backtesting datetime 2023-06-14 15:30:00-04:00
2024-05-31 17:21:34,587: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,588: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,588: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,589: root: INFO: Current backtesting datetime 2023-06-14 16:00:00-04:00
2024-05-31 17:21:34,589: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:34,590: root: INFO: Current backtesting datetime 2023-06-14 15:59:00-04:00
2024-05-31 17:21:34,591: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:34,591: root: INFO: Current backtesting datetime 2023-06-14 16:00:00-04:00
2024-05-31 17:21:34,591: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:34,592: root: INFO: Current backtesting datetime 2023-06-15 08:30:00-04:00
2024-05-31 17:21:34,592: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:34,592: root: INFO: Current backtesting datetime 2023-06-15 09:30:00-04:00
2024-05-31 17:21:34,594: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:34,594: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,594: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,595: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,595: root: INFO: Current backtesting datetime 2023-06-15 10:00:00-04:00
2024-05-31 17:21:34,596: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,596: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,597: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,597: root: INFO: Current backtesting datetime 2023-06-15 10:30:00-04:00
2024-05-31 17:21:34,598: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,598: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,599: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,599: root: INFO: Current backtesting datetime 2023-06-15 11:00:00-04:00
2024-05-31 17:21:34,599: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,599: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,601: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,601: root: INFO: Current backtesting datetime 2023-06-15 11:30:00-04:00
2024-05-31 17:21:34,602: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,602: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,602: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,603: root: INFO: Current backtesting datetime 2023-06-15 12:00:00-04:00
2024-05-31 17:21:34,604: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,604: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,604: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,605: root: INFO: Current backtesting datetime 2023-06-15 12:30:00-04:00
2024-05-31 17:21:34,605: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,605: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,606: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,607: root: INFO: Current backtesting datetime 2023-06-15 13:00:00-04:00
2024-05-31 17:21:34,607: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,608: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,608: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,608: root: INFO: Current backtesting datetime 2023-06-15 13:30:00-04:00
2024-05-31 17:21:34,609: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,609: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,610: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,611: root: INFO: Current backtesting datetime 2023-06-15 14:00:00-04:00
2024-05-31 17:21:34,612: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,612: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,612: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,614: root: INFO: Current backtesting datetime 2023-06-15 14:30:00-04:00
2024-05-31 17:21:34,614: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,614: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,615: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,615: root: INFO: Current backtesting datetime 2023-06-15 15:00:00-04:00
2024-05-31 17:21:34,615: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,616: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,616: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,617: root: INFO: Current backtesting datetime 2023-06-15 15:30:00-04:00
2024-05-31 17:21:34,617: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,618: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,619: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,619: root: INFO: Current backtesting datetime 2023-06-15 16:00:00-04:00
2024-05-31 17:21:34,620: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:34,621: root: INFO: Current backtesting datetime 2023-06-15 15:59:00-04:00
2024-05-31 17:21:34,621: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:34,622: root: INFO: Current backtesting datetime 2023-06-15 16:00:00-04:00
2024-05-31 17:21:34,622: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:34,622: root: INFO: Current backtesting datetime 2023-06-16 08:30:00-04:00
2024-05-31 17:21:34,622: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:34,624: root: INFO: Current backtesting datetime 2023-06-16 09:30:00-04:00
2024-05-31 17:21:34,624: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:34,625: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,625: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,625: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,626: root: INFO: Current backtesting datetime 2023-06-16 10:00:00-04:00
2024-05-31 17:21:34,626: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,626: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,627: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,628: root: INFO: Current backtesting datetime 2023-06-16 10:30:00-04:00
2024-05-31 17:21:34,628: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,628: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,629: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,630: root: INFO: Current backtesting datetime 2023-06-16 11:00:00-04:00
2024-05-31 17:21:34,630: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,631: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,631: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,632: root: INFO: Current backtesting datetime 2023-06-16 11:30:00-04:00
2024-05-31 17:21:34,632: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,633: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,633: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,633: root: INFO: Current backtesting datetime 2023-06-16 12:00:00-04:00
2024-05-31 17:21:34,634: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,634: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,634: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,636: root: INFO: Current backtesting datetime 2023-06-16 12:30:00-04:00
2024-05-31 17:21:34,636: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,636: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,637: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,638: root: INFO: Current backtesting datetime 2023-06-16 13:00:00-04:00
2024-05-31 17:21:34,638: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,638: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,639: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,639: root: INFO: Current backtesting datetime 2023-06-16 13:30:00-04:00
2024-05-31 17:21:34,641: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,641: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,641: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,642: root: INFO: Current backtesting datetime 2023-06-16 14:00:00-04:00
2024-05-31 17:21:34,643: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,643: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,643: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,644: root: INFO: Current backtesting datetime 2023-06-16 14:30:00-04:00
2024-05-31 17:21:34,645: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,645: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,645: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,646: root: INFO: Current backtesting datetime 2023-06-16 15:00:00-04:00
2024-05-31 17:21:34,646: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,646: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,647: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,648: root: INFO: Current backtesting datetime 2023-06-16 15:30:00-04:00
2024-05-31 17:21:34,648: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,648: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,648: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,650: root: INFO: Current backtesting datetime 2023-06-16 16:00:00-04:00
2024-05-31 17:21:34,650: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:34,652: root: INFO: Current backtesting datetime 2023-06-16 15:59:00-04:00
2024-05-31 17:21:34,652: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:34,653: root: INFO: Current backtesting datetime 2023-06-16 16:00:00-04:00
2024-05-31 17:21:34,653: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:34,654: root: INFO: Current backtesting datetime 2023-06-20 08:30:00-04:00
2024-05-31 17:21:34,654: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:34,655: root: INFO: Current backtesting datetime 2023-06-20 09:30:00-04:00
2024-05-31 17:21:34,655: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:34,655: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,656: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,656: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,656: root: INFO: Current backtesting datetime 2023-06-20 10:00:00-04:00
2024-05-31 17:21:34,657: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,657: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,658: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,659: root: INFO: Current backtesting datetime 2023-06-20 10:30:00-04:00
2024-05-31 17:21:34,659: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,660: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,661: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,661: root: INFO: Current backtesting datetime 2023-06-20 11:00:00-04:00
2024-05-31 17:21:34,662: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,662: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,663: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,663: root: INFO: Current backtesting datetime 2023-06-20 11:30:00-04:00
2024-05-31 17:21:34,664: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,664: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,664: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,665: root: INFO: Current backtesting datetime 2023-06-20 12:00:00-04:00
2024-05-31 17:21:34,666: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,666: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,666: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,667: root: INFO: Current backtesting datetime 2023-06-20 12:30:00-04:00
2024-05-31 17:21:34,668: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,668: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,669: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,669: root: INFO: Current backtesting datetime 2023-06-20 13:00:00-04:00
2024-05-31 17:21:34,671: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,671: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,671: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,669: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:21:34,675: root: INFO: Current backtesting datetime 2023-06-20 13:30:00-04:00
2024-05-31 17:21:34,675: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,676: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,677: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,678: root: INFO: Current backtesting datetime 2023-06-20 14:00:00-04:00
2024-05-31 17:21:34,678: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,678: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,679: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,680: root: INFO: Current backtesting datetime 2023-06-20 14:30:00-04:00
2024-05-31 17:21:34,680: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,680: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,681: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,681: root: INFO: Current backtesting datetime 2023-06-20 15:00:00-04:00
2024-05-31 17:21:34,682: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,682: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,682: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,683: root: INFO: Current backtesting datetime 2023-06-20 15:30:00-04:00
2024-05-31 17:21:34,683: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,684: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,684: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,685: root: INFO: Current backtesting datetime 2023-06-20 16:00:00-04:00
2024-05-31 17:21:34,685: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:34,687: root: INFO: Current backtesting datetime 2023-06-20 15:59:00-04:00
2024-05-31 17:21:34,687: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:34,688: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:21:34,688: root: INFO: Current backtesting datetime 2023-06-20 16:00:00-04:00
2024-05-31 17:21:34,688: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:34,689: root: INFO: Current backtesting datetime 2023-06-21 08:30:00-04:00
2024-05-31 17:21:34,689: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:34,690: root: INFO: Current backtesting datetime 2023-06-21 09:30:00-04:00
2024-05-31 17:21:34,690: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:34,690: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,692: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,692: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,693: root: INFO: Current backtesting datetime 2023-06-21 10:00:00-04:00
2024-05-31 17:21:34,693: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,694: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,694: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,695: root: INFO: Current backtesting datetime 2023-06-21 10:30:00-04:00
2024-05-31 17:21:34,695: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,695: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,696: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,696: root: INFO: Current backtesting datetime 2023-06-21 11:00:00-04:00
2024-05-31 17:21:34,697: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,697: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,698: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,698: root: INFO: Current backtesting datetime 2023-06-21 11:30:00-04:00
2024-05-31 17:21:34,699: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,699: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,700: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,700: root: INFO: Current backtesting datetime 2023-06-21 12:00:00-04:00
2024-05-31 17:21:34,701: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,701: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,701: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,702: root: INFO: Current backtesting datetime 2023-06-21 12:30:00-04:00
2024-05-31 17:21:34,702: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,703: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,703: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,704: root: INFO: Current backtesting datetime 2023-06-21 13:00:00-04:00
2024-05-31 17:21:34,704: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,705: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,705: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,706: root: INFO: Current backtesting datetime 2023-06-21 13:30:00-04:00
2024-05-31 17:21:34,706: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,707: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,708: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,709: root: INFO: Current backtesting datetime 2023-06-21 14:00:00-04:00
2024-05-31 17:21:34,709: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,709: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,710: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,711: root: INFO: Current backtesting datetime 2023-06-21 14:30:00-04:00
2024-05-31 17:21:34,711: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,711: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,711: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,712: root: INFO: Current backtesting datetime 2023-06-21 15:00:00-04:00
2024-05-31 17:21:34,712: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,713: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,713: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,714: root: INFO: Current backtesting datetime 2023-06-21 15:30:00-04:00
2024-05-31 17:21:34,714: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,715: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,715: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,716: root: INFO: Current backtesting datetime 2023-06-21 16:00:00-04:00
2024-05-31 17:21:34,716: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:34,717: root: INFO: Current backtesting datetime 2023-06-21 15:59:00-04:00
2024-05-31 17:21:34,718: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:34,718: root: INFO: Current backtesting datetime 2023-06-21 16:00:00-04:00
2024-05-31 17:21:34,718: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:34,719: root: INFO: Current backtesting datetime 2023-06-22 08:30:00-04:00
2024-05-31 17:21:34,719: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:34,720: root: INFO: Current backtesting datetime 2023-06-22 09:30:00-04:00
2024-05-31 17:21:34,720: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:34,721: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,721: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,722: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,723: root: INFO: Current backtesting datetime 2023-06-22 10:00:00-04:00
2024-05-31 17:21:34,724: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,724: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,724: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,725: root: INFO: Current backtesting datetime 2023-06-22 10:30:00-04:00
2024-05-31 17:21:34,725: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,726: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,726: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,726: root: INFO: Current backtesting datetime 2023-06-22 11:00:00-04:00
2024-05-31 17:21:34,727: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,727: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,728: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,728: root: INFO: Current backtesting datetime 2023-06-22 11:30:00-04:00
2024-05-31 17:21:34,729: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,729: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,730: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,731: root: INFO: Current backtesting datetime 2023-06-22 12:00:00-04:00
2024-05-31 17:21:34,731: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,732: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,732: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,733: root: INFO: Current backtesting datetime 2023-06-22 12:30:00-04:00
2024-05-31 17:21:34,733: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,733: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,734: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,735: root: INFO: Current backtesting datetime 2023-06-22 13:00:00-04:00
2024-05-31 17:21:34,735: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,735: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,736: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,736: root: INFO: Current backtesting datetime 2023-06-22 13:30:00-04:00
2024-05-31 17:21:34,738: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,738: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,739: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,739: root: INFO: Current backtesting datetime 2023-06-22 14:00:00-04:00
2024-05-31 17:21:34,740: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,740: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,740: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,741: root: INFO: Current backtesting datetime 2023-06-22 14:30:00-04:00
2024-05-31 17:21:34,742: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,742: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,743: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,744: root: INFO: Current backtesting datetime 2023-06-22 15:00:00-04:00
2024-05-31 17:21:34,745: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,745: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,746: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,746: root: INFO: Current backtesting datetime 2023-06-22 15:30:00-04:00
2024-05-31 17:21:34,746: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,746: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,746: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,748: root: INFO: Current backtesting datetime 2023-06-22 16:00:00-04:00
2024-05-31 17:21:34,748: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:34,750: root: INFO: Current backtesting datetime 2023-06-22 15:59:00-04:00
2024-05-31 17:21:34,750: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:34,751: root: INFO: Current backtesting datetime 2023-06-22 16:00:00-04:00
2024-05-31 17:21:34,751: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:34,752: root: INFO: Current backtesting datetime 2023-06-23 08:30:00-04:00
2024-05-31 17:21:34,752: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:34,752: root: INFO: Current backtesting datetime 2023-06-23 09:30:00-04:00
2024-05-31 17:21:34,752: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:34,753: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,753: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,754: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,754: root: INFO: Current backtesting datetime 2023-06-23 10:00:00-04:00
2024-05-31 17:21:34,755: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,755: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,756: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,756: root: INFO: Current backtesting datetime 2023-06-23 10:30:00-04:00
2024-05-31 17:21:34,757: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,758: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,758: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,759: root: INFO: Current backtesting datetime 2023-06-23 11:00:00-04:00
2024-05-31 17:21:34,759: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,759: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,760: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,760: root: INFO: Current backtesting datetime 2023-06-23 11:30:00-04:00
2024-05-31 17:21:34,761: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,761: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,761: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,762: root: INFO: Current backtesting datetime 2023-06-23 12:00:00-04:00
2024-05-31 17:21:34,762: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,762: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,764: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,765: root: INFO: Current backtesting datetime 2023-06-23 12:30:00-04:00
2024-05-31 17:21:34,765: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,765: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,765: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,766: root: INFO: Current backtesting datetime 2023-06-23 13:00:00-04:00
2024-05-31 17:21:34,766: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,767: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,767: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,767: root: INFO: Current backtesting datetime 2023-06-23 13:30:00-04:00
2024-05-31 17:21:34,769: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,769: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,769: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,770: root: INFO: Current backtesting datetime 2023-06-23 14:00:00-04:00
2024-05-31 17:21:34,770: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,771: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,771: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,772: root: INFO: Current backtesting datetime 2023-06-23 14:30:00-04:00
2024-05-31 17:21:34,772: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,773: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,773: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,774: root: INFO: Current backtesting datetime 2023-06-23 15:00:00-04:00
2024-05-31 17:21:34,774: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,774: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,775: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,775: root: INFO: Current backtesting datetime 2023-06-23 15:30:00-04:00
2024-05-31 17:21:34,775: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,775: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,776: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,777: root: INFO: Current backtesting datetime 2023-06-23 16:00:00-04:00
2024-05-31 17:21:34,777: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:34,779: root: INFO: Current backtesting datetime 2023-06-23 15:59:00-04:00
2024-05-31 17:21:34,779: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:34,780: root: INFO: Current backtesting datetime 2023-06-23 16:00:00-04:00
2024-05-31 17:21:34,780: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:34,780: root: INFO: Current backtesting datetime 2023-06-26 08:30:00-04:00
2024-05-31 17:21:34,781: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:34,781: root: INFO: Current backtesting datetime 2023-06-26 09:30:00-04:00
2024-05-31 17:21:34,781: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:34,782: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,783: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,783: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,784: root: INFO: Current backtesting datetime 2023-06-26 10:00:00-04:00
2024-05-31 17:21:34,784: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,784: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,785: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,785: root: INFO: Current backtesting datetime 2023-06-26 10:30:00-04:00
2024-05-31 17:21:34,786: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,787: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,787: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,788: root: INFO: Current backtesting datetime 2023-06-26 11:00:00-04:00
2024-05-31 17:21:34,788: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,788: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,789: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,789: root: INFO: Current backtesting datetime 2023-06-26 11:30:00-04:00
2024-05-31 17:21:34,789: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,790: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,790: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,791: root: INFO: Current backtesting datetime 2023-06-26 12:00:00-04:00
2024-05-31 17:21:34,791: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,791: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,792: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,793: root: INFO: Current backtesting datetime 2023-06-26 12:30:00-04:00
2024-05-31 17:21:34,793: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,793: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,794: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,795: root: INFO: Current backtesting datetime 2023-06-26 13:00:00-04:00
2024-05-31 17:21:34,795: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,795: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,795: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,796: root: INFO: Current backtesting datetime 2023-06-26 13:30:00-04:00
2024-05-31 17:21:34,796: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,796: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,797: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,798: root: INFO: Current backtesting datetime 2023-06-26 14:00:00-04:00
2024-05-31 17:21:34,798: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,799: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,800: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,800: root: INFO: Current backtesting datetime 2023-06-26 14:30:00-04:00
2024-05-31 17:21:34,801: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,801: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,801: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,802: root: INFO: Current backtesting datetime 2023-06-26 15:00:00-04:00
2024-05-31 17:21:34,802: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,803: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,803: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,823: root: INFO: Current backtesting datetime 2023-06-26 15:30:00-04:00
2024-05-31 17:21:34,824: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,824: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,825: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,826: root: INFO: Current backtesting datetime 2023-06-26 16:00:00-04:00
2024-05-31 17:21:34,827: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:34,828: root: INFO: Current backtesting datetime 2023-06-26 15:59:00-04:00
2024-05-31 17:21:34,828: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:34,829: root: INFO: Current backtesting datetime 2023-06-26 16:00:00-04:00
2024-05-31 17:21:34,829: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:34,829: root: INFO: Current backtesting datetime 2023-06-27 08:30:00-04:00
2024-05-31 17:21:34,829: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:34,830: root: INFO: Current backtesting datetime 2023-06-27 09:30:00-04:00
2024-05-31 17:21:34,830: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:34,831: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,831: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,831: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,832: root: INFO: Current backtesting datetime 2023-06-27 10:00:00-04:00
2024-05-31 17:21:34,833: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,833: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,833: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,834: root: INFO: Current backtesting datetime 2023-06-27 10:30:00-04:00
2024-05-31 17:21:34,834: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,834: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,836: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,836: root: INFO: Current backtesting datetime 2023-06-27 11:00:00-04:00
2024-05-31 17:21:34,836: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,837: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,837: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,838: root: INFO: Current backtesting datetime 2023-06-27 11:30:00-04:00
2024-05-31 17:21:34,838: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,838: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,839: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,841: root: INFO: Current backtesting datetime 2023-06-27 12:00:00-04:00
2024-05-31 17:21:34,841: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,842: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,842: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,843: root: INFO: Current backtesting datetime 2023-06-27 12:30:00-04:00
2024-05-31 17:21:34,843: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,843: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,844: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,845: root: INFO: Current backtesting datetime 2023-06-27 13:00:00-04:00
2024-05-31 17:21:34,845: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,845: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,845: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,846: root: INFO: Current backtesting datetime 2023-06-27 13:30:00-04:00
2024-05-31 17:21:34,847: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,847: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,847: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,848: root: INFO: Current backtesting datetime 2023-06-27 14:00:00-04:00
2024-05-31 17:21:34,849: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,849: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,849: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,849: root: INFO: Current backtesting datetime 2023-06-27 14:30:00-04:00
2024-05-31 17:21:34,851: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,851: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,852: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,852: root: INFO: Current backtesting datetime 2023-06-27 15:00:00-04:00
2024-05-31 17:21:34,853: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,853: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,854: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,854: root: INFO: Current backtesting datetime 2023-06-27 15:30:00-04:00
2024-05-31 17:21:34,855: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,855: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,855: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,856: root: INFO: Current backtesting datetime 2023-06-27 16:00:00-04:00
2024-05-31 17:21:34,856: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:34,857: root: INFO: Current backtesting datetime 2023-06-27 15:59:00-04:00
2024-05-31 17:21:34,858: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:34,858: root: INFO: Current backtesting datetime 2023-06-27 16:00:00-04:00
2024-05-31 17:21:34,858: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:34,859: root: INFO: Current backtesting datetime 2023-06-28 08:30:00-04:00
2024-05-31 17:21:34,859: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:34,860: root: INFO: Current backtesting datetime 2023-06-28 09:30:00-04:00
2024-05-31 17:21:34,860: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:34,862: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,862: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,862: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,863: root: INFO: Current backtesting datetime 2023-06-28 10:00:00-04:00
2024-05-31 17:21:34,863: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,864: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,864: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,864: root: INFO: Current backtesting datetime 2023-06-28 10:30:00-04:00
2024-05-31 17:21:34,865: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,865: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,868: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,869: root: INFO: Current backtesting datetime 2023-06-28 11:00:00-04:00
2024-05-31 17:21:34,869: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,870: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,870: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,870: root: INFO: Current backtesting datetime 2023-06-28 11:30:00-04:00
2024-05-31 17:21:34,871: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,871: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,872: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,872: root: INFO: Current backtesting datetime 2023-06-28 12:00:00-04:00
2024-05-31 17:21:34,873: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,873: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,874: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,874: root: INFO: Current backtesting datetime 2023-06-28 12:30:00-04:00
2024-05-31 17:21:34,874: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,876: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,876: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,877: root: INFO: Current backtesting datetime 2023-06-28 13:00:00-04:00
2024-05-31 17:21:34,877: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,877: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,878: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,878: root: INFO: Current backtesting datetime 2023-06-28 13:30:00-04:00
2024-05-31 17:21:34,879: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,879: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,880: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,880: root: INFO: Current backtesting datetime 2023-06-28 14:00:00-04:00
2024-05-31 17:21:34,881: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,882: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,882: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,883: root: INFO: Current backtesting datetime 2023-06-28 14:30:00-04:00
2024-05-31 17:21:34,883: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,883: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,884: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,884: root: INFO: Current backtesting datetime 2023-06-28 15:00:00-04:00
2024-05-31 17:21:34,885: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,885: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,885: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,886: root: INFO: Current backtesting datetime 2023-06-28 15:30:00-04:00
2024-05-31 17:21:34,886: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,886: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,887: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,887: root: INFO: Current backtesting datetime 2023-06-28 16:00:00-04:00
2024-05-31 17:21:34,888: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:34,889: root: INFO: Current backtesting datetime 2023-06-28 15:59:00-04:00
2024-05-31 17:21:34,889: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:34,890: root: INFO: Current backtesting datetime 2023-06-28 16:00:00-04:00
2024-05-31 17:21:34,890: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:34,890: root: INFO: Current backtesting datetime 2023-06-29 08:30:00-04:00
2024-05-31 17:21:34,890: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:34,892: root: INFO: Current backtesting datetime 2023-06-29 09:30:00-04:00
2024-05-31 17:21:34,892: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:34,893: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,893: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,894: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,894: root: INFO: Current backtesting datetime 2023-06-29 10:00:00-04:00
2024-05-31 17:21:34,895: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,895: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,896: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,896: root: INFO: Current backtesting datetime 2023-06-29 10:30:00-04:00
2024-05-31 17:21:34,897: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,897: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,898: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,898: root: INFO: Current backtesting datetime 2023-06-29 11:00:00-04:00
2024-05-31 17:21:34,899: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,899: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,900: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,901: root: INFO: Current backtesting datetime 2023-06-29 11:30:00-04:00
2024-05-31 17:21:34,901: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,901: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,902: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,903: root: INFO: Current backtesting datetime 2023-06-29 12:00:00-04:00
2024-05-31 17:21:34,903: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,903: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,904: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,905: root: INFO: Current backtesting datetime 2023-06-29 12:30:00-04:00
2024-05-31 17:21:34,905: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,905: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,906: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,907: root: INFO: Current backtesting datetime 2023-06-29 13:00:00-04:00
2024-05-31 17:21:34,907: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,908: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,908: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,909: root: INFO: Current backtesting datetime 2023-06-29 13:30:00-04:00
2024-05-31 17:21:34,909: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,910: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,910: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,911: root: INFO: Current backtesting datetime 2023-06-29 14:00:00-04:00
2024-05-31 17:21:34,911: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,911: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,912: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,912: root: INFO: Current backtesting datetime 2023-06-29 14:30:00-04:00
2024-05-31 17:21:34,913: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,913: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,914: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,914: root: INFO: Current backtesting datetime 2023-06-29 15:00:00-04:00
2024-05-31 17:21:34,914: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,916: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,916: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,917: root: INFO: Current backtesting datetime 2023-06-29 15:30:00-04:00
2024-05-31 17:21:34,917: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,917: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,918: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,918: root: INFO: Current backtesting datetime 2023-06-29 16:00:00-04:00
2024-05-31 17:21:34,919: asyncio: INFO: [MLTrader] [34mThe market is not currently open, skipping this trading iteration[0m
2024-05-31 17:21:34,920: root: INFO: Current backtesting datetime 2023-06-29 15:59:00-04:00
2024-05-31 17:21:34,920: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:34,921: root: INFO: Current backtesting datetime 2023-06-29 16:00:00-04:00
2024-05-31 17:21:34,921: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:34,921: root: INFO: Current backtesting datetime 2023-06-30 08:30:00-04:00
2024-05-31 17:21:34,921: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-05-31 17:21:34,923: root: INFO: Current backtesting datetime 2023-06-30 09:30:00-04:00
2024-05-31 17:21:34,923: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-05-31 17:21:34,924: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,924: asyncio: INFO: [MLTrader] [34mTrading iteration ended at 2024-05-31 17:21:34[0m
2024-05-31 17:21:34,925: asyncio: INFO: [MLTrader] [34mSleeping for 1800 seconds[0m
2024-05-31 17:21:34,926: root: INFO: Current backtesting datetime 2023-06-30 10:00:00-04:00
2024-05-31 17:21:34,926: root: INFO: Current backtesting datetime 2023-06-30 15:59:00-04:00
2024-05-31 17:21:34,926: asyncio: INFO: [MLTrader] Executing the before_market_closes lifecycle method
2024-05-31 17:21:34,927: root: INFO: Current backtesting datetime 2023-06-30 16:00:00-04:00
2024-05-31 17:21:34,927: asyncio: INFO: [MLTrader] Executing the after_market_closes lifecycle method
2024-05-31 17:21:34,927: asyncio: INFO: [MLTrader] Executing the on_strategy_end lifecycle method
2024-05-31 17:21:34,940: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:21:34,955: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:21:35,212: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:21:35,250: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:21:35,503: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:21:35,512: root: INFO: Backtesting finished
2024-05-31 17:21:35,529: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:21:35,783: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:21:35,814: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:21:36,065: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:21:36,092: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:21:36,343: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:21:36,358: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:21:36,605: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:21:36,625: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:21:36,893: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:21:36,922: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:21:37,169: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:21:37,187: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:21:37,439: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:21:37,470: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:21:37,733: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:21:37,766: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:21:38,022: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:21:38,053: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:21:38,315: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:21:38,338: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:21:38,600: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:21:38,638: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:21:38,917: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:21:38,945: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:21:39,211: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:21:39,240: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:21:39,494: alpaca.trading.stream: ERROR: error during websocket communication: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
Traceback (most recent call last):
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 168, in _run_forever
    await self._start_ws()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 128, in _start_ws
    await self._connect()
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\alpaca\trading\stream.py", line 59, in _connect
    self._ws = await websockets.connect(self._endpoint, **self._websocket_params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 659, in __await_impl_timeout__
    return await asyncio.wait_for(self.__await_impl__(), self.open_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\trygv\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\websockets\legacy\client.py", line 663, in __await_impl__
    _transport, _protocol = await self._create_connection()
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1149, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\base_events.py", line 1182, in _create_connection_transport
    await waiter
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 578, in _on_handshake_complete
    raise handshake_exc
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\asyncio\sslproto.py", line 560, in _do_handshake
    self._sslobj.do_handshake()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.1008.0_x64__qbz5n2kfra8p0\Lib\ssl.py", line 917, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1000)
2024-05-31 17:21:39,523: alpaca.trading.stream: INFO: starting trading websocket connection
2024-05-31 17:21:39,547: backtest_stats: INFO: Backtest took 0:00:08.209286 for a speed of 0.000
